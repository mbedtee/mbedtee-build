diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/Config.in buildroot/Config.in
--- buildroot-ori/Config.in	2025-06-16 15:08:01.196125495 +0800
+++ buildroot/Config.in	2025-06-15 21:00:46.991448244 +0800
@@ -1015,6 +1015,8 @@ source "system/Config.in"
 
 source "linux/Config.in"
 
+source "tee/Config.in"
+
 source "package/Config.in"
 
 source "fs/Config.in"
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_qemu_malta_mips32r2_defconfig buildroot/configs/mbedtee_qemu_malta_mips32r2_defconfig
--- buildroot-ori/configs/mbedtee_qemu_malta_mips32r2_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_qemu_malta_mips32r2_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,36 @@
+BR2_mipsel=y
+BR2_mips_32r2=y
+BR2_TOOLCHAIN_BUILDROOT_UCLIBC=y
+BR2_KERNEL_HEADERS_6_6=y
+BR2_TOOLCHAIN_BUILDROOT_USE_SSP=y
+# BR2_UCLIBC_INSTALL_UTILS is not set
+BR2_GCC_VERSION_14_X=y
+BR2_TOOLCHAIN_BUILDROOT_CXX=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_JLEVEL=32
+BR2_OPTIMIZE_1=y
+BR2_RELRO_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="mips32r2"
+BR2_TARGET_GENERIC_ISSUE="runs on malta mips32r2"
+BR2_INIT_NONE=y
+# BR2_TARGET_ENABLE_ROOT_LOGIN is not set
+# BR2_TARGET_GENERIC_GETTY is not set
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+# BR2_ENABLE_LOCALE_PURGE is not set
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="qemu_malta_mips32r2"
+BR2_PLATFORM_CFG="qemu_malta_mips32r2_defconfig"
+# BR2_PACKAGE_BUSYBOX is not set
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_TARGET_ROOTFS_TAR is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_qemu_sifive_u_riscv32_defconfig buildroot/configs/mbedtee_qemu_sifive_u_riscv32_defconfig
--- buildroot-ori/configs/mbedtee_qemu_sifive_u_riscv32_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_qemu_sifive_u_riscv32_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,32 @@
+BR2_riscv=y
+BR2_RISCV_32=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="riscv32"
+BR2_TARGET_GENERIC_ISSUE="runs on qemu-sifive-u-riscv32"
+BR2_INIT_NONE=y
+# BR2_TARGET_ENABLE_ROOT_LOGIN is not set
+# BR2_TARGET_GENERIC_GETTY is not set
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+# BR2_ENABLE_LOCALE_PURGE is not set
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="qemu_sifive_u_riscv32"
+BR2_PLATFORM_CFG="qemu_sifive_u_riscv32_defconfig"
+# BR2_PACKAGE_BUSYBOX is not set
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_qemu_sifive_u_riscv64_defconfig buildroot/configs/mbedtee_qemu_sifive_u_riscv64_defconfig
--- buildroot-ori/configs/mbedtee_qemu_sifive_u_riscv64_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_qemu_sifive_u_riscv64_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,32 @@
+BR2_riscv=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_JLEVEL=32
+BR2_OPTIMIZE_1=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="riscv64"
+BR2_TARGET_GENERIC_ISSUE="runs on qemu-sifive-u-riscv64"
+BR2_INIT_NONE=y
+# BR2_TARGET_ENABLE_ROOT_LOGIN is not set
+# BR2_TARGET_GENERIC_GETTY is not set
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+# BR2_ENABLE_LOCALE_PURGE is not set
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="qemu_sifive_u_riscv64"
+BR2_PLATFORM_CFG="qemu_sifive_u_riscv64_defconfig"
+# BR2_PACKAGE_BUSYBOX is not set
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_qemu_virt_aarch64_defconfig buildroot/configs/mbedtee_qemu_virt_aarch64_defconfig
--- buildroot-ori/configs/mbedtee_qemu_virt_aarch64_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_qemu_virt_aarch64_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,41 @@
+BR2_aarch64=y
+BR2_cortex_a75=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_SSP_NONE=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="qemu-virt-aarch64"
+BR2_TARGET_GENERIC_ISSUE="aarch64 @ QEMU"
+BR2_ROOTFS_MERGED_USR=y
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+BR2_SYSTEM_DEFAULT_PATH="/bin:/sbin:/usr/bin:/usr/sbin"
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/armv8a_qemu_virt_linux_config"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="qemu_virt_aarch64"
+BR2_PLATFORM_CFG="qemu_virt_aarch64_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_PACKAGE_URANDOM_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MKPASSWD=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_qemu_virt_arm_defconfig buildroot/configs/mbedtee_qemu_virt_arm_defconfig
--- buildroot-ori/configs/mbedtee_qemu_virt_arm_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_qemu_virt_arm_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,44 @@
+BR2_arm=y
+BR2_cortex_a15=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_SSP_NONE=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="qemu-virt-cortex-a15"
+BR2_TARGET_GENERIC_ISSUE="arm @ QEMU virt cortex-a15"
+BR2_ROOTFS_MERGED_USR=y
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+BR2_SYSTEM_DEFAULT_PATH="/bin:/sbin:/usr/bin:/usr/sbin"
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/armv7a_qemu_virt_linux_config"
+BR2_LINUX_KERNEL_IMAGE_TARGET_CUSTOM=y
+BR2_LINUX_KERNEL_IMAGE_TARGET_NAME="Image"
+BR2_LINUX_KERNEL_IMAGE_NAME="Image"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="qemu_virt_arm"
+BR2_PLATFORM_CFG="qemu_virt_arm_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_PACKAGE_URANDOM_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MKPASSWD=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_qemu_virt_riscv32_defconfig buildroot/configs/mbedtee_qemu_virt_riscv32_defconfig
--- buildroot-ori/configs/mbedtee_qemu_virt_riscv32_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_qemu_virt_riscv32_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,32 @@
+BR2_riscv=y
+BR2_RISCV_32=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="riscv32"
+BR2_TARGET_GENERIC_ISSUE="runs on qemu-virt-riscv32"
+BR2_INIT_NONE=y
+# BR2_TARGET_ENABLE_ROOT_LOGIN is not set
+# BR2_TARGET_GENERIC_GETTY is not set
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+# BR2_ENABLE_LOCALE_PURGE is not set
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="qemu_virt_riscv32"
+BR2_PLATFORM_CFG="qemu_virt_riscv32_defconfig"
+# BR2_PACKAGE_BUSYBOX is not set
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_qemu_virt_riscv32_linux_defconfig buildroot/configs/mbedtee_qemu_virt_riscv32_linux_defconfig
--- buildroot-ori/configs/mbedtee_qemu_virt_riscv32_linux_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_qemu_virt_riscv32_linux_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,46 @@
+BR2_riscv=y
+BR2_RISCV_32=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="riscv32"
+BR2_TARGET_GENERIC_ISSUE="runs on qemu-virt-riscv32"
+# BR2_TARGET_ENABLE_ROOT_LOGIN is not set
+# BR2_TARGET_GENERIC_GETTY is not set
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+# BR2_ENABLE_LOCALE_PURGE is not set
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/riscv32_qemu_virt_linux_config"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="qemu_virt_riscv32"
+BR2_PLATFORM_CFG="qemu_virt_riscv32_with_ree_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+BR2_TARGET_OPENSBI=y
+BR2_TARGET_OPENSBI_CUSTOM_VERSION=y
+BR2_TARGET_OPENSBI_CUSTOM_VERSION_VALUE="1.5"
+BR2_TARGET_OPENSBI_PLAT="generic"
+# BR2_TARGET_OPENSBI_INSTALL_DYNAMIC_IMG is not set
+BR2_TARGET_OPENSBI_LINUX_PAYLOAD=y
+BR2_TARGET_OPENSBI_ADDITIONAL_VARIABLES="FW_TEXT_START=0x86000000 FW_FDT_PATH=${BINARIES_DIR}/linux.dtb"
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_qemu_virt_riscv64_defconfig buildroot/configs/mbedtee_qemu_virt_riscv64_defconfig
--- buildroot-ori/configs/mbedtee_qemu_virt_riscv64_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_qemu_virt_riscv64_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,32 @@
+BR2_riscv=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_JLEVEL=32
+BR2_OPTIMIZE_1=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="riscv64"
+BR2_TARGET_GENERIC_ISSUE="runs on qemu-virt-riscv64"
+BR2_INIT_NONE=y
+# BR2_TARGET_ENABLE_ROOT_LOGIN is not set
+# BR2_TARGET_GENERIC_GETTY is not set
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+# BR2_ENABLE_LOCALE_PURGE is not set
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="qemu_virt_riscv64"
+BR2_PLATFORM_CFG="qemu_virt_riscv64_defconfig"
+# BR2_PACKAGE_BUSYBOX is not set
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_qemu_virt_riscv64_linux_defconfig buildroot/configs/mbedtee_qemu_virt_riscv64_linux_defconfig
--- buildroot-ori/configs/mbedtee_qemu_virt_riscv64_linux_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_qemu_virt_riscv64_linux_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,45 @@
+BR2_riscv=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="riscv64"
+BR2_TARGET_GENERIC_ISSUE="runs on qemu-virt-riscv64"
+# BR2_TARGET_ENABLE_ROOT_LOGIN is not set
+# BR2_TARGET_GENERIC_GETTY is not set
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+# BR2_ENABLE_LOCALE_PURGE is not set
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/riscv64_qemu_virt_linux_config"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="qemu_virt_riscv64"
+BR2_PLATFORM_CFG="qemu_virt_riscv64_with_ree_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+BR2_TARGET_OPENSBI=y
+BR2_TARGET_OPENSBI_CUSTOM_VERSION=y
+BR2_TARGET_OPENSBI_CUSTOM_VERSION_VALUE="1.5"
+BR2_TARGET_OPENSBI_PLAT="generic"
+# BR2_TARGET_OPENSBI_INSTALL_DYNAMIC_IMG is not set
+BR2_TARGET_OPENSBI_LINUX_PAYLOAD=y
+BR2_TARGET_OPENSBI_ADDITIONAL_VARIABLES="FW_TEXT_START=0x86000000 FW_FDT_PATH=${BINARIES_DIR}/linux.dtb"
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_salix_soc_mips74k_defconfig buildroot/configs/mbedtee_salix_soc_mips74k_defconfig
--- buildroot-ori/configs/mbedtee_salix_soc_mips74k_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_salix_soc_mips74k_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,34 @@
+BR2_mipsel=y
+BR2_mips_32r2=y
+BR2_KERNEL_HEADERS_6_6=y
+BR2_GCC_VERSION_14_X=y
+BR2_TOOLCHAIN_BUILDROOT_CXX=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_JLEVEL=32
+BR2_OPTIMIZE_1=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="mips32r2"
+BR2_TARGET_GENERIC_ISSUE="runs on mips74k"
+BR2_INIT_NONE=y
+# BR2_TARGET_ENABLE_ROOT_LOGIN is not set
+# BR2_TARGET_GENERIC_GETTY is not set
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+# BR2_ENABLE_LOCALE_PURGE is not set
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="salix_mips74k"
+BR2_PLATFORM_CFG="salix_soc_mips74k_defconfig"
+# BR2_PACKAGE_BUSYBOX is not set
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_TARGET_ROOTFS_TAR is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_vexpress_ca15_defconfig buildroot/configs/mbedtee_vexpress_ca15_defconfig
--- buildroot-ori/configs/mbedtee_vexpress_ca15_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_vexpress_ca15_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,44 @@
+BR2_arm=y
+BR2_cortex_a15=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_SSP_NONE=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="fvp-arm"
+BR2_TARGET_GENERIC_ISSUE="arm @ ARM FVP"
+BR2_ROOTFS_MERGED_USR=y
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+BR2_SYSTEM_DEFAULT_PATH="/bin:/sbin:/usr/bin:/usr/sbin"
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/armv7a_linux_config"
+BR2_LINUX_KERNEL_IMAGE_TARGET_CUSTOM=y
+BR2_LINUX_KERNEL_IMAGE_TARGET_NAME="Image"
+BR2_LINUX_KERNEL_IMAGE_NAME="Image"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="vexpress_ca15"
+BR2_PLATFORM_CFG="vexpress_ca15_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_PACKAGE_URANDOM_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MKPASSWD=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_vexpress_ca17x4_ca7x4_defconfig buildroot/configs/mbedtee_vexpress_ca17x4_ca7x4_defconfig
--- buildroot-ori/configs/mbedtee_vexpress_ca17x4_ca7x4_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_vexpress_ca17x4_ca7x4_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,44 @@
+BR2_arm=y
+BR2_cortex_a17_a7=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_SSP_NONE=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="fvp-arm"
+BR2_TARGET_GENERIC_ISSUE="arm @ ARM FVP"
+BR2_ROOTFS_MERGED_USR=y
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+BR2_SYSTEM_DEFAULT_PATH="/bin:/sbin:/usr/bin:/usr/sbin"
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/armv7a_linux_config"
+BR2_LINUX_KERNEL_IMAGE_TARGET_CUSTOM=y
+BR2_LINUX_KERNEL_IMAGE_TARGET_NAME="Image"
+BR2_LINUX_KERNEL_IMAGE_NAME="Image"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="vexpress_ca17x4_ca7x4"
+BR2_PLATFORM_CFG="vexpress_ca17x4_ca7x4_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_PACKAGE_URANDOM_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MKPASSWD=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_vexpress_ca510x4_ca710x4_defconfig buildroot/configs/mbedtee_vexpress_ca510x4_ca710x4_defconfig
--- buildroot-ori/configs/mbedtee_vexpress_ca510x4_ca710x4_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_vexpress_ca510x4_ca710x4_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,41 @@
+BR2_aarch64=y
+BR2_cortex_a75_a55=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_SSP_NONE=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="fvp-aarch64-big.LITTLE"
+BR2_TARGET_GENERIC_ISSUE="aarch64 big.LITTLE @ ARM FVP"
+BR2_ROOTFS_MERGED_USR=y
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+BR2_SYSTEM_DEFAULT_PATH="/bin:/sbin:/usr/bin:/usr/sbin"
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/armv8a_linux_config"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="vexpress_ca510x4_ca710x4"
+BR2_PLATFORM_CFG="vexpress_ca510x4_ca710x4_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_PACKAGE_URANDOM_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MKPASSWD=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_vexpress_ca53_defconfig buildroot/configs/mbedtee_vexpress_ca53_defconfig
--- buildroot-ori/configs/mbedtee_vexpress_ca53_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_vexpress_ca53_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,40 @@
+BR2_aarch64=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_SSP_NONE=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="fvp-aarch64"
+BR2_TARGET_GENERIC_ISSUE="aarch64 @ ARM FVP"
+BR2_ROOTFS_MERGED_USR=y
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+BR2_SYSTEM_DEFAULT_PATH="/bin:/sbin:/usr/bin:/usr/sbin"
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/armv8a_linux_config"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="vexpress_ca53"
+BR2_PLATFORM_CFG="vexpress_ca53_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_PACKAGE_URANDOM_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MKPASSWD=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_vexpress_ca5_defconfig buildroot/configs/mbedtee_vexpress_ca5_defconfig
--- buildroot-ori/configs/mbedtee_vexpress_ca5_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_vexpress_ca5_defconfig	2025-05-31 23:12:46.379373554 +0800
@@ -0,0 +1,46 @@
+BR2_arm=y
+BR2_cortex_a5=y
+BR2_ARM_ENABLE_NEON=y
+BR2_ARM_ENABLE_VFP=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_SSP_NONE=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="fvp-arm"
+BR2_TARGET_GENERIC_ISSUE="arm @ ARM FVP"
+BR2_ROOTFS_MERGED_USR=y
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+BR2_SYSTEM_DEFAULT_PATH="/bin:/sbin:/usr/bin:/usr/sbin"
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/armv7a_ca5_linux_config"
+BR2_LINUX_KERNEL_IMAGE_TARGET_CUSTOM=y
+BR2_LINUX_KERNEL_IMAGE_TARGET_NAME="Image"
+BR2_LINUX_KERNEL_IMAGE_NAME="Image"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="vexpress_ca5"
+BR2_PLATFORM_CFG="vexpress_ca5_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_PACKAGE_URANDOM_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MKPASSWD=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_vexpress_ca65_defconfig buildroot/configs/mbedtee_vexpress_ca65_defconfig
--- buildroot-ori/configs/mbedtee_vexpress_ca65_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_vexpress_ca65_defconfig	2025-05-31 23:12:46.384376054 +0800
@@ -0,0 +1,41 @@
+BR2_aarch64=y
+BR2_cortex_a75=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_SSP_NONE=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="fvp-aarch64"
+BR2_TARGET_GENERIC_ISSUE="aarch64 @ ARM FVP"
+BR2_ROOTFS_MERGED_USR=y
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+BR2_SYSTEM_DEFAULT_PATH="/bin:/sbin:/usr/bin:/usr/sbin"
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/armv8a_linux_config"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="vexpress_ca65"
+BR2_PLATFORM_CFG="vexpress_ca65_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_PACKAGE_URANDOM_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MKPASSWD=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_vexpress_ca73x4_ca53x4_defconfig buildroot/configs/mbedtee_vexpress_ca73x4_ca53x4_defconfig
--- buildroot-ori/configs/mbedtee_vexpress_ca73x4_ca53x4_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_vexpress_ca73x4_ca53x4_defconfig	2025-05-31 23:12:46.384376054 +0800
@@ -0,0 +1,41 @@
+BR2_aarch64=y
+BR2_cortex_a73_a53=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_SSP_NONE=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="fvp-aarch64"
+BR2_TARGET_GENERIC_ISSUE="aarch64 @ ARM FVP"
+BR2_ROOTFS_MERGED_USR=y
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+BR2_SYSTEM_DEFAULT_PATH="/bin:/sbin:/usr/bin:/usr/sbin"
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/armv8a_linux_config"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="vexpress_ca73x4_ca53x4"
+BR2_PLATFORM_CFG="vexpress_ca73x4_ca53x4_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_PACKAGE_URANDOM_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MKPASSWD=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/configs/mbedtee_vexpress_ca78_defconfig buildroot/configs/mbedtee_vexpress_ca78_defconfig
--- buildroot-ori/configs/mbedtee_vexpress_ca78_defconfig	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/configs/mbedtee_vexpress_ca78_defconfig	2025-05-31 23:12:46.384376054 +0800
@@ -0,0 +1,41 @@
+BR2_aarch64=y
+BR2_cortex_a75=y
+BR2_TOOLCHAIN_EXTERNAL=y
+BR2_WGET="wget --passive-ftp -nd -t 3 --no-check-certificate"
+BR2_BACKUP_SITE="http://sources.buildroot.net"
+BR2_GNU_MIRROR="http://ftpmirror.gnu.org"
+BR2_CPAN_MIRROR="http://cpan.metacpan.org"
+BR2_OPTIMIZE_1=y
+BR2_SSP_NONE=y
+BR2_RELRO_NONE=y
+BR2_FORTIFY_SOURCE_NONE=y
+BR2_TARGET_GENERIC_HOSTNAME="fvp-aarch64"
+BR2_TARGET_GENERIC_ISSUE="aarch64 @ ARM FVP"
+BR2_ROOTFS_MERGED_USR=y
+# BR2_TARGET_GENERIC_REMOUNT_ROOTFS_RW is not set
+BR2_SYSTEM_DEFAULT_PATH="/bin:/sbin:/usr/bin:/usr/sbin"
+BR2_LINUX_KERNEL=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION=y
+BR2_LINUX_KERNEL_CUSTOM_VERSION_VALUE="6.6.68"
+BR2_LINUX_KERNEL_PATCH="linux/patches"
+BR2_LINUX_KERNEL_USE_CUSTOM_CONFIG=y
+BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE="tee/linux/armv8a_linux_config"
+BR2_PACKAGE_MBEDTEE=y
+BR2_PACKAGE_MBEDTEE_OS=y
+BR2_PACKAGE_MBEDTEE_CLIENT_APP=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT=y
+BR2_PACKAGE_MBEDTEE_TA=y
+BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA=y
+BR2_PLATFORM_NAME="vexpress_ca78"
+BR2_PLATFORM_CFG="vexpress_ca78_defconfig"
+BR2_PACKAGE_MBEDTEE_LINUX_DTS=y
+# BR2_PACKAGE_IFUPDOWN_SCRIPTS is not set
+# BR2_PACKAGE_URANDOM_SCRIPTS is not set
+BR2_TARGET_ROOTFS_CPIO_GZIP=y
+BR2_TARGET_ROOTFS_INITRAMFS=y
+# BR2_TARGET_ROOTFS_TAR is not set
+# BR2_PACKAGE_HOST_ARM_GNU_TOOLCHAIN_SUPPORTS is not set
+BR2_PACKAGE_HOST_DOSFSTOOLS=y
+BR2_PACKAGE_HOST_DTC=y
+BR2_PACKAGE_HOST_MKPASSWD=y
+BR2_PACKAGE_HOST_MTOOLS=y
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/linux/linux.mk buildroot/linux/linux.mk
--- buildroot-ori/linux/linux.mk	2025-06-16 15:08:01.525349202 +0800
+++ buildroot/linux/linux.mk	2025-06-15 21:00:46.993449288 +0800
@@ -123,6 +123,8 @@ ifeq ($(BR2_LINUX_KERNEL_NEEDS_HOST_OPEN
 LINUX_DEPENDENCIES += host-openssl
 endif
 
+LINUX_DEPENDENCIES += mbedtee-common mbedtee-linux-dts
+
 ifeq ($(BR2_LINUX_KERNEL_NEEDS_HOST_LIBELF),y)
 LINUX_DEPENDENCIES += host-elfutils host-pkgconf
 endif
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/linux/patches/mbedtee-linux-5.15.175.patch-- buildroot/linux/patches/mbedtee-linux-5.15.175.patch--
--- buildroot-ori/linux/patches/mbedtee-linux-5.15.175.patch--	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/linux/patches/mbedtee-linux-5.15.175.patch--	2025-05-31 23:12:46.386377054 +0800
@@ -0,0 +1,2189 @@
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/arch/arm/boot/compressed/head.S linux-5.15.175/arch/arm/boot/compressed/head.S
+--- linux-5.15.175-ori/arch/arm/boot/compressed/head.S	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/arch/arm/boot/compressed/head.S	2024-12-30 16:28:15.780408697 +0800
+@@ -313,7 +313,8 @@ not_angel:
+ 1:
+ #endif /* CONFIG_USE_OF */
+ 		/* Determine final kernel image address. */
+-		add	r4, r0, #TEXT_OFFSET
++		ldr	r4, =TEXT_OFFSET
++		add	r4, r0, r4
+ #else
+ 		ldr	r4, =zreladdr
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/arch/arm/kernel/head.S linux-5.15.175/arch/arm/kernel/head.S
+--- linux-5.15.175-ori/arch/arm/kernel/head.S	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/arch/arm/kernel/head.S	2024-12-30 16:28:15.781408697 +0800
+@@ -65,7 +65,8 @@ kernel_sec_end:
+ 	.popsection
+ 
+ 	.macro	pgtbl, rd, phys
+-	add	\rd, \phys, #TEXT_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	add	\rd, \phys, r0
+ 	sub	\rd, \rd, #PG_DIR_SIZE
+ 	.endm
+ 
+@@ -120,7 +121,9 @@ ENTRY(stext)
+ 
+ #ifndef CONFIG_XIP_KERNEL
+ 	adr_l	r8, _text			@ __pa(_text)
+-	sub	r8, r8, #TEXT_OFFSET		@ PHYS_OFFSET
++#	sub	r8, r8, #TEXT_OFFSET	@ PHYS_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	sub	r8, r8, r0				@ PHYS_OFFSET
+ #else
+ 	ldr	r8, =PLAT_PHYS_OFFSET		@ always constant in this case
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/arch/arm/kernel/smp.c linux-5.15.175/arch/arm/kernel/smp.c
+--- linux-5.15.175-ori/arch/arm/kernel/smp.c	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/arch/arm/kernel/smp.c	2024-12-30 16:28:15.781408697 +0800
+@@ -66,20 +66,21 @@ enum ipi_msg_type {
+ 	IPI_CPU_STOP,
+ 	IPI_IRQ_WORK,
+ 	IPI_COMPLETION,
+-	NR_IPI,
+ 	/*
+ 	 * CPU_BACKTRACE is special and not included in NR_IPI
+ 	 * or tracable with trace_ipi_*
+ 	 */
+-	IPI_CPU_BACKTRACE = NR_IPI,
++	IPI_CPU_BACKTRACE,
+ 	/*
+ 	 * SGI8-15 can be reserved by secure firmware, and thus may
+ 	 * not be usable by the kernel. Please keep the above limited
+ 	 * to at most 8 entries.
+ 	 */
++	IPI_TEECALL,
++	NR_IPI,
+ 	MAX_IPI
+ };
+-
++extern void mbedtee_rpc_isr(void);
+ static int ipi_irq_base __read_mostly;
+ static int nr_ipi __read_mostly = NR_IPI;
+ static struct irq_desc *ipi_desc[MAX_IPI] __read_mostly;
+@@ -667,6 +668,11 @@ static void do_handle_IPI(int ipinr)
+ 		printk_deferred_exit();
+ 		break;
+ 
++	/* mbedtee callback */
++	case IPI_TEECALL:
++		mbedtee_rpc_isr();
++		break;
++
+ 	default:
+ 		pr_crit("CPU%u: Unknown IPI message 0x%x\n",
+ 		        cpu, ipinr);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/arch/arm/Makefile linux-5.15.175/arch/arm/Makefile
+--- linux-5.15.175-ori/arch/arm/Makefile	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/arch/arm/Makefile	2024-12-30 16:28:15.782408697 +0800
+@@ -138,7 +138,7 @@ head-y		:= arch/arm/kernel/head$(MMUEXT)
+ # Note: the 32kB below this value is reserved for use by the kernel
+ # during boot, and this offset is critical to the functioning of
+ # kexec-tools.
+-textofs-y	:= 0x00008000
++textofs-y	:= 0x06008000
+ # We don't want the htc bootloader to corrupt kernel during resume
+ textofs-$(CONFIG_PM_H1940)      := 0x00108000
+ # RTD1195 has Boot ROM at start of address space
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/arch/arm64/kernel/smp.c linux-5.15.175/arch/arm64/kernel/smp.c
+--- linux-5.15.175-ori/arch/arm64/kernel/smp.c	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/arch/arm64/kernel/smp.c	2024-12-30 16:28:15.783408697 +0800
+@@ -74,6 +74,8 @@ enum ipi_msg_type {
+ 	IPI_TIMER,
+ 	IPI_IRQ_WORK,
+ 	IPI_WAKEUP,
++	IPI_RESERVED, /* 0 ~ 7 for REE */
++	IPI_TEECALL, /* 8 ~ 15 for TEE */
+ 	NR_IPI
+ };
+ 
+@@ -928,6 +930,12 @@ static void do_handle_IPI(int ipinr)
+ 		break;
+ #endif
+ 
++	/* mbedtee RPC callback */
++	case IPI_TEECALL:
++		extern void mbedtee_rpc_isr(void);
++		mbedtee_rpc_isr();
++		break;
++
+ #ifdef CONFIG_ARM64_ACPI_PARKING_PROTOCOL
+ 	case IPI_WAKEUP:
+ 		WARN_ONCE(!acpi_parking_protocol_valid(cpu),
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/arch/riscv/kernel/smp.c linux-5.15.175/arch/riscv/kernel/smp.c
+--- linux-5.15.175-ori/arch/riscv/kernel/smp.c	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/arch/riscv/kernel/smp.c	2024-12-30 18:28:55.657441310 +0800
+@@ -133,11 +133,14 @@ void handle_IPI(struct pt_regs *regs)
+ 	struct pt_regs *old_regs = set_irq_regs(regs);
+ 	unsigned long *pending_ipis = &ipi_data[smp_processor_id()].bits;
+ 	unsigned long *stats = ipi_data[smp_processor_id()].stats;
++	extern void mbedtee_rpc_isr(void);
+ 
+ 	irq_enter();
+ 
+ 	riscv_clear_ipi();
+ 
++	mbedtee_rpc_isr();
++
+ 	while (true) {
+ 		unsigned long ops;
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/firmware/psci/psci.c linux-5.15.175/drivers/firmware/psci/psci.c
+--- linux-5.15.175-ori/drivers/firmware/psci/psci.c	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/drivers/firmware/psci/psci.c	2024-12-30 16:28:15.784408697 +0800
+@@ -260,12 +260,14 @@ static unsigned long psci_migrate_info_u
+ 
+ static void set_conduit(enum arm_smccc_conduit conduit)
+ {
++	extern psci_fn mbedtee_rpc_fastcall;
++
+ 	switch (conduit) {
+ 	case SMCCC_CONDUIT_HVC:
+ 		invoke_psci_fn = __invoke_psci_fn_hvc;
+ 		break;
+ 	case SMCCC_CONDUIT_SMC:
+-		invoke_psci_fn = __invoke_psci_fn_smc;
++		invoke_psci_fn = mbedtee_rpc_fastcall;
+ 		break;
+ 	default:
+ 		WARN(1, "Unexpected PSCI conduit %d\n", conduit);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/irqchip/irq-gic.c linux-5.15.175/drivers/irqchip/irq-gic.c
+--- linux-5.15.175-ori/drivers/irqchip/irq-gic.c	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/drivers/irqchip/irq-gic.c	2024-12-30 16:28:15.786408697 +0800
+@@ -866,13 +866,17 @@ static __init void gic_smp_init(void)
+ 				  "irqchip/arm/gic:starting",
+ 				  gic_starting_cpu, NULL);
+ 
+-	base_sgi = __irq_domain_alloc_irqs(gic_data[0].domain, -1, 8,
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = __irq_domain_alloc_irqs(gic_data[0].domain, -1, 16,
+ 					   NUMA_NO_NODE, &sgi_fwspec,
+ 					   false, NULL);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ #else
+ #define gic_smp_init()		do { } while(0)
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/irqchip/irq-gic-v3.c linux-5.15.175/drivers/irqchip/irq-gic-v3.c
+--- linux-5.15.175-ori/drivers/irqchip/irq-gic-v3.c	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/drivers/irqchip/irq-gic-v3.c	2024-12-30 16:28:15.787408697 +0800
+@@ -1272,13 +1272,17 @@ static void __init gic_smp_init(void)
+ 				  gic_starting_cpu, NULL);
+ 
+ 	/* Register all 8 non-secure SGIs */
+-	base_sgi = __irq_domain_alloc_irqs(gic_data.domain, -1, 8,
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = __irq_domain_alloc_irqs(gic_data.domain, -1, 16,
+ 					   NUMA_NO_NODE, &sgi_fwspec,
+ 					   false, NULL);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ 
+ static int gic_set_affinity(struct irq_data *d, const struct cpumask *mask_val,
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/Kconfig linux-5.15.175/drivers/tee/Kconfig
+--- linux-5.15.175-ori/drivers/tee/Kconfig	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/drivers/tee/Kconfig	2024-12-30 16:28:15.788408697 +0800
+@@ -17,6 +17,8 @@ menu "TEE drivers"
+ 
+ source "drivers/tee/optee/Kconfig"
+ source "drivers/tee/amdtee/Kconfig"
++source "drivers/tee/mbedtee/Kconfig"
++
+ endmenu
+ 
+ endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/Makefile linux-5.15.175/drivers/tee/Makefile
+--- linux-5.15.175-ori/drivers/tee/Makefile	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/drivers/tee/Makefile	2024-12-30 16:28:15.788408697 +0800
+@@ -5,3 +5,4 @@ tee-objs += tee_shm.o
+ tee-objs += tee_shm_pool.o
+ obj-$(CONFIG_OPTEE) += optee/
+ obj-$(CONFIG_AMDTEE) += amdtee/
++obj-$(CONFIG_MBEDTEE) += mbedtee/
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/core.c linux-5.15.175/drivers/tee/mbedtee/core.c
+--- linux-5.15.175-ori/drivers/tee/mbedtee/core.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/core.c	2024-12-30 16:28:15.789408697 +0800
+@@ -0,0 +1,280 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#include <linux/errno.h>
++#include <linux/io.h>
++#include <linux/module.h>
++#include <linux/of.h>
++#include <linux/of_platform.h>
++#include <linux/platform_device.h>
++#include <linux/slab.h>
++#include <linux/string.h>
++#include <linux/tee_drv.h>
++#include <linux/types.h>
++#include <linux/uaccess.h>
++#include "mbedtee_drv.h"
++#include "shm_pool.h"
++
++#include "../tee_private.h"
++
++struct mbedtee_clnt __clnt = {0}, *clnt = &__clnt;
++
++static void mbedtee_get_version(struct tee_device *teedev,
++			      struct tee_ioctl_version_data *vers)
++{
++	struct tee_ioctl_version_data v = {
++		.impl_id = TEE_IMPL_ID_MBEDTEE,
++		.impl_caps = 0,
++		.gen_caps = TEE_GEN_CAP_GP | TEE_GEN_CAP_REG_MEM | TEE_GEN_CAP_MEMREF_NULL,
++	};
++
++	*vers = v;
++}
++
++static int mbedtee_open(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *ctxdata;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++
++	ctxdata = kzalloc(sizeof(*ctxdata), GFP_KERNEL);
++	if (!ctxdata)
++		return -ENOMEM;
++
++	mutex_init(&ctxdata->mutex);
++	INIT_LIST_HEAD(&ctxdata->sess_list);
++
++	dev_dbg(clnt->dev, "mbedtee_open\n");
++
++	ctx->data = ctxdata;
++	ctx->cap_memref_null = true;
++
++	return 0;
++}
++
++static void mbedtee_release(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *d = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *s, *n = NULL;
++
++	if (d == NULL)
++		return;
++
++	if (d->is_supp_ctx)
++		mbedtee_supp_release(&clnt->supp);
++	else {
++		list_for_each_entry_safe(s, n, &d->sess_list, list_node) {
++			dev_dbg(clnt->dev, "mbedtee_release %d\n", s->session_id);
++			mbedtee_close_session(ctx, s->session_id);
++		}
++	}
++
++	kfree(d);
++	ctx->data = NULL;
++}
++
++static const struct tee_driver_ops mbedtee_ops = {
++	.get_version = mbedtee_get_version,
++	.open = mbedtee_open,
++	.release = mbedtee_release,
++	.open_session = mbedtee_open_session,
++	.close_session = mbedtee_close_session,
++	.invoke_func = mbedtee_invoke_session,
++	.cancel_req = mbedtee_cancel_req,
++	.supp_recv = mbedtee_supp_recv,
++	.supp_send = mbedtee_supp_send,
++	.shm_register = mbedtee_shm_register,
++	.shm_unregister = mbedtee_shm_unregister,
++};
++
++
++static const struct tee_desc mbedtee_desc = {
++	.name = "mbedtee-clnt",
++	.ops = &mbedtee_ops,
++	.owner = THIS_MODULE,
++};
++
++static struct tee_shm_pool *mbedtee_config_dyn_shm(void)
++{
++	struct tee_shm_pool_mgr *priv_mgr;
++	struct tee_shm_pool_mgr *dmabuf_mgr;
++	void *rc;
++
++	rc = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR(rc))
++		return rc;
++	priv_mgr = rc;
++
++	rc = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR(rc)) {
++		tee_shm_pool_mgr_destroy(priv_mgr);
++		return rc;
++	}
++	dmabuf_mgr = rc;
++
++	rc = tee_shm_pool_alloc(priv_mgr, dmabuf_mgr);
++	if (IS_ERR(rc)) {
++		tee_shm_pool_mgr_destroy(priv_mgr);
++		tee_shm_pool_mgr_destroy(dmabuf_mgr);
++	}
++
++	return rc;
++}
++
++#if defined(MBEDTEE_NODE_IN_DTS)
++static int mbedtee_remove(struct platform_device *pdev)
++{
++	struct mbedtee_clnt *clnt = platform_get_drvdata(pdev);
++
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++
++	return 0;
++}
++
++static int mbedtee_probe(struct platform_device *pdev)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool_mgr *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	dev_info(&pdev->dev, "mbedtee client probing\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		dev_info(&pdev->dev, "mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	dev_info(&pdev->dev, "mbedtee version: 0x%06x\n", version);
++	dev_info(&pdev->dev, "mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_config_dyn_shm();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &pdev->dev;
++
++	platform_set_drvdata(pdev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client probed\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++
++	return ret;
++}
++
++static const struct of_device_id mbedtee_dt_match[] = {
++	{ .compatible = "mbedtee-clnt" },
++	{},
++};
++
++MODULE_DEVICE_TABLE(of, mbedtee_dt_match);
++
++static struct platform_driver mbedtee_driver = {
++	.probe  = mbedtee_probe,
++	.remove = mbedtee_remove,
++	.driver = {
++		.name = "mbedtee-clnt",
++		.of_match_table = mbedtee_dt_match,
++	},
++};
++module_platform_driver(mbedtee_driver);
++#endif
++
++static void __exit mbedtee_exit(void)
++{
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++}
++
++static int __init mbedtee_init(void)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	pr_info("mbedtee client init\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		pr_info("mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	pr_info("mbedtee version: 0x%06x\n", version);
++	pr_info("mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_config_dyn_shm();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &teedev->dev;
++
++	dev_set_drvdata(mbedclnt->dev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client initialized\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++	return ret;
++}
++module_init(mbedtee_init);
++module_exit(mbedtee_exit);
++
++MODULE_AUTHOR("Kapa");
++MODULE_DESCRIPTION("MBEDTEE Client");
++MODULE_VERSION("1.0");
++MODULE_LICENSE("GPL v2");
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/Kconfig linux-5.15.175/drivers/tee/mbedtee/Kconfig
+--- linux-5.15.175-ori/drivers/tee/mbedtee/Kconfig	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/Kconfig	2024-12-30 16:28:15.789408697 +0800
+@@ -0,0 +1,8 @@
++# SPDX-License-Identifier: GPL-2.0-only
++# MBED-TEE Trusted Execution Environment Configuration
++config MBEDTEE
++	tristate "MBEDTEE"
++	depends on MMU
++	help
++	  This implements the MBEDTEE Trusted Execution Environment (TEE)
++	  driver.
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/Makefile linux-5.15.175/drivers/tee/mbedtee/Makefile
+--- linux-5.15.175-ori/drivers/tee/mbedtee/Makefile	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/Makefile	2024-12-30 16:28:15.789408697 +0800
+@@ -0,0 +1,13 @@
++# SPDX-License-Identifier: GPL-2.0
++
++ccflags-$(CONFIG_MBEDTEE) += -I$(STAGING_DIR)/usr/include/mbedtee
++
++obj-$(CONFIG_MBEDTEE) += mbedtee.o
++
++mbedtee-y += core.o
++mbedtee-y += supp.o
++mbedtee-y += shm_pool.o
++mbedtee-y += rpc.o rpc-callee.o
++mbedtee-$(CONFIG_ARM) += rpc-caller-arm.o
++mbedtee-$(CONFIG_ARM64) += rpc-caller-arm.o
++mbedtee-$(CONFIG_RISCV) += rpc-caller-riscv.o
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/mbedtee_drv.h linux-5.15.175/drivers/tee/mbedtee/mbedtee_drv.h
+--- linux-5.15.175-ori/drivers/tee/mbedtee/mbedtee_drv.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/mbedtee_drv.h	2024-12-30 17:29:00.327445268 +0800
+@@ -0,0 +1,154 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#ifndef MBEDTEE_DRV_H
++#define MBEDTEE_DRV_H
++
++#include <linux/types.h>
++#include <linux/of.h>
++#include <linux/semaphore.h>
++#include <linux/tee_drv.h>
++#include <linux/syscalls.h>
++#include <asm/cacheflush.h>
++
++#include <rpc/rpc.h>
++#include <rpc/reefs.h>
++
++#include "mbedtee_rpc.h"
++#include "shm_pool.h"
++
++#define TEEC_ERROR_TARGET_DEAD      0xFFFF3024
++#define TEEC_ERROR_OUT_OF_MEMORY    0xFFFF000C
++
++#define TEEC_ORIGIN_COMMS           0x00000002
++#define TEEC_ORIGIN_TEE             0x00000003
++
++#define MBEDTEE_VALID_VERSION(x) ((((x) >> 16) == 1) && \
++	((((x) >> 8) & 0xFF) >= 0) && (((x) & 0xFF) >= 1))
++
++struct mbedtee_supp {
++	struct mutex mutex;
++	struct tee_context *ctx;
++
++	void *req;
++	struct list_head reqs;
++	struct completion reqs_c;
++};
++
++struct mbedtee_clnt {
++	int version;
++	int yield;
++	struct device *dev;
++	struct tee_device *teedev;
++	struct tee_shm_pool *pool;
++	struct mbedtee_supp supp;
++};
++
++struct mbedtee_session {
++	struct list_head list_node;
++	u32 session_id;
++};
++
++struct mbedtee_context_data {
++	int is_supp_ctx;
++	struct mutex mutex;
++	struct list_head sess_list;
++};
++
++typedef struct {
++	uint32_t timeLow;
++	uint16_t timeMid;
++	uint16_t timeHiAndVersion;
++	uint8_t clockSeqAndNode[8];
++} TEEC_UUID;
++
++extern struct mbedtee_clnt *clnt;
++
++#define mbedtee_bswap16(_x) ((__u16)(((_x) >> 8) | (((_x) << 8) & 0xff00)))
++#define mbedtee_bswap32(_x) ((__u32)(((_x) >> 24) | (((_x) >> 8) & 0xff00) | \
++	    (((_x) << 8) & 0xff0000) | (((_x) << 24) & 0xff000000)))
++
++static inline void mbedtee_flush_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM)
++	__cpuc_flush_dcache_area(va, size);
++#endif
++
++#if defined(CONFIG_ARM64)
++	dcache_clean_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* wback & inv */
++	/* ALT_CMO_OP(FLUSH, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline void mbedtee_invalidate_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM64)
++	dcache_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* inv */
++	/* ALT_CMO_OP(INVAL, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline phys_addr_t mbedtee_virt_to_phys(void *va)
++{
++	if (is_vmalloc_or_module_addr(va)) {
++		return page_to_phys(vmalloc_to_page(va)) +
++				    offset_in_page(va);
++	}
++
++	WARN_ON(!virt_addr_valid(va));
++	return virt_to_phys(va);
++}
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size);
++void mbedtee_rpc_free(struct rpc_cmd *rpc);
++
++int mbedtee_open_session(struct tee_context *ctx,
++	struct tee_ioctl_open_session_arg *arg, struct tee_param *param);
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg, struct tee_param *param);
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session);
++
++int mbedtee_cancel_req(struct tee_context *ctx, u32 cancel_id, u32 session);
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start);
++
++int mbedtee_shm_unregister(struct tee_context *ctx, struct tee_shm *shm);
++
++/* TEE->REE RPC */
++int mbedtee_rpc_init(void);
++void mbedtee_rpc_isr(void);
++
++void mbedtee_supp_init(struct mbedtee_supp *supp);
++void mbedtee_supp_uninit(struct mbedtee_supp *supp);
++void mbedtee_supp_release(struct mbedtee_supp *supp);
++int mbedtee_supp_recv(struct tee_context *ctx, u32 *func, u32 *num_params,
++		    struct tee_param *param);
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param);
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size);
++
++/* REE->TEE RPC */
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible);
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2);
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/mbedtee_rpc.h linux-5.15.175/drivers/tee/mbedtee/mbedtee_rpc.h
+--- linux-5.15.175-ori/drivers/tee/mbedtee/mbedtee_rpc.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/mbedtee_rpc.h	2024-12-30 16:28:15.789408697 +0800
+@@ -0,0 +1,30 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ *
++ * Export symbols for other kernel modules
++ */
++#ifndef _MBEDTEE_RPC_H
++#define _MBEDTEE_RPC_H
++
++/*
++ * defines the __typeof__ the RPC callee function handler.
++ * @data - shared memory buffer from the RPC peer.
++ * @size - the data size of this shared memory buffer.
++ */
++typedef void (*rpc_func_t)(void *data, size_t size);
++
++/*
++ * register the rpc callee func.
++ * @id - function id of callee
++ * @return - 0 on success. Else negative num.
++ */
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func);
++
++/*
++ * unregister the callee @id.
++ */
++void mbedtee_unregister_rpc(unsigned int id);
++
++#endif
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/rpc.c linux-5.15.175/drivers/tee/mbedtee/rpc.c
+--- linux-5.15.175-ori/drivers/tee/mbedtee/rpc.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/rpc.c	2024-12-30 16:28:15.790408697 +0800
+@@ -0,0 +1,396 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RPC calls to TEE
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size)
++{
++	struct page *p = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	if (sizeof(struct rpc_cmd) + size > PAGE_SIZE)
++		return NULL;
++
++	p = alloc_page(GFP_KERNEL);
++	if (p == NULL)
++		return NULL;
++
++	rpc = kmap(p);
++	rpc->size = size;
++	rpc->ret = -1;
++	rpc->interrupted = 0;
++
++	return rpc;
++}
++EXPORT_SYMBOL(mbedtee_rpc_alloc);
++
++void mbedtee_rpc_free(struct rpc_cmd *rpc)
++{
++	struct page *p = NULL;
++
++	if (rpc && (!rpc->interrupted)) {
++		p = virt_to_page(rpc);
++		kunmap(p);
++		put_page(p);
++	}
++}
++EXPORT_SYMBOL(mbedtee_rpc_free);
++
++static int mbedtee_param_decode(struct tee_param *params,
++	size_t num_params, const struct rpc_param *rp)
++{
++	size_t n;
++#define TYPE_GET(t, i) ((((uint32_t)t) >> ((i)*4)) & 0xF)
++
++	for (n = 0; n < num_params; n++) {
++		struct tee_param *p = params + n;
++		const union rpc_tee_param *rtp = rp->params + n;
++		u32 attr = TYPE_GET(rp->params_type, n);
++
++		switch (attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(&p->u, 0, sizeof(p->u));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			p->u.value.a = rtp->value.a;
++			p->u.value.b = rtp->value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			p->u.memref.size = rtp->memref.size;
++			break;
++
++		default:
++			return -EINVAL;
++		}
++	}
++	return 0;
++}
++
++static int mbedtee_param_encode(struct rpc_param *rp,
++	size_t num_params, const struct tee_param *params)
++{
++	size_t n;
++#define TYPE_SET(t, i) (((uint32_t)(t) & 0xF) << ((i)*4))
++
++	rp->params_type = TEE_IOCTL_PARAM_ATTR_TYPE_NONE;
++
++	for (n = 0; n < num_params; n++) {
++		const struct tee_param *p = params + n;
++		union rpc_tee_param *rtp = rp->params + n;
++
++		rp->params_type |= TYPE_SET(p->attr, n);
++
++		switch (p->attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(rtp, 0, sizeof(*rtp));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			rtp->value.a = p->u.value.a;
++			rtp->value.b = p->u.value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			if (p->u.memref.shm)
++				rtp->memref.id = p->u.memref.shm->sec_world_id;
++			else
++				rtp->memref.id = 0; /* invalid-id @ mbedtee */
++			rtp->memref.size = p->u.memref.size;
++			rtp->memref.offset = p->u.memref.shm_offs;
++			break;
++		default:
++			return -EINVAL;
++		}
++	}
++
++	return 0;
++}
++
++static void mbedtee_errno_origin(
++	__u32 *errno, __u32 *origin)
++{
++	switch (*errno) {
++	case -ENOMEM:
++		*errno = TEEC_ERROR_OUT_OF_MEMORY;
++		break;
++	case -ESRCH:
++		*origin = TEEC_ORIGIN_TEE;
++		*errno = TEEC_ERROR_TARGET_DEAD;
++		break;
++	default:
++		break;
++	}
++}
++
++static struct mbedtee_session *mbedtee_session_of(
++	struct mbedtee_context_data *ctxdata,
++	u32 session_id)
++{
++	struct mbedtee_session *sess, *ret = NULL;
++
++	mutex_lock(&ctxdata->mutex);
++	list_for_each_entry(sess, &ctxdata->sess_list, list_node)
++		if (sess->session_id == session_id) {
++			ret = sess;
++			break;
++		}
++	mutex_unlock(&ctxdata->mutex);
++	return ret;
++}
++
++int mbedtee_open_session(struct tee_context *ctx,
++			   struct tee_ioctl_open_session_arg *arg,
++			   struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret != 0) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	sess = kzalloc(sizeof(*sess), GFP_KERNEL);
++	if (sess == NULL) {
++		mbedtee_rpc_free(rpc);
++		return -ENOMEM;
++	}
++
++	memcpy(rp->uuid, arg->uuid, sizeof(arg->uuid));
++	memcpy(rp->clnt_uuid, arg->clnt_uuid, sizeof(arg->clnt_uuid));
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_rpc_yieldcall(RPC_OPEN_SESSION, rpc, false);
++
++	dev_dbg(clnt->dev, "open session ret %d\n", ret);
++
++	if (ret == 0) {
++		sess->session_id = rp->session_id;
++		mutex_lock(&ctxdata->mutex);
++		list_add(&sess->list_node, &ctxdata->sess_list);
++		mutex_unlock(&ctxdata->mutex);
++
++		mbedtee_param_decode(param, arg->num_params, rp);
++	} else {
++		kfree(sess);
++	}
++
++	arg->session = rp->session_id;
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg,
++	struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *sess;
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++
++	sess = mbedtee_session_of(ctxdata, arg->session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = arg->session;
++	rp->cmd_id = arg->func;
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	ret = mbedtee_rpc_yieldcall(RPC_INVOKE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "invoke session ret %d\n", ret);
++
++	mbedtee_param_decode(param, arg->num_params, rp);
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CLOSE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "close session ret %d\n", ret);
++
++	mutex_lock(&ctxdata->mutex);
++	list_del(&sess->list_node);
++	kfree(sess);
++	mutex_unlock(&ctxdata->mutex);
++
++	mbedtee_rpc_free(rpc);
++
++	/*
++	 * ESRCH means the session already been closed in
++	 * mbedtee, so REE return success for this case
++	 */
++	return (ret == -ESRCH) ? 0 : ret;
++}
++
++int mbedtee_cancel_req(struct tee_context *ctx,
++	u32 cancel_id, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_session *sess = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(int));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	*(int *)rpc->data = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CANCEL, rpc, false);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start)
++{
++	int ret = -1, i = 0, j = 0;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++	unsigned long *pagearray = NULL;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	size_t pagearray_sz = 0, multiple = PAGE_SIZE / TEE_PAGE_SIZE;
++
++	dev_dbg(clnt->dev, "nr_pages %d @ %d\n", (int)nr_pages, shm->id);
++
++	BUILD_BUG_ON(multiple == 0);
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++
++	pagearray_sz = DIV_ROUND_UP(nr_pages * sizeof(long) * multiple, PAGE_SIZE);
++	pagearray = alloc_pages_exact(pagearray_sz, GFP_KERNEL);
++	if (pagearray == NULL) {
++		ret = -ENOMEM;
++		goto out;
++	}
++
++	for (i = 0; i < nr_pages; i++) {
++		for (j = 0; j < multiple; j++)
++			pagearray[i * multiple + j] = TEE_PAGE_SIZE * j + \
++				page_to_phys(pages[i]);
++	}
++
++	memref->size = tee_shm_get_size(shm);
++	memref->offset = tee_shm_get_page_offset(shm);
++	memref->pages = mbedtee_virt_to_phys(pagearray);
++	memref->cnt = nr_pages * multiple;
++
++	ret = mbedtee_rpc_yieldcall(RPC_REGISTER_SHM, rpc, false);
++
++	if (ret == 0)
++		shm->sec_world_id = memref->id;
++
++	free_pages_exact(pagearray, pagearray_sz);
++
++out:
++	mbedtee_rpc_free(rpc);
++	return ret;
++}
++
++int mbedtee_shm_unregister(struct tee_context *ctx,
++	struct tee_shm *shm)
++{
++	int ret = -1;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++	memref->id = shm->sec_world_id;
++
++	ret = mbedtee_rpc_yieldcall(RPC_UNREGISTER_SHM, rpc, true);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/rpc-callee.c linux-5.15.175/drivers/tee/mbedtee/rpc-callee.c
+--- linux-5.15.175-ori/drivers/tee/mbedtee/rpc-callee.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/rpc-callee.c	2024-12-30 18:28:35.151694655 +0800
+@@ -0,0 +1,299 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ * Callees for TEE->REE RPC
++ */
++#include <linux/slab.h>
++#include <linux/module.h>
++#include <linux/io.h>
++#include <linux/printk.h>
++#include <asm/smp.h>
++#include <asm/cacheflush.h>
++#include <asm/hardirq.h>
++#include <linux/delay.h>
++#include <linux/highmem.h>
++
++#include <rpc/rpc.h>
++
++#include "mbedtee_drv.h"
++
++static void *t2r_shm = NULL;
++static unsigned long t2r_shm_phys = 0;
++static struct rpc_ringbuf *t2r_ring = NULL;
++static unsigned int t2r_ring_sz = 0;
++static unsigned int t2r_ring_rd = 0;
++static unsigned char __rpc_data[PAGE_SIZE] = {0};
++static rpc_func_t __rpc_callee_funcs[RPC_REENR] = {NULL};
++
++static DEFINE_SPINLOCK(__rpc_lock);
++
++struct mbedtee_rpc_work {
++	pid_t waiter;
++	int unfinish;
++	void *data;
++	unsigned int size;
++	rpc_func_t func;
++	struct work_struct work;
++};
++
++static inline size_t mbedtee_rpc_available_size(void)
++{
++	unsigned int wr = 0;
++	unsigned int rd = t2r_ring_rd;
++	unsigned int shm_size = t2r_ring_sz;
++
++	wr = t2r_ring->wr;
++	smp_rmb();
++
++	if (wr > shm_size)
++		return 0;
++
++	if (wr >= rd)
++		return wr - rd;
++	else
++		return shm_size + wr - rd;
++}
++
++static inline void mbedtee_rpc_read(void *data, size_t size)
++{
++	unsigned int remain = 0;
++	unsigned int shm_size = t2r_ring_sz;
++	unsigned int rd = t2r_ring_rd;
++	struct rpc_ringbuf *shm = t2r_ring;
++
++	smp_wmb();
++	if (rd + size <= shm_size) {
++		mbedtee_invalidate_cache(&shm->mem[rd], size);
++		memcpy(data, &shm->mem[rd], size);
++		rd += size;
++	} else {
++		remain = rd + size - shm_size;
++		mbedtee_invalidate_cache(&shm->mem[rd], size - remain);
++		memcpy(data, &shm->mem[rd], size - remain);
++		mbedtee_invalidate_cache(&shm->mem[0], remain);
++		memcpy((unsigned char *)data + size - remain,
++				&shm->mem[0], remain);
++		rd = remain;
++	}
++
++	shm->rd = t2r_ring_rd = rd;
++
++	smp_rmb();
++}
++
++static struct mbedtee_rpc_work *mbedtee_rpc_pick_next(
++	struct mbedtee_rpc_work *c)
++{
++	unsigned long retry = 0;
++	struct rpc_cmd cmd = {0};
++	rpc_func_t func = NULL;
++
++	/* handle the last unfinished rpc */
++	if (c->unfinish) {
++		if (mbedtee_rpc_available_size() < c->size)
++			return NULL;
++		c->unfinish = false;
++		mbedtee_rpc_read((void *)c->data, c->size);
++		return c;
++	}
++
++	if (mbedtee_rpc_available_size() < sizeof(cmd))
++		return NULL;
++
++	mbedtee_rpc_read(&cmd, sizeof(cmd));
++
++	if (cmd.id >= RPC_REENR)
++		return NULL;
++
++	func = __rpc_callee_funcs[cmd.id];
++	if (func == NULL) {
++		pr_emerg("rpc unregister %d ??\n", cmd.id);
++		return NULL;
++	}
++
++	if (cmd.waiter == 0) {
++ 		/* async rpc notification from peer */
++		while (mbedtee_rpc_available_size() < cmd.size) {
++			if (++retry % 1000 == 0)
++				pr_emerg("rpc retrying for %d func %d\n", cmd.size, cmd.id);
++			if (retry == 5000) {
++				/* mark as unfinished rpc */
++				c->unfinish = true;
++				return NULL;
++			}
++			udelay(5);
++		}
++		mbedtee_rpc_read(c->data, cmd.size);
++	} else {
++		if (cmd.shm == 0) {
++			pr_emerg("rpc cmd.shm error ??\n");
++			return NULL;
++		}
++
++		/* sync rpc notification from peer */
++		c = kmalloc(sizeof(*c), GFP_ATOMIC);
++		c->data = t2r_shm + (cmd.shm - t2r_shm_phys);
++	}
++
++	c->func = func;
++	c->waiter = cmd.waiter;
++	c->size = cmd.size;
++
++	return c;
++}
++
++static void rpc_routine(struct work_struct *w)
++{
++	struct mbedtee_rpc_work *c = NULL;
++
++	c = container_of(w, struct mbedtee_rpc_work, work);
++
++	c->func(c->data, c->size);
++
++	mbedtee_flush_cache(c->data, c->size);
++
++	mbedtee_rpc_fastcall(RPC_COMPLETE_TEE, c->waiter, 0, 0);
++	kfree(c);
++}
++
++extern void mbedtee_rpc_isr(void)
++{
++	unsigned long flags = 0, retry = 0;
++	struct mbedtee_rpc_work rw = {0}, *c = &rw;
++	struct rpc_ringbuf *ring = t2r_ring;
++
++	if (!ring || (t2r_ring_rd == ring->wr))
++		return;
++
++	c->data = (void *)__rpc_data;
++	spin_lock_irqsave(&__rpc_lock, flags);
++	while (t2r_ring_rd != ring->wr) {
++		if ((c = mbedtee_rpc_pick_next(&rw)) == NULL) {
++			if (++retry == 5000)
++				break;
++			continue;
++		}
++
++		/* no peer is waiting, it's asynchronous rpc */
++		if (c->waiter == 0) {
++			c->func(c->data, c->size);
++		} else {
++			/* peer is waiting, it's synchronous rpc */
++			INIT_WORK(&c->work, rpc_routine);
++			queue_work_on(smp_processor_id(), system_highpri_wq, &c->work);
++		}
++	}
++	spin_unlock_irqrestore(&__rpc_lock, flags);
++
++	if (retry)
++		pr_emerg("retry %ld\n", retry);
++}
++
++static struct rpc_cmd *__mbedtee_rpc_get_cmd(
++	void *data, size_t size)
++{
++	unsigned long cmd_phy = 0;
++
++	memcpy(&cmd_phy, data, sizeof(cmd_phy));
++
++	return phys_to_virt(cmd_phy);
++}
++
++/*
++ * Internal RPC instance to complete the rpc call
++ */
++static void mbedtee_rpc_complete(void *data, size_t size)
++{
++	struct rpc_cmd *cmd = __mbedtee_rpc_get_cmd(data, size);
++
++	if (!cmd || !cmd->waiter)
++		return;
++
++	smp_rmb();
++	if (!cmd->interrupted)
++		complete((void *)cmd->waiter);
++	else {
++		struct page *p = virt_to_page(cmd);
++		kunmap(p);
++		put_page(p);
++	}
++}
++
++static void mbedtee_ree_time(void *data, size_t size)
++{
++	struct timespec64 *ts = (void *)data;
++
++	ktime_get_real_ts64(ts);
++}
++
++static void mbedtee_reefs_supp(void *data, size_t size)
++{
++	mbedtee_supp_handler(clnt, SUPP_REEFS, data, size);
++}
++
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func)
++{
++	if (id >= RPC_REENR || !func)
++		return -EINVAL;
++
++	__rpc_callee_funcs[id] = func;
++
++	return 0;
++}
++EXPORT_SYMBOL(mbedtee_register_rpc);
++
++void mbedtee_unregister_rpc(unsigned int id)
++{
++	if (id >= RPC_REENR)
++		return;
++
++	__rpc_callee_funcs[id] = NULL;
++}
++EXPORT_SYMBOL(mbedtee_unregister_rpc);
++
++int mbedtee_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-t2r-shm", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	t2r_shm_phys = of_read_ulong(range, naddr);
++	t2r_shm = ioremap(t2r_shm_phys,
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_shm)
++		t2r_shm = phys_to_virt(t2r_shm_phys);
++
++	pr_info("rpc-t2r-shm %lx\n", t2r_shm_phys);
++
++	range = of_get_property(dn, "rpc-t2r-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("rpc-t2r-ring %lx\n", of_read_ulong(range, naddr));
++
++	t2r_ring_sz = of_read_ulong(range + naddr, nsize) -
++			sizeof(struct rpc_ringbuf);
++
++	t2r_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_ring)
++		t2r_ring = phys_to_virt(of_read_ulong(range, naddr));
++
++	mbedtee_register_rpc(RPC_REEFS, mbedtee_reefs_supp);
++	mbedtee_register_rpc(RPC_REETIME, mbedtee_ree_time);
++	mbedtee_register_rpc(RPC_COMPLETE_REE, mbedtee_rpc_complete);
++
++	return 0;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/rpc-caller-arm.c linux-5.15.175/drivers/tee/mbedtee/rpc-caller-arm.c
+--- linux-5.15.175-ori/drivers/tee/mbedtee/rpc-caller-arm.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/rpc-caller-arm.c	2024-12-30 16:28:15.790408697 +0800
+@@ -0,0 +1,98 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * ARM RPC calls to TEE - relies on SMC
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static inline long trigger_smc(unsigned long rpc)
++{
++	long ret = 0;
++
++#ifdef CONFIG_ARM
++	register long r0 asm ("r0") = rpc;
++	smp_wmb();
++	asm volatile(".arch_extension sec\n"
++				"smc 0x0" : "=r" (ret) : "r" (r0): "memory", "cc");
++#endif
++
++#ifdef CONFIG_ARM64
++	register long x0 asm ("x0") = rpc;
++	smp_wmb();
++	asm volatile("smc 0x0" : "=r" (ret) : "r" (x0) : "memory", "cc");
++#endif
++
++	return ret;
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret)
++		return ret;
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	static long buff[CONFIG_NR_CPUS][((sizeof(struct rpc_cmd)\
++		/ sizeof(long)) + 4)] __attribute__ ((aligned (64))) = {0};
++	struct rpc_cmd *rpc = NULL;
++	unsigned long flags = 0;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	local_irq_save(flags);
++
++	rpc = (struct rpc_cmd *)buff[smp_processor_id()];
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret == 0)
++		ret = rpc->ret;
++
++	local_irq_restore(flags);
++
++	return ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/rpc-caller-riscv.c linux-5.15.175/drivers/tee/mbedtee/rpc-caller-riscv.c
+--- linux-5.15.175-ori/drivers/tee/mbedtee/rpc-caller-riscv.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/rpc-caller-riscv.c	2024-12-30 18:28:40.151345508 +0800
+@@ -0,0 +1,234 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RISCV RPC calls to TEE - relies on IPI (sswi)
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static DEFINE_SPINLOCK(rpc_lock);
++static struct rpc_ringbuf *r2t_ring = NULL;
++static unsigned int r2t_ring_sz = 0;
++static void *sswi_base = NULL;
++
++static int r2t_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-r2t-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize)) {
++		pr_info("lack of rpc-r2t-ring\n");
++		return ret;
++	}
++
++	pr_info("rpc-r2t-ring %lx\n", of_read_ulong(range, naddr));
++
++	r2t_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	r2t_ring_sz = of_read_ulong(range + naddr, nsize) -
++				sizeof(struct rpc_ringbuf);
++
++	dn = of_find_compatible_node(NULL, NULL, "riscv,aclint-sswi");
++	if (!dn) {
++		pr_info("lack of riscv,aclint-sswi\n");
++		return ret;
++	}
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "reg", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("riscv,aclint-sswi %lx\n", of_read_ulong(range, naddr));
++
++	sswi_base = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	return 0;
++}
++
++/*
++ * check if the remain ring-buff is
++ * enough or not for current call
++ */
++static int rpc_ring_enough(unsigned int size)
++{
++	unsigned int wr = 0, rd = 0;
++	unsigned int remain = 0,ringsz = r2t_ring_sz;
++	struct rpc_ringbuf *shm = r2t_ring;
++
++	wr = shm->wr;
++	rd = shm->rd;
++	smp_rmb();
++
++	if ((rd > ringsz) || (wr > ringsz))
++		return false;
++
++	if (rd <= wr)
++		remain = ringsz + rd - wr;
++	else
++		remain = rd - wr;
++
++	return remain >= size;
++}
++
++/*
++ * copy into the ring-buff,
++ * and update the write ptr
++ */
++static void rpc_ring_write(void *data, unsigned int size)
++{
++	struct rpc_ringbuf *shm = r2t_ring;
++	unsigned int remain = 0, ringsz = r2t_ring_sz;
++	static unsigned int wr = 0;
++
++	if (wr + size > ringsz) {
++		remain = wr + size - ringsz;
++		memcpy(&shm->mem[wr], data, size - remain);
++		mbedtee_flush_cache(&shm->mem[wr], size - remain);
++		memcpy(&shm->mem[0], data + size - remain, remain);
++		mbedtee_flush_cache(&shm->mem[0], remain);
++		wr = remain;
++	} else {
++		memcpy(&shm->mem[wr], data, size);
++		mbedtee_flush_cache(&shm->mem[wr], size);
++		wr += size;
++	}
++
++	shm->wr = wr;
++
++	smp_mb();
++}
++
++static void trigger_sswi(void)
++{
++	iowrite32(1, (int *)sswi_base + 0);
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	long buff[((sizeof(struct rpc_cmd)/sizeof(long)) + 4)] = {0};
++	struct rpc_cmd *rpc = (void *)buff;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	/* 3 args */
++	rpc->size = 3 * sizeof(long);
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	ret = wait_for_completion_interruptible(&c);
++	if (ret)
++		return ret;
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/shm_pool.c linux-5.15.175/drivers/tee/mbedtee/shm_pool.c
+--- linux-5.15.175-ori/drivers/tee/mbedtee/shm_pool.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/shm_pool.c	2024-12-30 16:28:15.790408697 +0800
+@@ -0,0 +1,86 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2017, EPAM Systems
++ */
++#include <linux/device.h>
++#include <linux/dma-buf.h>
++#include <linux/genalloc.h>
++#include <linux/slab.h>
++
++#include "mbedtee_drv.h"
++
++static int pool_op_alloc(struct tee_shm_pool_mgr *pool,
++			 struct tee_shm *shm, size_t size)
++{
++	unsigned int order = get_order(size);
++	struct page *page;
++	int rc = 0;
++
++	page = alloc_pages(GFP_KERNEL | __GFP_ZERO, order);
++	if (!page)
++		return -ENOMEM;
++
++	shm->kaddr = page_address(page);
++	shm->paddr = page_to_phys(page);
++	shm->size = PAGE_SIZE << order;
++
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield) {
++		unsigned int nr_pages = 1 << order, i;
++		struct page **pages;
++
++		pages = kcalloc(nr_pages, sizeof(pages), GFP_KERNEL);
++		if (!pages)
++			return -ENOMEM;
++
++		for (i = 0; i < nr_pages; i++) {
++			pages[i] = page;
++			page++;
++		}
++
++		rc = mbedtee_shm_register(shm->ctx, shm, pages, nr_pages,
++					(unsigned long)shm->kaddr);
++		kfree(pages);
++	}
++
++	return rc;
++}
++
++static void pool_op_free(struct tee_shm_pool_mgr *pool,
++			 struct tee_shm *shm)
++{
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield)
++		mbedtee_shm_unregister(shm->ctx, shm);
++
++	free_pages((unsigned long)shm->kaddr, get_order(shm->size));
++	shm->kaddr = NULL;
++}
++
++static void pool_op_destroy_pool(struct tee_shm_pool_mgr *pool)
++{
++	kfree(pool);
++}
++
++static const struct tee_shm_pool_mgr_ops pool_ops = {
++	.alloc = pool_op_alloc,
++	.free = pool_op_free,
++	.destroy_poolmgr = pool_op_destroy_pool,
++};
++
++/**
++ * mbedtee_shm_pool_alloc_pages() - create page-based allocator pool
++ *
++ * This pool is used when MBEDTEE supports dymanic SHM. In this case
++ * command buffers and such are allocated from kernel's own memory.
++ */
++struct tee_shm_pool_mgr *mbedtee_shm_pool_alloc_pages(void)
++{
++	struct tee_shm_pool_mgr *pool = kzalloc(sizeof(*pool), GFP_KERNEL);
++
++	if (!pool)
++		return ERR_PTR(-ENOMEM);
++
++	pool->ops = &pool_ops;
++
++	return pool;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/shm_pool.h linux-5.15.175/drivers/tee/mbedtee/shm_pool.h
+--- linux-5.15.175-ori/drivers/tee/mbedtee/shm_pool.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/shm_pool.h	2024-12-30 16:28:15.790408697 +0800
+@@ -0,0 +1,14 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2016, EPAM Systems
++ */
++
++#ifndef SHM_POOL_H
++#define SHM_POOL_H
++
++#include <linux/tee_drv.h>
++
++struct tee_shm_pool_mgr *mbedtee_shm_pool_alloc_pages(void);
++
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/mbedtee/supp.c linux-5.15.175/drivers/tee/mbedtee/supp.c
+--- linux-5.15.175-ori/drivers/tee/mbedtee/supp.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-5.15.175/drivers/tee/mbedtee/supp.c	2024-12-30 16:28:15.791408697 +0800
+@@ -0,0 +1,210 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ */
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/uaccess.h>
++#include <linux/highmem.h>
++#include <asm/cacheflush.h>
++
++#include "mbedtee_drv.h"
++
++struct mbedtee_supp_req {
++	int ret;
++	u32 func;
++
++	struct list_head node;
++
++	struct tee_shm *shm;
++	void *data;
++	size_t size;
++
++	struct completion c;
++};
++
++void mbedtee_supp_init(struct mbedtee_supp *supp)
++{
++	memset(supp, 0, sizeof(*supp));
++	mutex_init(&supp->mutex);
++	init_completion(&supp->reqs_c);
++	INIT_LIST_HEAD(&supp->reqs);
++}
++
++void mbedtee_supp_uninit(struct mbedtee_supp *supp)
++{
++	mutex_destroy(&supp->mutex);
++}
++
++void mbedtee_supp_release(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *r, *n;
++
++	mutex_lock(&supp->mutex);
++
++	list_for_each_entry_safe(r, n, &supp->reqs, node) {
++		list_del(&r->node);
++		r->ret = -ERESTARTSYS;
++		complete(&r->c);
++	}
++
++	supp->ctx = NULL;
++	supp->req = NULL;
++
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_enqueue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_add_tail(&req->node, &supp->reqs);
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_dequeue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_del(&req->node);
++	mutex_unlock(&supp->mutex);
++}
++
++/*
++ * receive the request from mbedtee,
++ * then push it to mbedtee_supp
++ */
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size)
++{
++	int ret = -1;
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = kzalloc(sizeof(*req), GFP_KERNEL);
++
++	if (req == NULL)
++		return -ENOMEM;
++
++	init_completion(&req->c);
++	req->func = func;
++	req->data = data;
++	req->size = size;
++
++	supp_enqueue_req(supp, req);
++
++	/* wakeup the mbedtee_supp daemon to handle this request */
++	complete(&supp->reqs_c);
++
++	if (wait_for_completion_interruptible(&req->c)) {
++		req->ret = -ERESTARTSYS;
++		supp_dequeue_req(supp, req);
++	}
++
++	ret = req->ret;
++	kfree(req);
++	return ret;
++}
++
++static struct mbedtee_supp_req *supp_pop_req(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *req;
++
++	mutex_lock(&supp->mutex);
++
++	/*
++	 * last request not finishs
++	 */
++	if (supp->req != NULL) {
++		req = ERR_PTR(-EINVAL);
++		goto out;
++	}
++
++	req = list_first_entry_or_null(&supp->reqs,
++			struct mbedtee_supp_req, node);
++
++	if (req) {
++		list_del(&req->node);
++		supp->req = req;
++	}
++
++out:
++	mutex_unlock(&supp->mutex);
++	return req;
++}
++
++/*
++ * receive request for mbedtee_supp
++ */
++int mbedtee_supp_recv(struct tee_context *ctx,
++	u32 *func, u32 *num_params, struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = NULL;
++	struct mbedtee_context_data *d = ctx->data;
++	struct tee_shm *shm = param->u.memref.shm;
++
++	if (*num_params != 1)
++		return -EINVAL;
++
++	if ((tee_param_is_memref(param) != true) ||
++		(param->u.memref.shm == NULL))
++		return -EINVAL;
++
++	d->is_supp_ctx = true;
++
++	tee_shm_put(shm);
++
++	while (true) {
++		req = supp_pop_req(supp);
++		if (IS_ERR(req))
++			return PTR_ERR(req);
++
++		if (req != NULL)
++			break;
++
++		if (wait_for_completion_interruptible(&supp->reqs_c))
++			return -ERESTARTSYS;
++	}
++
++	if (req->size > param->u.memref.size)
++		return -EOVERFLOW;
++
++	*func = req->func;
++	req->shm = shm;
++
++	memcpy(shm->kaddr, req->data, req->size);
++	param->u.memref.size = req->size;
++
++	return 0;
++}
++
++/*
++ * mbedtee_supp send result to mbedtee_supp_handler()
++ */
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = supp->req;
++
++	if (IS_ERR_OR_NULL(req))
++		return PTR_ERR(req);
++
++	if (req->size < param->u.memref.size)
++		ret = -EOVERFLOW;
++
++	req->ret = ret;
++	memcpy(req->data, req->shm->kaddr, param->u.memref.size);
++
++	mutex_lock(&supp->mutex);
++	supp->req = NULL;
++	mutex_unlock(&supp->mutex);
++
++	/* wakeup mbedtee_supp_handler() */
++	complete(&req->c);
++
++	return 0;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tee/tee_core.c linux-5.15.175/drivers/tee/tee_core.c
+--- linux-5.15.175-ori/drivers/tee/tee_core.c	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/drivers/tee/tee_core.c	2024-12-30 16:28:15.791408697 +0800
+@@ -581,8 +581,10 @@ static int tee_ioctl_invoke(struct tee_c
+ 			return -ENOMEM;
+ 		uparams = uarg->params;
+ 		rc = params_from_user(ctx, params, arg.num_params, uparams);
+-		if (rc)
++		if (rc) {
++			pr_emerg("rc %d\n", rc);
+ 			goto out;
++		}
+ 	}
+ 
+ 	rc = ctx->teedev->desc->ops->invoke_func(ctx, &arg, params);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/drivers/tty/serial/amba-pl011.c linux-5.15.175/drivers/tty/serial/amba-pl011.c
+--- linux-5.15.175-ori/drivers/tty/serial/amba-pl011.c	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/drivers/tty/serial/amba-pl011.c	2024-12-30 16:28:15.792408697 +0800
+@@ -2610,6 +2610,51 @@ static int pl011_early_read(struct conso
+ #define pl011_early_read NULL
+ #endif
+ 
++static __init void __pl011_early_port_setup(struct uart_port *p)
++{
++	int brd_i = 0;
++	int brd_f = 0;
++	int baud = 115200, divisor = 16;
++
++	p->uartclk = 24000000;
++
++	/*
++	 * Disable all
++	 */
++	iowrite32(0, p->membase + UART011_CR);
++
++	/* mask/clear all interrupt */
++	iowrite32(0, p->membase + UART011_IMSC);
++	iowrite32(UART011_OEIC | UART011_BEIC | UART011_PEIC |
++				UART011_FEIC | UART011_RTIC | UART011_RXIC,
++			p->membase + UART011_ICR);
++
++	/* Baud rate divisor
++	 *	BAUDDIV = (FUARTCLK/ {16 * Baud rate})
++	 *  fractional part, m = integer((x * 64) + 0.5)
++	 */
++	brd_i = p->uartclk * 64 / (baud * divisor);
++	brd_f = brd_i & 0x3F;
++	brd_i >>= 6;
++	iowrite32(brd_i, p->membase + UART011_IBRD);
++	iowrite32(brd_f, p->membase + UART011_FBRD);
++
++	/*
++	 * 8-bit data, 1-bit stop, none-parity, with FIFO
++	 */
++	iowrite32(UART01x_LCRH_WLEN_8 | UART01x_LCRH_FEN,
++				p->membase + UART011_LCRH);
++	iowrite32(UART011_IFLS_RX4_8 | UART011_IFLS_TX4_8,
++				p->membase + UART011_IFLS);
++
++	/*
++	 * Enable UART - TX only
++	 */
++	iowrite32(UART01x_CR_UARTEN | UART011_CR_TXE,
++				p->membase + UART011_CR);
++	iowrite32(UART011_TXIM, p->membase + UART011_IMSC);
++}
++
+ /*
+  * On non-ACPI systems, earlycon is enabled by specifying
+  * "earlycon=pl011,<address>" on the kernel command line.
+@@ -2628,6 +2673,8 @@ static int __init pl011_early_console_se
+ 	if (!device->port.membase)
+ 		return -ENODEV;
+ 
++	__pl011_early_port_setup(&device->port);
++
+ 	device->con->write = pl011_early_write;
+ 	device->con->read = pl011_early_read;
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/include/linux/tee_drv.h linux-5.15.175/include/linux/tee_drv.h
+--- linux-5.15.175-ori/include/linux/tee_drv.h	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/include/linux/tee_drv.h	2024-12-30 16:28:15.793408697 +0800
+@@ -213,6 +213,7 @@ struct tee_shm {
+ 	refcount_t refcount;
+ 	u32 flags;
+ 	int id;
++	u64 sec_world_id;
+ };
+ 
+ /**
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-5.15.175-ori/include/uapi/linux/tee.h linux-5.15.175/include/uapi/linux/tee.h
+--- linux-5.15.175-ori/include/uapi/linux/tee.h	2024-12-20 01:07:23.000000000 +0800
++++ linux-5.15.175/include/uapi/linux/tee.h	2024-12-30 16:28:15.793408697 +0800
+@@ -61,6 +61,8 @@
+ #define TEE_IMPL_ID_OPTEE	1
+ #define TEE_IMPL_ID_AMDTEE	2
+ 
++#define TEE_IMPL_ID_MBEDTEE	8
++
+ /*
+  * OP-TEE specific capabilities
+  */
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/linux/patches/mbedtee-linux-6.1.122.patch-- buildroot/linux/patches/mbedtee-linux-6.1.122.patch--
--- buildroot-ori/linux/patches/mbedtee-linux-6.1.122.patch--	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/linux/patches/mbedtee-linux-6.1.122.patch--	2025-05-31 23:12:46.388378055 +0800
@@ -0,0 +1,2147 @@
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/arch/arm/boot/compressed/head.S linux-6.1.122/arch/arm/boot/compressed/head.S
+--- linux-6.1.122-ori/arch/arm/boot/compressed/head.S	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/arch/arm/boot/compressed/head.S	2024-12-30 11:15:09.002023080 +0800
+@@ -309,7 +309,8 @@ not_angel:
+ 1:
+ #endif /* CONFIG_USE_OF */
+ 		/* Determine final kernel image address. */
+-		add	r4, r0, #TEXT_OFFSET
++		ldr	r4, =TEXT_OFFSET
++		add	r4, r0, r4
+ #else
+ 		ldr	r4, =zreladdr
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/arch/arm/kernel/head.S linux-6.1.122/arch/arm/kernel/head.S
+--- linux-6.1.122-ori/arch/arm/kernel/head.S	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/arch/arm/kernel/head.S	2024-12-30 11:15:09.002023080 +0800
+@@ -65,7 +65,8 @@ kernel_sec_end:
+ 	.popsection
+ 
+ 	.macro	pgtbl, rd, phys
+-	add	\rd, \phys, #TEXT_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	add	\rd, \phys, r0
+ 	sub	\rd, \rd, #PG_DIR_SIZE
+ 	.endm
+ 
+@@ -120,7 +121,9 @@ ENTRY(stext)
+ 
+ #ifndef CONFIG_XIP_KERNEL
+ 	adr_l	r8, _text			@ __pa(_text)
+-	sub	r8, r8, #TEXT_OFFSET		@ PHYS_OFFSET
++#	sub	r8, r8, #TEXT_OFFSET	@ PHYS_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	sub	r8, r8, r0				@ PHYS_OFFSET
+ #else
+ 	ldr	r8, =PLAT_PHYS_OFFSET		@ always constant in this case
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/arch/arm/kernel/smp.c linux-6.1.122/arch/arm/kernel/smp.c
+--- linux-6.1.122-ori/arch/arm/kernel/smp.c	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/arch/arm/kernel/smp.c	2024-12-30 11:15:09.003023081 +0800
+@@ -66,20 +66,21 @@ enum ipi_msg_type {
+ 	IPI_CPU_STOP,
+ 	IPI_IRQ_WORK,
+ 	IPI_COMPLETION,
+-	NR_IPI,
+ 	/*
+ 	 * CPU_BACKTRACE is special and not included in NR_IPI
+ 	 * or tracable with trace_ipi_*
+ 	 */
+-	IPI_CPU_BACKTRACE = NR_IPI,
++	IPI_CPU_BACKTRACE,
+ 	/*
+ 	 * SGI8-15 can be reserved by secure firmware, and thus may
+ 	 * not be usable by the kernel. Please keep the above limited
+ 	 * to at most 8 entries.
+ 	 */
++	IPI_TEECALL,
++	NR_IPI,
+ 	MAX_IPI
+ };
+-
++extern void mbedtee_rpc_isr(void);
+ static int ipi_irq_base __read_mostly;
+ static int nr_ipi __read_mostly = NR_IPI;
+ static struct irq_desc *ipi_desc[MAX_IPI] __read_mostly;
+@@ -679,6 +680,11 @@ static void do_handle_IPI(int ipinr)
+ 		printk_deferred_exit();
+ 		break;
+ 
++	/* mbedtee callback */
++	case IPI_TEECALL:
++		mbedtee_rpc_isr();
++		break;
++
+ 	default:
+ 		pr_crit("CPU%u: Unknown IPI message 0x%x\n",
+ 		        cpu, ipinr);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/arch/arm/Makefile linux-6.1.122/arch/arm/Makefile
+--- linux-6.1.122-ori/arch/arm/Makefile	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/arch/arm/Makefile	2024-12-30 11:15:09.003023081 +0800
+@@ -142,7 +142,7 @@ CHECKFLAGS	+= -D__arm__
+ # Note: the 32kB below this value is reserved for use by the kernel
+ # during boot, and this offset is critical to the functioning of
+ # kexec-tools.
+-textofs-y	:= 0x00008000
++textofs-y	:= 0x06008000
+ # We don't want the htc bootloader to corrupt kernel during resume
+ textofs-$(CONFIG_PM_H1940)      := 0x00108000
+ # RTD1195 has Boot ROM at start of address space
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/arch/arm64/kernel/smp.c linux-6.1.122/arch/arm64/kernel/smp.c
+--- linux-6.1.122-ori/arch/arm64/kernel/smp.c	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/arch/arm64/kernel/smp.c	2024-12-30 11:15:09.004023081 +0800
+@@ -74,6 +74,8 @@ enum ipi_msg_type {
+ 	IPI_TIMER,
+ 	IPI_IRQ_WORK,
+ 	IPI_WAKEUP,
++	IPI_RESERVED, /* 0 ~ 7 for REE */
++	IPI_TEECALL, /* 8 ~ 15 for TEE */
+ 	NR_IPI
+ };
+ 
+@@ -902,6 +904,12 @@ static void do_handle_IPI(int ipinr)
+ 		break;
+ #endif
+ 
++	/* mbedtee RPC callback */
++	case IPI_TEECALL:
++		extern void mbedtee_rpc_isr(void);
++		mbedtee_rpc_isr();
++		break;
++
+ #ifdef CONFIG_ARM64_ACPI_PARKING_PROTOCOL
+ 	case IPI_WAKEUP:
+ 		WARN_ONCE(!acpi_parking_protocol_valid(cpu),
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/arch/riscv/kernel/smp.c linux-6.1.122/arch/riscv/kernel/smp.c
+--- linux-6.1.122-ori/arch/riscv/kernel/smp.c	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/arch/riscv/kernel/smp.c	2024-12-30 11:15:09.005023081 +0800
+@@ -155,9 +155,12 @@ void handle_IPI(struct pt_regs *regs)
+ 	unsigned int cpu = smp_processor_id();
+ 	unsigned long *pending_ipis = &ipi_data[cpu].bits;
+ 	unsigned long *stats = ipi_data[cpu].stats;
++	extern void mbedtee_rpc_isr(void);
+ 
+ 	riscv_clear_ipi();
+ 
++	mbedtee_rpc_isr();
++
+ 	while (true) {
+ 		unsigned long ops;
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/firmware/psci/psci.c linux-6.1.122/drivers/firmware/psci/psci.c
+--- linux-6.1.122-ori/drivers/firmware/psci/psci.c	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/drivers/firmware/psci/psci.c	2024-12-30 11:15:09.005023081 +0800
+@@ -268,12 +268,14 @@ static unsigned long psci_migrate_info_u
+ 
+ static void set_conduit(enum arm_smccc_conduit conduit)
+ {
++	extern psci_fn mbedtee_rpc_fastcall;
++
+ 	switch (conduit) {
+ 	case SMCCC_CONDUIT_HVC:
+ 		invoke_psci_fn = __invoke_psci_fn_hvc;
+ 		break;
+ 	case SMCCC_CONDUIT_SMC:
+-		invoke_psci_fn = __invoke_psci_fn_smc;
++		invoke_psci_fn = mbedtee_rpc_fastcall;
+ 		break;
+ 	default:
+ 		WARN(1, "Unexpected PSCI conduit %d\n", conduit);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/irqchip/irq-gic.c linux-6.1.122/drivers/irqchip/irq-gic.c
+--- linux-6.1.122-ori/drivers/irqchip/irq-gic.c	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/drivers/irqchip/irq-gic.c	2024-12-30 11:15:09.005023081 +0800
+@@ -867,13 +867,17 @@ static __init void gic_smp_init(void)
+ 				  "irqchip/arm/gic:starting",
+ 				  gic_starting_cpu, NULL);
+ 
+-	base_sgi = __irq_domain_alloc_irqs(gic_data[0].domain, -1, 8,
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = __irq_domain_alloc_irqs(gic_data[0].domain, -1, 16,
+ 					   NUMA_NO_NODE, &sgi_fwspec,
+ 					   false, NULL);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ #else
+ #define gic_smp_init()		do { } while(0)
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/irqchip/irq-gic-v3.c linux-6.1.122/drivers/irqchip/irq-gic-v3.c
+--- linux-6.1.122-ori/drivers/irqchip/irq-gic-v3.c	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/drivers/irqchip/irq-gic-v3.c	2024-12-30 11:15:09.006023081 +0800
+@@ -1358,13 +1358,17 @@ static void __init gic_smp_init(void)
+ 				  gic_starting_cpu, NULL);
+ 
+ 	/* Register all 8 non-secure SGIs */
+-	base_sgi = __irq_domain_alloc_irqs(gic_data.domain, -1, 8,
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = __irq_domain_alloc_irqs(gic_data.domain, -1, 16,
+ 					   NUMA_NO_NODE, &sgi_fwspec,
+ 					   false, NULL);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ 
+ static int gic_set_affinity(struct irq_data *d, const struct cpumask *mask_val,
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/Kconfig linux-6.1.122/drivers/tee/Kconfig
+--- linux-6.1.122-ori/drivers/tee/Kconfig	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/drivers/tee/Kconfig	2024-12-30 11:15:09.007023081 +0800
+@@ -15,5 +15,6 @@ if TEE
+ 
+ source "drivers/tee/optee/Kconfig"
+ source "drivers/tee/amdtee/Kconfig"
++source "drivers/tee/mbedtee/Kconfig"
+ 
+ endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/Makefile linux-6.1.122/drivers/tee/Makefile
+--- linux-6.1.122-ori/drivers/tee/Makefile	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/drivers/tee/Makefile	2024-12-30 11:15:09.007023081 +0800
+@@ -5,3 +5,4 @@ tee-objs += tee_shm.o
+ tee-objs += tee_shm_pool.o
+ obj-$(CONFIG_OPTEE) += optee/
+ obj-$(CONFIG_AMDTEE) += amdtee/
++obj-$(CONFIG_MBEDTEE) += mbedtee/
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/core.c linux-6.1.122/drivers/tee/mbedtee/core.c
+--- linux-6.1.122-ori/drivers/tee/mbedtee/core.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/core.c	2024-12-30 11:15:09.007023081 +0800
+@@ -0,0 +1,253 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#include <linux/errno.h>
++#include <linux/io.h>
++#include <linux/module.h>
++#include <linux/of.h>
++#include <linux/of_platform.h>
++#include <linux/platform_device.h>
++#include <linux/slab.h>
++#include <linux/string.h>
++#include <linux/tee_drv.h>
++#include <linux/types.h>
++#include <linux/uaccess.h>
++#include "mbedtee_drv.h"
++#include "shm_pool.h"
++
++#include "../tee_private.h"
++
++struct mbedtee_clnt __clnt = {0}, *clnt = &__clnt;
++
++static void mbedtee_get_version(struct tee_device *teedev,
++			      struct tee_ioctl_version_data *vers)
++{
++	struct tee_ioctl_version_data v = {
++		.impl_id = TEE_IMPL_ID_MBEDTEE,
++		.impl_caps = 0,
++		.gen_caps = TEE_GEN_CAP_GP | TEE_GEN_CAP_REG_MEM | TEE_GEN_CAP_MEMREF_NULL,
++	};
++
++	*vers = v;
++}
++
++static int mbedtee_open(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *ctxdata;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++
++	ctxdata = kzalloc(sizeof(*ctxdata), GFP_KERNEL);
++	if (!ctxdata)
++		return -ENOMEM;
++
++	mutex_init(&ctxdata->mutex);
++	INIT_LIST_HEAD(&ctxdata->sess_list);
++
++	dev_dbg(clnt->dev, "mbedtee_open\n");
++
++	ctx->data = ctxdata;
++	ctx->cap_memref_null = true;
++
++	return 0;
++}
++
++static void mbedtee_release(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *d = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *s, *n = NULL;
++
++	if (d == NULL)
++		return;
++
++	if (d->is_supp_ctx)
++		mbedtee_supp_release(&clnt->supp);
++	else {
++		list_for_each_entry_safe(s, n, &d->sess_list, list_node) {
++			dev_dbg(clnt->dev, "mbedtee_release %d\n", s->session_id);
++			mbedtee_close_session(ctx, s->session_id);
++		}
++	}
++
++	kfree(d);
++	ctx->data = NULL;
++}
++
++static const struct tee_driver_ops mbedtee_ops = {
++	.get_version = mbedtee_get_version,
++	.open = mbedtee_open,
++	.release = mbedtee_release,
++	.open_session = mbedtee_open_session,
++	.close_session = mbedtee_close_session,
++	.invoke_func = mbedtee_invoke_session,
++	.cancel_req = mbedtee_cancel_req,
++	.supp_recv = mbedtee_supp_recv,
++	.supp_send = mbedtee_supp_send,
++	.shm_register = mbedtee_shm_register,
++	.shm_unregister = mbedtee_shm_unregister,
++};
++
++
++static const struct tee_desc mbedtee_desc = {
++	.name = "mbedtee-clnt",
++	.ops = &mbedtee_ops,
++	.owner = THIS_MODULE,
++};
++
++#if defined(MBEDTEE_NODE_IN_DTS)
++static int mbedtee_remove(struct platform_device *pdev)
++{
++	struct mbedtee_clnt *clnt = platform_get_drvdata(pdev);
++
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++
++	return 0;
++}
++
++static int mbedtee_probe(struct platform_device *pdev)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	dev_info(&pdev->dev, "mbedtee client probing\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		dev_info(&pdev->dev, "mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	dev_info(&pdev->dev, "mbedtee version: 0x%06x\n", version);
++	dev_info(&pdev->dev, "mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &pdev->dev;
++
++	platform_set_drvdata(pdev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client probed\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++
++	return ret;
++}
++
++static const struct of_device_id mbedtee_dt_match[] = {
++	{ .compatible = "mbedtee-clnt" },
++	{},
++};
++
++MODULE_DEVICE_TABLE(of, mbedtee_dt_match);
++
++static struct platform_driver mbedtee_driver = {
++	.probe  = mbedtee_probe,
++	.remove = mbedtee_remove,
++	.driver = {
++		.name = "mbedtee-clnt",
++		.of_match_table = mbedtee_dt_match,
++	},
++};
++module_platform_driver(mbedtee_driver);
++#endif
++
++static void __exit mbedtee_exit(void)
++{
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++}
++
++static int __init mbedtee_init(void)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	pr_info("mbedtee client init\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		pr_info("mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	pr_info("mbedtee version: 0x%06x\n", version);
++	pr_info("mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &teedev->dev;
++
++	dev_set_drvdata(mbedclnt->dev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client initialized\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++	return ret;
++}
++module_init(mbedtee_init);
++module_exit(mbedtee_exit);
++
++MODULE_AUTHOR("Kapa");
++MODULE_DESCRIPTION("MBEDTEE Client");
++MODULE_VERSION("1.0");
++MODULE_LICENSE("GPL v2");
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/Kconfig linux-6.1.122/drivers/tee/mbedtee/Kconfig
+--- linux-6.1.122-ori/drivers/tee/mbedtee/Kconfig	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/Kconfig	2024-12-30 11:15:09.007023081 +0800
+@@ -0,0 +1,8 @@
++# SPDX-License-Identifier: GPL-2.0-only
++# MBED-TEE Trusted Execution Environment Configuration
++config MBEDTEE
++	tristate "MBEDTEE"
++	depends on MMU
++	help
++	  This implements the MBEDTEE Trusted Execution Environment (TEE)
++	  driver.
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/Makefile linux-6.1.122/drivers/tee/mbedtee/Makefile
+--- linux-6.1.122-ori/drivers/tee/mbedtee/Makefile	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/Makefile	2024-12-30 11:15:09.007023081 +0800
+@@ -0,0 +1,13 @@
++# SPDX-License-Identifier: GPL-2.0
++
++ccflags-$(CONFIG_MBEDTEE) += -I$(STAGING_DIR)/usr/include/mbedtee
++
++obj-$(CONFIG_MBEDTEE) += mbedtee.o
++
++mbedtee-y += core.o
++mbedtee-y += supp.o
++mbedtee-y += shm_pool.o
++mbedtee-y += rpc.o rpc-callee.o
++mbedtee-$(CONFIG_ARM) += rpc-caller-arm.o
++mbedtee-$(CONFIG_ARM64) += rpc-caller-arm.o
++mbedtee-$(CONFIG_RISCV) += rpc-caller-riscv.o
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/mbedtee_drv.h linux-6.1.122/drivers/tee/mbedtee/mbedtee_drv.h
+--- linux-6.1.122-ori/drivers/tee/mbedtee/mbedtee_drv.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/mbedtee_drv.h	2024-12-30 11:15:09.008023081 +0800
+@@ -0,0 +1,154 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#ifndef MBEDTEE_DRV_H
++#define MBEDTEE_DRV_H
++
++#include <linux/types.h>
++#include <linux/of.h>
++#include <linux/semaphore.h>
++#include <linux/tee_drv.h>
++#include <linux/syscalls.h>
++#include <asm/cacheflush.h>
++
++#include <rpc/rpc.h>
++#include <rpc/reefs.h>
++
++#include "mbedtee_rpc.h"
++#include "shm_pool.h"
++
++#define TEEC_ERROR_TARGET_DEAD      0xFFFF3024
++#define TEEC_ERROR_OUT_OF_MEMORY    0xFFFF000C
++
++#define TEEC_ORIGIN_COMMS           0x00000002
++#define TEEC_ORIGIN_TEE             0x00000003
++
++#define MBEDTEE_VALID_VERSION(x) ((((x) >> 16) == 1) && \
++	((((x) >> 8) & 0xFF) >= 0) && (((x) & 0xFF) >= 1))
++
++struct mbedtee_supp {
++	struct mutex mutex;
++	struct tee_context *ctx;
++
++	void *req;
++	struct list_head reqs;
++	struct completion reqs_c;
++};
++
++struct mbedtee_clnt {
++	int version;
++	int yield;
++	struct device *dev;
++	struct tee_device *teedev;
++	struct tee_shm_pool *pool;
++	struct mbedtee_supp supp;
++};
++
++struct mbedtee_session {
++	struct list_head list_node;
++	u32 session_id;
++};
++
++struct mbedtee_context_data {
++	int is_supp_ctx;
++	struct mutex mutex;
++	struct list_head sess_list;
++};
++
++typedef struct {
++	uint32_t timeLow;
++	uint16_t timeMid;
++	uint16_t timeHiAndVersion;
++	uint8_t clockSeqAndNode[8];
++} TEEC_UUID;
++
++extern struct mbedtee_clnt *clnt;
++
++#define mbedtee_bswap16(_x) ((__u16)(((_x) >> 8) | (((_x) << 8) & 0xff00)))
++#define mbedtee_bswap32(_x) ((__u32)(((_x) >> 24) | (((_x) >> 8) & 0xff00) | \
++	    (((_x) << 8) & 0xff0000) | (((_x) << 24) & 0xff000000)))
++
++static inline void mbedtee_flush_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM)
++	__cpuc_flush_dcache_area(va, size);
++#endif
++
++#if defined(CONFIG_ARM64)
++	dcache_clean_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* wback & inv */
++	/* ALT_CMO_OP(FLUSH, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline void mbedtee_invalidate_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM64)
++	dcache_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* inv */
++	/* ALT_CMO_OP(INVAL, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline phys_addr_t mbedtee_virt_to_phys(void *va)
++{
++	if (is_vmalloc_or_module_addr(va)) {
++		return page_to_phys(vmalloc_to_page(va)) +
++				    offset_in_page(va);
++	}
++
++	WARN_ON(!virt_addr_valid(va));
++	return virt_to_phys(va);
++}
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size);
++void mbedtee_rpc_free(struct rpc_cmd *rpc);
++
++int mbedtee_open_session(struct tee_context *ctx,
++	struct tee_ioctl_open_session_arg *arg, struct tee_param *param);
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg, struct tee_param *param);
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session);
++
++int mbedtee_cancel_req(struct tee_context *ctx, u32 cancel_id, u32 session);
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start);
++
++int mbedtee_shm_unregister(struct tee_context *ctx, struct tee_shm *shm);
++
++/* TEE->REE RPC */
++int mbedtee_rpc_init(void);
++void mbedtee_rpc_isr(void);
++
++void mbedtee_supp_init(struct mbedtee_supp *supp);
++void mbedtee_supp_uninit(struct mbedtee_supp *supp);
++void mbedtee_supp_release(struct mbedtee_supp *supp);
++int mbedtee_supp_recv(struct tee_context *ctx, u32 *func, u32 *num_params,
++		    struct tee_param *param);
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param);
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size);
++
++/* REE->TEE RPC */
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible);
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2);
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/mbedtee_rpc.h linux-6.1.122/drivers/tee/mbedtee/mbedtee_rpc.h
+--- linux-6.1.122-ori/drivers/tee/mbedtee/mbedtee_rpc.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/mbedtee_rpc.h	2024-12-30 11:15:09.008023081 +0800
+@@ -0,0 +1,30 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ *
++ * Export symbols for other kernel modules
++ */
++#ifndef _MBEDTEE_RPC_H
++#define _MBEDTEE_RPC_H
++
++/*
++ * defines the __typeof__ the RPC callee function handler.
++ * @data - shared memory buffer from the RPC peer.
++ * @size - the data size of this shared memory buffer.
++ */
++typedef void (*rpc_func_t)(void *data, size_t size);
++
++/*
++ * register the rpc callee func.
++ * @id - function id of callee
++ * @return - 0 on success. Else negative num.
++ */
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func);
++
++/*
++ * unregister the callee @id.
++ */
++void mbedtee_unregister_rpc(unsigned int id);
++
++#endif
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/rpc.c linux-6.1.122/drivers/tee/mbedtee/rpc.c
+--- linux-6.1.122-ori/drivers/tee/mbedtee/rpc.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/rpc.c	2024-12-30 11:15:09.008023081 +0800
+@@ -0,0 +1,396 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RPC calls to TEE
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size)
++{
++	struct page *p = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	if (sizeof(struct rpc_cmd) + size > PAGE_SIZE)
++		return NULL;
++
++	p = alloc_page(GFP_KERNEL);
++	if (p == NULL)
++		return NULL;
++
++	rpc = kmap(p);
++	rpc->size = size;
++	rpc->ret = -1;
++	rpc->interrupted = 0;
++
++	return rpc;
++}
++EXPORT_SYMBOL(mbedtee_rpc_alloc);
++
++void mbedtee_rpc_free(struct rpc_cmd *rpc)
++{
++	struct page *p = NULL;
++
++	if (rpc && (!rpc->interrupted)) {
++		p = virt_to_page(rpc);
++		kunmap(p);
++		put_page(p);
++	}
++}
++EXPORT_SYMBOL(mbedtee_rpc_free);
++
++static int mbedtee_param_decode(struct tee_param *params,
++	size_t num_params, const struct rpc_param *rp)
++{
++	size_t n;
++#define TYPE_GET(t, i) ((((uint32_t)t) >> ((i)*4)) & 0xF)
++
++	for (n = 0; n < num_params; n++) {
++		struct tee_param *p = params + n;
++		const union rpc_tee_param *rtp = rp->params + n;
++		u32 attr = TYPE_GET(rp->params_type, n);
++
++		switch (attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(&p->u, 0, sizeof(p->u));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			p->u.value.a = rtp->value.a;
++			p->u.value.b = rtp->value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			p->u.memref.size = rtp->memref.size;
++			break;
++
++		default:
++			return -EINVAL;
++		}
++	}
++	return 0;
++}
++
++static int mbedtee_param_encode(struct rpc_param *rp,
++	size_t num_params, const struct tee_param *params)
++{
++	size_t n;
++#define TYPE_SET(t, i) (((uint32_t)(t) & 0xF) << ((i)*4))
++
++	rp->params_type = TEE_IOCTL_PARAM_ATTR_TYPE_NONE;
++
++	for (n = 0; n < num_params; n++) {
++		const struct tee_param *p = params + n;
++		union rpc_tee_param *rtp = rp->params + n;
++
++		rp->params_type |= TYPE_SET(p->attr, n);
++
++		switch (p->attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(rtp, 0, sizeof(*rtp));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			rtp->value.a = p->u.value.a;
++			rtp->value.b = p->u.value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			if (p->u.memref.shm)
++				rtp->memref.id = p->u.memref.shm->sec_world_id;
++			else
++				rtp->memref.id = 0; /* invalid-id @ mbedtee */
++			rtp->memref.size = p->u.memref.size;
++			rtp->memref.offset = p->u.memref.shm_offs;
++			break;
++		default:
++			return -EINVAL;
++		}
++	}
++
++	return 0;
++}
++
++static void mbedtee_errno_origin(
++	__u32 *errno, __u32 *origin)
++{
++	switch (*errno) {
++	case -ENOMEM:
++		*errno = TEEC_ERROR_OUT_OF_MEMORY;
++		break;
++	case -ESRCH:
++		*origin = TEEC_ORIGIN_TEE;
++		*errno = TEEC_ERROR_TARGET_DEAD;
++		break;
++	default:
++		break;
++	}
++}
++
++static struct mbedtee_session *mbedtee_session_of(
++	struct mbedtee_context_data *ctxdata,
++	u32 session_id)
++{
++	struct mbedtee_session *sess, *ret = NULL;
++
++	mutex_lock(&ctxdata->mutex);
++	list_for_each_entry(sess, &ctxdata->sess_list, list_node)
++		if (sess->session_id == session_id) {
++			ret = sess;
++			break;
++		}
++	mutex_unlock(&ctxdata->mutex);
++	return ret;
++}
++
++int mbedtee_open_session(struct tee_context *ctx,
++			   struct tee_ioctl_open_session_arg *arg,
++			   struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret != 0) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	sess = kzalloc(sizeof(*sess), GFP_KERNEL);
++	if (sess == NULL) {
++		mbedtee_rpc_free(rpc);
++		return -ENOMEM;
++	}
++
++	memcpy(rp->uuid, arg->uuid, sizeof(arg->uuid));
++	memcpy(rp->clnt_uuid, arg->clnt_uuid, sizeof(arg->clnt_uuid));
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_rpc_yieldcall(RPC_OPEN_SESSION, rpc, false);
++
++	dev_dbg(clnt->dev, "open session ret %d\n", ret);
++
++	if (ret == 0) {
++		sess->session_id = rp->session_id;
++		mutex_lock(&ctxdata->mutex);
++		list_add(&sess->list_node, &ctxdata->sess_list);
++		mutex_unlock(&ctxdata->mutex);
++
++		mbedtee_param_decode(param, arg->num_params, rp);
++	} else {
++		kfree(sess);
++	}
++
++	arg->session = rp->session_id;
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg,
++	struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *sess;
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++
++	sess = mbedtee_session_of(ctxdata, arg->session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = arg->session;
++	rp->cmd_id = arg->func;
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	ret = mbedtee_rpc_yieldcall(RPC_INVOKE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "invoke session ret %d\n", ret);
++
++	mbedtee_param_decode(param, arg->num_params, rp);
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CLOSE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "close session ret %d\n", ret);
++
++	mutex_lock(&ctxdata->mutex);
++	list_del(&sess->list_node);
++	kfree(sess);
++	mutex_unlock(&ctxdata->mutex);
++
++	mbedtee_rpc_free(rpc);
++
++	/*
++	 * ESRCH means the session already been closed in
++	 * mbedtee, so REE return success for this case
++	 */
++	return (ret == -ESRCH) ? 0 : ret;
++}
++
++int mbedtee_cancel_req(struct tee_context *ctx,
++	u32 cancel_id, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_session *sess = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(int));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	*(int *)rpc->data = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CANCEL, rpc, false);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start)
++{
++	int ret = -1, i = 0, j = 0;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++	unsigned long *pagearray = NULL;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	size_t pagearray_sz = 0, multiple = PAGE_SIZE / TEE_PAGE_SIZE;
++
++	dev_dbg(clnt->dev, "nr_pages %d @ %d\n", (int)nr_pages, shm->id);
++
++	BUILD_BUG_ON(multiple == 0);
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++
++	pagearray_sz = DIV_ROUND_UP(nr_pages * sizeof(long) * multiple, PAGE_SIZE);
++	pagearray = alloc_pages_exact(pagearray_sz, GFP_KERNEL);
++	if (pagearray == NULL) {
++		ret = -ENOMEM;
++		goto out;
++	}
++
++	for (i = 0; i < nr_pages; i++) {
++		for (j = 0; j < multiple; j++)
++			pagearray[i * multiple + j] = TEE_PAGE_SIZE * j + \
++				page_to_phys(pages[i]);
++	}
++
++	memref->size = tee_shm_get_size(shm);
++	memref->offset = tee_shm_get_page_offset(shm);
++	memref->pages = mbedtee_virt_to_phys(pagearray);
++	memref->cnt = nr_pages * multiple;
++
++	ret = mbedtee_rpc_yieldcall(RPC_REGISTER_SHM, rpc, false);
++
++	if (ret == 0)
++		shm->sec_world_id = memref->id;
++
++	free_pages_exact(pagearray, pagearray_sz);
++
++out:
++	mbedtee_rpc_free(rpc);
++	return ret;
++}
++
++int mbedtee_shm_unregister(struct tee_context *ctx,
++	struct tee_shm *shm)
++{
++	int ret = -1;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++	memref->id = shm->sec_world_id;
++
++	ret = mbedtee_rpc_yieldcall(RPC_UNREGISTER_SHM, rpc, true);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/rpc-callee.c linux-6.1.122/drivers/tee/mbedtee/rpc-callee.c
+--- linux-6.1.122-ori/drivers/tee/mbedtee/rpc-callee.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/rpc-callee.c	2024-12-30 11:15:09.008023081 +0800
+@@ -0,0 +1,299 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ * Callees for TEE->REE RPC
++ */
++#include <linux/slab.h>
++#include <linux/module.h>
++#include <linux/io.h>
++#include <linux/printk.h>
++#include <asm/smp.h>
++#include <asm/cacheflush.h>
++#include <asm/hardirq.h>
++#include <linux/delay.h>
++#include <linux/highmem.h>
++
++#include <rpc/rpc.h>
++
++#include "mbedtee_drv.h"
++
++static void *t2r_shm = NULL;
++static unsigned long t2r_shm_phys = 0;
++static struct rpc_ringbuf *t2r_ring = NULL;
++static unsigned int t2r_ring_sz = 0;
++static unsigned int t2r_ring_rd = 0;
++static unsigned char __rpc_data[PAGE_SIZE] = {0};
++static rpc_func_t __rpc_callee_funcs[RPC_REENR] = {NULL};
++
++static DEFINE_SPINLOCK(__rpc_lock);
++
++struct mbedtee_rpc_work {
++	pid_t waiter;
++	int unfinish;
++	void *data;
++	unsigned int size;
++	rpc_func_t func;
++	struct work_struct work;
++};
++
++static inline size_t mbedtee_rpc_available_size(void)
++{
++	unsigned int wr = 0;
++	unsigned int rd = t2r_ring_rd;
++	unsigned int shm_size = t2r_ring_sz;
++
++	wr = t2r_ring->wr;
++	smp_rmb();
++
++	if (wr > shm_size)
++		return 0;
++
++	if (wr >= rd)
++		return wr - rd;
++	else
++		return shm_size + wr - rd;
++}
++
++static inline void mbedtee_rpc_read(void *data, size_t size)
++{
++	unsigned int remain = 0;
++	unsigned int shm_size = t2r_ring_sz;
++	unsigned int rd = t2r_ring_rd;
++	struct rpc_ringbuf *shm = t2r_ring;
++
++	smp_wmb();
++	if (rd + size <= shm_size) {
++		mbedtee_invalidate_cache(&shm->mem[rd], size);
++		memcpy(data, &shm->mem[rd], size);
++		rd += size;
++	} else {
++		remain = rd + size - shm_size;
++		mbedtee_invalidate_cache(&shm->mem[rd], size - remain);
++		memcpy(data, &shm->mem[rd], size - remain);
++		mbedtee_invalidate_cache(&shm->mem[0], remain);
++		memcpy((unsigned char *)data + size - remain,
++				&shm->mem[0], remain);
++		rd = remain;
++	}
++
++	shm->rd = t2r_ring_rd = rd;
++
++	smp_rmb();
++}
++
++static struct mbedtee_rpc_work *mbedtee_rpc_pick_next(
++	struct mbedtee_rpc_work *c)
++{
++	unsigned long retry = 0;
++	struct rpc_cmd cmd = {0};
++	rpc_func_t func = NULL;
++
++	/* handle the last unfinished rpc */
++	if (c->unfinish) {
++		if (mbedtee_rpc_available_size() < c->size)
++			return NULL;
++		c->unfinish = false;
++		mbedtee_rpc_read((void *)c->data, c->size);
++		return c;
++	}
++
++	if (mbedtee_rpc_available_size() < sizeof(cmd))
++		return NULL;
++
++	mbedtee_rpc_read(&cmd, sizeof(cmd));
++
++	if (cmd.id >= RPC_REENR)
++		return NULL;
++
++	func = __rpc_callee_funcs[cmd.id];
++	if (func == NULL) {
++		pr_emerg("rpc unregister %d ??\n", cmd.id);
++		return NULL;
++	}
++
++	if (cmd.waiter == 0) {
++ 		/* async rpc notification from peer */
++		while (mbedtee_rpc_available_size() < cmd.size) {
++			if (++retry % 1000 == 0)
++				pr_emerg("rpc retrying for %d func %d\n", cmd.size, cmd.id);
++			if (retry == 5000) {
++				/* mark as unfinished rpc */
++				c->unfinish = true;
++				return NULL;
++			}
++			udelay(5);
++		}
++		mbedtee_rpc_read(c->data, cmd.size);
++	} else {
++		if (cmd.shm == 0) {
++			pr_emerg("rpc cmd.shm error ??\n");
++			return NULL;
++		}
++
++		/* sync rpc notification from peer */
++		c = kmalloc(sizeof(*c), GFP_ATOMIC);
++		c->data = t2r_shm + (cmd.shm - t2r_shm_phys);
++	}
++
++	c->func = func;
++	c->waiter = cmd.waiter;
++	c->size = cmd.size;
++
++	return c;
++}
++
++static void rpc_routine(struct work_struct *w)
++{
++	struct mbedtee_rpc_work *c = NULL;
++
++	c = container_of(w, struct mbedtee_rpc_work, work);
++
++	c->func(c->data, c->size);
++
++	mbedtee_flush_cache(c->data, c->size);
++
++	mbedtee_rpc_fastcall(RPC_COMPLETE_TEE, c->waiter, 0, 0);
++	kfree(c);
++}
++
++extern void mbedtee_rpc_isr(void)
++{
++	unsigned long flags = 0, retry = 0;
++	struct mbedtee_rpc_work rw = {0}, *c = &rw;
++	struct rpc_ringbuf *ring = t2r_ring;
++
++	if (!ring || (t2r_ring_rd == ring->wr))
++		return;
++
++	c->data = (void *)__rpc_data;
++	spin_lock_irqsave(&__rpc_lock, flags);
++	while (t2r_ring_rd != ring->wr) {
++		if ((c = mbedtee_rpc_pick_next(&rw)) == NULL) {
++			if (++retry == 5000)
++				break;
++			continue;
++		}
++
++		/* no peer is waiting, it's asynchronous rpc */
++		if (c->waiter == 0) {
++			c->func(c->data, c->size);
++		} else {
++			/* peer is waiting, it's synchronous rpc */
++			INIT_WORK(&c->work, rpc_routine);
++			queue_work_on(smp_processor_id(), system_highpri_wq, &c->work);
++		}
++	}
++	spin_unlock_irqrestore(&__rpc_lock, flags);
++
++	if (retry)
++		pr_emerg("retry %ld\n", retry);
++}
++
++static struct rpc_cmd *__mbedtee_rpc_get_cmd(
++	void *data, size_t size)
++{
++	unsigned long cmd_phy = 0;
++
++	memcpy(&cmd_phy, data, sizeof(cmd_phy));
++
++	return phys_to_virt(cmd_phy);
++}
++
++/*
++ * Internal RPC instance to complete the rpc call
++ */
++static void mbedtee_rpc_complete(void *data, size_t size)
++{
++	struct rpc_cmd *cmd = __mbedtee_rpc_get_cmd(data, size);
++
++	if (!cmd || !cmd->waiter)
++		return;
++
++	smp_rmb();
++	if (!cmd->interrupted)
++		complete((void *)cmd->waiter);
++	else {
++		struct page *p = virt_to_page(cmd);
++		kunmap(p);
++		put_page(p);
++	}
++}
++
++static void mbedtee_ree_time(void *data, size_t size)
++{
++	struct timespec64 *ts = (void *)data;
++
++	ktime_get_real_ts64(ts);
++}
++
++static void mbedtee_reefs_supp(void *data, size_t size)
++{
++	mbedtee_supp_handler(clnt, SUPP_REEFS, data, size);
++}
++
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func)
++{
++	if (id >= RPC_REENR || !func)
++		return -EINVAL;
++
++	__rpc_callee_funcs[id] = func;
++
++	return 0;
++}
++EXPORT_SYMBOL(mbedtee_register_rpc);
++
++void mbedtee_unregister_rpc(unsigned int id)
++{
++	if (id >= RPC_REENR)
++		return;
++
++	__rpc_callee_funcs[id] = NULL;
++}
++EXPORT_SYMBOL(mbedtee_unregister_rpc);
++
++int mbedtee_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-t2r-shm", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	t2r_shm_phys = of_read_ulong(range, naddr);
++	t2r_shm = ioremap(t2r_shm_phys,
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_shm)
++		t2r_shm = phys_to_virt(t2r_shm_phys);
++
++	pr_info("rpc-t2r-shm %lx\n", t2r_shm_phys);
++
++	range = of_get_property(dn, "rpc-t2r-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("rpc-t2r-ring %lx\n", of_read_ulong(range, naddr));
++
++	t2r_ring_sz = of_read_ulong(range + naddr, nsize) -
++			sizeof(struct rpc_ringbuf);
++
++	t2r_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_ring)
++		t2r_ring = phys_to_virt(of_read_ulong(range, naddr));
++
++	mbedtee_register_rpc(RPC_REEFS, mbedtee_reefs_supp);
++	mbedtee_register_rpc(RPC_REETIME, mbedtee_ree_time);
++	mbedtee_register_rpc(RPC_COMPLETE_REE, mbedtee_rpc_complete);
++
++	return 0;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/rpc-caller-arm.c linux-6.1.122/drivers/tee/mbedtee/rpc-caller-arm.c
+--- linux-6.1.122-ori/drivers/tee/mbedtee/rpc-caller-arm.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/rpc-caller-arm.c	2024-12-30 11:15:09.008023081 +0800
+@@ -0,0 +1,98 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * ARM RPC calls to TEE - relies on SMC
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static inline long trigger_smc(unsigned long rpc)
++{
++	long ret = 0;
++
++#ifdef CONFIG_ARM
++	register long r0 asm ("r0") = rpc;
++	smp_wmb();
++	asm volatile(".arch_extension sec\n"
++				"smc 0x0" : "=r" (ret) : "r" (r0): "memory", "cc");
++#endif
++
++#ifdef CONFIG_ARM64
++	register long x0 asm ("x0") = rpc;
++	smp_wmb();
++	asm volatile("smc 0x0" : "=r" (ret) : "r" (x0) : "memory", "cc");
++#endif
++
++	return ret;
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret)
++		return ret;
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	static long buff[CONFIG_NR_CPUS][((sizeof(struct rpc_cmd)\
++		/ sizeof(long)) + 4)] __attribute__ ((aligned (64))) = {0};
++	struct rpc_cmd *rpc = NULL;
++	unsigned long flags = 0;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	local_irq_save(flags);
++
++	rpc = (struct rpc_cmd *)buff[smp_processor_id()];
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret == 0)
++		ret = rpc->ret;
++
++	local_irq_restore(flags);
++
++	return ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/rpc-caller-riscv.c linux-6.1.122/drivers/tee/mbedtee/rpc-caller-riscv.c
+--- linux-6.1.122-ori/drivers/tee/mbedtee/rpc-caller-riscv.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/rpc-caller-riscv.c	2024-12-30 11:15:09.008023081 +0800
+@@ -0,0 +1,234 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RISCV RPC calls to TEE - relies on IPI (sswi)
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static DEFINE_SPINLOCK(rpc_lock);
++static struct rpc_ringbuf *r2t_ring = NULL;
++static unsigned int r2t_ring_sz = 0;
++static void *sswi_base = NULL;
++
++static int r2t_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-r2t-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize)) {
++		pr_info("lack of rpc-r2t-ring\n");
++		return ret;
++	}
++
++	pr_info("rpc-r2t-ring %lx\n", of_read_ulong(range, naddr));
++
++	r2t_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	r2t_ring_sz = of_read_ulong(range + naddr, nsize) -
++				sizeof(struct rpc_ringbuf);
++
++	dn = of_find_compatible_node(NULL, NULL, "riscv,aclint-sswi");
++	if (!dn) {
++		pr_info("lack of riscv,aclint-sswi\n");
++		return ret;
++	}
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "reg", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("riscv,aclint-sswi %lx\n", of_read_ulong(range, naddr));
++
++	sswi_base = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	return 0;
++}
++
++/*
++ * check if the remain ring-buff is
++ * enough or not for current call
++ */
++static int rpc_ring_enough(unsigned int size)
++{
++	unsigned int wr = 0, rd = 0;
++	unsigned int remain = 0,ringsz = r2t_ring_sz;
++	struct rpc_ringbuf *shm = r2t_ring;
++
++	wr = shm->wr;
++	rd = shm->rd;
++	smp_rmb();
++
++	if ((rd > ringsz) || (wr > ringsz))
++		return false;
++
++	if (rd <= wr)
++		remain = ringsz + rd - wr;
++	else
++		remain = rd - wr;
++
++	return remain >= size;
++}
++
++/*
++ * copy into the ring-buff,
++ * and update the write ptr
++ */
++static void rpc_ring_write(void *data, unsigned int size)
++{
++	struct rpc_ringbuf *shm = r2t_ring;
++	unsigned int remain = 0, ringsz = r2t_ring_sz;
++	static unsigned int wr = 0;
++
++	if (wr + size > ringsz) {
++		remain = wr + size - ringsz;
++		memcpy(&shm->mem[wr], data, size - remain);
++		mbedtee_flush_cache(&shm->mem[wr], size - remain);
++		memcpy(&shm->mem[0], data + size - remain, remain);
++		mbedtee_flush_cache(&shm->mem[0], remain);
++		wr = remain;
++	} else {
++		memcpy(&shm->mem[wr], data, size);
++		mbedtee_flush_cache(&shm->mem[wr], size);
++		wr += size;
++	}
++
++	shm->wr = wr;
++
++	smp_mb();
++}
++
++static void trigger_sswi(void)
++{
++	iowrite32(1, (int *)sswi_base + 0);
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	long buff[((sizeof(struct rpc_cmd)/sizeof(long)) + 4)] = {0};
++	struct rpc_cmd *rpc = (void *)buff;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	/* 3 args */
++	rpc->size = 3 * sizeof(long);
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	ret = wait_for_completion_interruptible(&c);
++	if (ret)
++		return ret;
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/shm_pool.c linux-6.1.122/drivers/tee/mbedtee/shm_pool.c
+--- linux-6.1.122-ori/drivers/tee/mbedtee/shm_pool.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/shm_pool.c	2024-12-30 11:15:09.008023081 +0800
+@@ -0,0 +1,86 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2017, EPAM Systems
++ */
++#include <linux/device.h>
++#include <linux/dma-buf.h>
++#include <linux/genalloc.h>
++#include <linux/slab.h>
++
++#include "mbedtee_drv.h"
++
++static int pool_op_alloc(struct tee_shm_pool *pool,
++			 struct tee_shm *shm, size_t size, size_t align)
++{
++	unsigned int order = get_order(size);
++	struct page *page;
++	int rc = 0;
++
++	page = alloc_pages(GFP_KERNEL | __GFP_ZERO, order);
++	if (!page)
++		return -ENOMEM;
++
++	shm->kaddr = page_address(page);
++	shm->paddr = page_to_phys(page);
++	shm->size = PAGE_SIZE << order;
++
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield) {
++		unsigned int nr_pages = 1 << order, i;
++		struct page **pages;
++
++		pages = kcalloc(nr_pages, sizeof(pages), GFP_KERNEL);
++		if (!pages)
++			return -ENOMEM;
++
++		for (i = 0; i < nr_pages; i++) {
++			pages[i] = page;
++			page++;
++		}
++
++		rc = mbedtee_shm_register(shm->ctx, shm, pages, nr_pages,
++					(unsigned long)shm->kaddr);
++		kfree(pages);
++	}
++
++	return rc;
++}
++
++static void pool_op_free(struct tee_shm_pool *pool,
++			 struct tee_shm *shm)
++{
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield)
++		mbedtee_shm_unregister(shm->ctx, shm);
++
++	free_pages((unsigned long)shm->kaddr, get_order(shm->size));
++	shm->kaddr = NULL;
++}
++
++static void pool_op_destroy_pool(struct tee_shm_pool *pool)
++{
++	kfree(pool);
++}
++
++static const struct tee_shm_pool_ops pool_ops = {
++	.alloc = pool_op_alloc,
++	.free = pool_op_free,
++	.destroy_pool = pool_op_destroy_pool,
++};
++
++/**
++ * mbedtee_shm_pool_alloc_pages() - create page-based allocator pool
++ *
++ * This pool is used when MBEDTEE supports dymanic SHM. In this case
++ * command buffers and such are allocated from kernel's own memory.
++ */
++struct tee_shm_pool *mbedtee_shm_pool_alloc_pages(void)
++{
++	struct tee_shm_pool *pool = kzalloc(sizeof(*pool), GFP_KERNEL);
++
++	if (!pool)
++		return ERR_PTR(-ENOMEM);
++
++	pool->ops = &pool_ops;
++
++	return pool;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/shm_pool.h linux-6.1.122/drivers/tee/mbedtee/shm_pool.h
+--- linux-6.1.122-ori/drivers/tee/mbedtee/shm_pool.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/shm_pool.h	2024-12-30 11:15:09.008023081 +0800
+@@ -0,0 +1,14 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2016, EPAM Systems
++ */
++
++#ifndef SHM_POOL_H
++#define SHM_POOL_H
++
++#include <linux/tee_drv.h>
++
++struct tee_shm_pool *mbedtee_shm_pool_alloc_pages(void);
++
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/mbedtee/supp.c linux-6.1.122/drivers/tee/mbedtee/supp.c
+--- linux-6.1.122-ori/drivers/tee/mbedtee/supp.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.1.122/drivers/tee/mbedtee/supp.c	2024-12-30 11:15:09.008023081 +0800
+@@ -0,0 +1,210 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ */
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/uaccess.h>
++#include <linux/highmem.h>
++#include <asm/cacheflush.h>
++
++#include "mbedtee_drv.h"
++
++struct mbedtee_supp_req {
++	int ret;
++	u32 func;
++
++	struct list_head node;
++
++	struct tee_shm *shm;
++	void *data;
++	size_t size;
++
++	struct completion c;
++};
++
++void mbedtee_supp_init(struct mbedtee_supp *supp)
++{
++	memset(supp, 0, sizeof(*supp));
++	mutex_init(&supp->mutex);
++	init_completion(&supp->reqs_c);
++	INIT_LIST_HEAD(&supp->reqs);
++}
++
++void mbedtee_supp_uninit(struct mbedtee_supp *supp)
++{
++	mutex_destroy(&supp->mutex);
++}
++
++void mbedtee_supp_release(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *r, *n;
++
++	mutex_lock(&supp->mutex);
++
++	list_for_each_entry_safe(r, n, &supp->reqs, node) {
++		list_del(&r->node);
++		r->ret = -ERESTARTSYS;
++		complete(&r->c);
++	}
++
++	supp->ctx = NULL;
++	supp->req = NULL;
++
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_enqueue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_add_tail(&req->node, &supp->reqs);
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_dequeue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_del(&req->node);
++	mutex_unlock(&supp->mutex);
++}
++
++/*
++ * receive the request from mbedtee,
++ * then push it to mbedtee_supp
++ */
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size)
++{
++	int ret = -1;
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = kzalloc(sizeof(*req), GFP_KERNEL);
++
++	if (req == NULL)
++		return -ENOMEM;
++
++	init_completion(&req->c);
++	req->func = func;
++	req->data = data;
++	req->size = size;
++
++	supp_enqueue_req(supp, req);
++
++	/* wakeup the mbedtee_supp daemon to handle this request */
++	complete(&supp->reqs_c);
++
++	if (wait_for_completion_interruptible(&req->c)) {
++		req->ret = -ERESTARTSYS;
++		supp_dequeue_req(supp, req);
++	}
++
++	ret = req->ret;
++	kfree(req);
++	return ret;
++}
++
++static struct mbedtee_supp_req *supp_pop_req(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *req;
++
++	mutex_lock(&supp->mutex);
++
++	/*
++	 * last request not finishs
++	 */
++	if (supp->req != NULL) {
++		req = ERR_PTR(-EINVAL);
++		goto out;
++	}
++
++	req = list_first_entry_or_null(&supp->reqs,
++			struct mbedtee_supp_req, node);
++
++	if (req) {
++		list_del(&req->node);
++		supp->req = req;
++	}
++
++out:
++	mutex_unlock(&supp->mutex);
++	return req;
++}
++
++/*
++ * receive request for mbedtee_supp
++ */
++int mbedtee_supp_recv(struct tee_context *ctx,
++	u32 *func, u32 *num_params, struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = NULL;
++	struct mbedtee_context_data *d = ctx->data;
++	struct tee_shm *shm = param->u.memref.shm;
++
++	if (*num_params != 1)
++		return -EINVAL;
++
++	if ((tee_param_is_memref(param) != true) ||
++		(param->u.memref.shm == NULL))
++		return -EINVAL;
++
++	d->is_supp_ctx = true;
++
++	tee_shm_put(shm);
++
++	while (true) {
++		req = supp_pop_req(supp);
++		if (IS_ERR(req))
++			return PTR_ERR(req);
++
++		if (req != NULL)
++			break;
++
++		if (wait_for_completion_interruptible(&supp->reqs_c))
++			return -ERESTARTSYS;
++	}
++
++	if (req->size > param->u.memref.size)
++		return -EOVERFLOW;
++
++	*func = req->func;
++	req->shm = shm;
++
++	memcpy(shm->kaddr, req->data, req->size);
++	param->u.memref.size = req->size;
++
++	return 0;
++}
++
++/*
++ * mbedtee_supp send result to mbedtee_supp_handler()
++ */
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = supp->req;
++
++	if (IS_ERR_OR_NULL(req))
++		return PTR_ERR(req);
++
++	if (req->size < param->u.memref.size)
++		ret = -EOVERFLOW;
++
++	req->ret = ret;
++	memcpy(req->data, req->shm->kaddr, param->u.memref.size);
++
++	mutex_lock(&supp->mutex);
++	supp->req = NULL;
++	mutex_unlock(&supp->mutex);
++
++	/* wakeup mbedtee_supp_handler() */
++	complete(&req->c);
++
++	return 0;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tee/tee_core.c linux-6.1.122/drivers/tee/tee_core.c
+--- linux-6.1.122-ori/drivers/tee/tee_core.c	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/drivers/tee/tee_core.c	2024-12-30 11:15:09.009023081 +0800
+@@ -575,8 +575,10 @@ static int tee_ioctl_invoke(struct tee_c
+ 			return -ENOMEM;
+ 		uparams = uarg->params;
+ 		rc = params_from_user(ctx, params, arg.num_params, uparams);
+-		if (rc)
++		if (rc) {
++			pr_emerg("rc %d\n", rc);
+ 			goto out;
++		}
+ 	}
+ 
+ 	rc = ctx->teedev->desc->ops->invoke_func(ctx, &arg, params);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/drivers/tty/serial/amba-pl011.c linux-6.1.122/drivers/tty/serial/amba-pl011.c
+--- linux-6.1.122-ori/drivers/tty/serial/amba-pl011.c	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/drivers/tty/serial/amba-pl011.c	2024-12-30 11:15:09.009023081 +0800
+@@ -2590,6 +2590,51 @@ static int pl011_early_read(struct conso
+ #define pl011_early_read NULL
+ #endif
+ 
++static __init void __pl011_early_port_setup(struct uart_port *p)
++{
++	int brd_i = 0;
++	int brd_f = 0;
++	int baud = 115200, divisor = 16;
++
++	p->uartclk = 24000000;
++
++	/*
++	 * Disable all
++	 */
++	iowrite32(0, p->membase + UART011_CR);
++
++	/* mask/clear all interrupt */
++	iowrite32(0, p->membase + UART011_IMSC);
++	iowrite32(UART011_OEIC | UART011_BEIC | UART011_PEIC |
++				UART011_FEIC | UART011_RTIC | UART011_RXIC,
++			p->membase + UART011_ICR);
++
++	/* Baud rate divisor
++	 *	BAUDDIV = (FUARTCLK/ {16 * Baud rate})
++	 *  fractional part, m = integer((x * 64) + 0.5)
++	 */
++	brd_i = p->uartclk * 64 / (baud * divisor);
++	brd_f = brd_i & 0x3F;
++	brd_i >>= 6;
++	iowrite32(brd_i, p->membase + UART011_IBRD);
++	iowrite32(brd_f, p->membase + UART011_FBRD);
++
++	/*
++	 * 8-bit data, 1-bit stop, none-parity, with FIFO
++	 */
++	iowrite32(UART01x_LCRH_WLEN_8 | UART01x_LCRH_FEN,
++				p->membase + UART011_LCRH);
++	iowrite32(UART011_IFLS_RX4_8 | UART011_IFLS_TX4_8,
++				p->membase + UART011_IFLS);
++
++	/*
++	 * Enable UART - TX only
++	 */
++	iowrite32(UART01x_CR_UARTEN | UART011_CR_TXE,
++				p->membase + UART011_CR);
++	iowrite32(UART011_TXIM, p->membase + UART011_IMSC);
++}
++
+ /*
+  * On non-ACPI systems, earlycon is enabled by specifying
+  * "earlycon=pl011,<address>" on the kernel command line.
+@@ -2608,6 +2653,8 @@ static int __init pl011_early_console_se
+ 	if (!device->port.membase)
+ 		return -ENODEV;
+ 
++	__pl011_early_port_setup(&device->port);
++
+ 	device->con->write = pl011_early_write;
+ 	device->con->read = pl011_early_read;
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.1.122-ori/include/uapi/linux/tee.h linux-6.1.122/include/uapi/linux/tee.h
+--- linux-6.1.122-ori/include/uapi/linux/tee.h	2024-12-27 20:53:02.000000000 +0800
++++ linux-6.1.122/include/uapi/linux/tee.h	2024-12-30 11:15:09.010023081 +0800
+@@ -57,6 +57,8 @@
+ #define TEE_IMPL_ID_OPTEE	1
+ #define TEE_IMPL_ID_AMDTEE	2
+ 
++#define TEE_IMPL_ID_MBEDTEE	8
++
+ /*
+  * OP-TEE specific capabilities
+  */
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/linux/patches/mbedtee-linux-6.12.7.patch-- buildroot/linux/patches/mbedtee-linux-6.12.7.patch--
--- buildroot-ori/linux/patches/mbedtee-linux-6.12.7.patch--	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/linux/patches/mbedtee-linux-6.12.7.patch--	2025-05-31 23:12:46.390379055 +0800
@@ -0,0 +1,2151 @@
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/arch/arm/boot/compressed/head.S linux-6.12.7/arch/arm/boot/compressed/head.S
+--- linux-6.12.7-ori/arch/arm/boot/compressed/head.S	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/arch/arm/boot/compressed/head.S	2024-12-30 14:49:15.298349268 +0800
+@@ -309,7 +309,8 @@ not_angel:
+ 1:
+ #endif /* CONFIG_USE_OF */
+ 		/* Determine final kernel image address. */
+-		add	r4, r0, #TEXT_OFFSET
++		ldr	r4, =TEXT_OFFSET
++		add	r4, r0, r4
+ #else
+ 		ldr	r4, =zreladdr
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/arch/arm/kernel/head.S linux-6.12.7/arch/arm/kernel/head.S
+--- linux-6.12.7-ori/arch/arm/kernel/head.S	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/arch/arm/kernel/head.S	2024-12-30 14:49:15.299349268 +0800
+@@ -65,7 +65,8 @@ kernel_sec_end:
+ 	.popsection
+ 
+ 	.macro	pgtbl, rd, phys
+-	add	\rd, \phys, #TEXT_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	add	\rd, \phys, r0
+ 	sub	\rd, \rd, #PG_DIR_SIZE
+ 	.endm
+ 
+@@ -120,7 +121,9 @@ ENTRY(stext)
+ 
+ #ifndef CONFIG_XIP_KERNEL
+ 	adr_l	r8, _text			@ __pa(_text)
+-	sub	r8, r8, #TEXT_OFFSET		@ PHYS_OFFSET
++#	sub	r8, r8, #TEXT_OFFSET	@ PHYS_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	sub	r8, r8, r0				@ PHYS_OFFSET
+ #else
+ 	ldr	r8, =PLAT_PHYS_OFFSET		@ always constant in this case
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/arch/arm/kernel/smp.c linux-6.12.7/arch/arm/kernel/smp.c
+--- linux-6.12.7-ori/arch/arm/kernel/smp.c	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/arch/arm/kernel/smp.c	2024-12-30 14:49:15.299349268 +0800
+@@ -65,20 +65,21 @@ enum ipi_msg_type {
+ 	IPI_CPU_STOP,
+ 	IPI_IRQ_WORK,
+ 	IPI_COMPLETION,
+-	NR_IPI,
+ 	/*
+ 	 * CPU_BACKTRACE is special and not included in NR_IPI
+ 	 * or tracable with trace_ipi_*
+ 	 */
+-	IPI_CPU_BACKTRACE = NR_IPI,
++	IPI_CPU_BACKTRACE,
+ 	/*
+ 	 * SGI8-15 can be reserved by secure firmware, and thus may
+ 	 * not be usable by the kernel. Please keep the above limited
+ 	 * to at most 8 entries.
+ 	 */
++	IPI_TEECALL,
++	NR_IPI,
+ 	MAX_IPI
+ };
+-
++extern void mbedtee_rpc_isr(void);
+ static int ipi_irq_base __read_mostly;
+ static int nr_ipi __read_mostly = NR_IPI;
+ static struct irq_desc *ipi_desc[MAX_IPI] __read_mostly;
+@@ -675,6 +676,11 @@ static void do_handle_IPI(int ipinr)
+ 		printk_deferred_exit();
+ 		break;
+ 
++	/* mbedtee callback */
++	case IPI_TEECALL:
++		mbedtee_rpc_isr();
++		break;
++
+ 	default:
+ 		pr_crit("CPU%u: Unknown IPI message 0x%x\n",
+ 		        cpu, ipinr);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/arch/arm/Makefile linux-6.12.7/arch/arm/Makefile
+--- linux-6.12.7-ori/arch/arm/Makefile	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/arch/arm/Makefile	2024-12-30 14:49:15.301349268 +0800
+@@ -158,7 +158,7 @@ CHECKFLAGS	+= -D__arm__
+ # Note: the 32kB below this value is reserved for use by the kernel
+ # during boot, and this offset is critical to the functioning of
+ # kexec-tools.
+-textofs-y	:= 0x00008000
++textofs-y	:= 0x06008000
+ # RTD1195 has Boot ROM at start of address space
+ textofs-$(CONFIG_ARCH_REALTEK)  := 0x00108000
+ # SA1111 DMA bug: we don't want the kernel to live in precious DMA-able memory
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/arch/arm64/kernel/smp.c linux-6.12.7/arch/arm64/kernel/smp.c
+--- linux-6.12.7-ori/arch/arm64/kernel/smp.c	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/arch/arm64/kernel/smp.c	2024-12-30 14:49:15.302349268 +0800
+@@ -71,6 +71,9 @@ enum ipi_msg_type {
+ 	IPI_CPU_STOP_NMI,
+ 	IPI_TIMER,
+ 	IPI_IRQ_WORK,
++	IPI_RESERVED1, /* 0 ~ 7 for REE */
++	IPI_RESERVED2, /* 0 ~ 7 for REE */
++	IPI_TEECALL, /* 8 ~ 15 for TEE */
+ 	NR_IPI,
+ 	/*
+ 	 * Any enum >= NR_IPI and < MAX_IPI is special and not tracable
+@@ -990,6 +993,12 @@ static void do_handle_IPI(int ipinr)
+ 		break;
+ #endif
+ 
++	/* mbedtee RPC callback */
++	case IPI_TEECALL:
++		extern void mbedtee_rpc_isr(void);
++		mbedtee_rpc_isr();
++		break;
++
+ 	case IPI_CPU_BACKTRACE:
+ 		/*
+ 		 * NOTE: in some cases this _won't_ be NMI context. See the
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/arch/riscv/kernel/sbi-ipi.c linux-6.12.7/arch/riscv/kernel/sbi-ipi.c
+--- linux-6.12.7-ori/arch/riscv/kernel/sbi-ipi.c	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/arch/riscv/kernel/sbi-ipi.c	2024-12-30 14:49:15.303349268 +0800
+@@ -18,6 +18,8 @@ EXPORT_SYMBOL_GPL(riscv_sbi_for_rfence);
+ 
+ static int sbi_ipi_virq;
+ 
++extern void mbedtee_rpc_isr(void);
++
+ static void sbi_ipi_handle(struct irq_desc *desc)
+ {
+ 	struct irq_chip *chip = irq_desc_get_chip(desc);
+@@ -27,6 +29,8 @@ static void sbi_ipi_handle(struct irq_de
+ 	csr_clear(CSR_IP, IE_SIE);
+ 	ipi_mux_process();
+ 
++	mbedtee_rpc_isr();
++
+ 	chained_irq_exit(chip, desc);
+ }
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/firmware/psci/psci.c linux-6.12.7/drivers/firmware/psci/psci.c
+--- linux-6.12.7-ori/drivers/firmware/psci/psci.c	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/drivers/firmware/psci/psci.c	2024-12-30 14:49:15.305349268 +0800
+@@ -269,12 +269,14 @@ static unsigned long psci_migrate_info_u
+ 
+ static void set_conduit(enum arm_smccc_conduit conduit)
+ {
++	extern psci_fn mbedtee_rpc_fastcall;
++
+ 	switch (conduit) {
+ 	case SMCCC_CONDUIT_HVC:
+ 		invoke_psci_fn = __invoke_psci_fn_hvc;
+ 		break;
+ 	case SMCCC_CONDUIT_SMC:
+-		invoke_psci_fn = __invoke_psci_fn_smc;
++		invoke_psci_fn = mbedtee_rpc_fastcall;
+ 		break;
+ 	default:
+ 		WARN(1, "Unexpected PSCI conduit %d\n", conduit);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/irqchip/irq-gic.c linux-6.12.7/drivers/irqchip/irq-gic.c
+--- linux-6.12.7-ori/drivers/irqchip/irq-gic.c	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/drivers/irqchip/irq-gic.c	2024-12-30 14:49:15.306349268 +0800
+@@ -864,12 +864,15 @@ static __init void gic_smp_init(void)
+ 	cpuhp_setup_state_nocalls(CPUHP_AP_IRQ_GIC_STARTING,
+ 				  "irqchip/arm/gic:starting",
+ 				  gic_starting_cpu, NULL);
+-
+-	base_sgi = irq_domain_alloc_irqs(gic_data[0].domain, 8, NUMA_NO_NODE, &sgi_fwspec);
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = irq_domain_alloc_irqs(gic_data[0].domain, 16, NUMA_NO_NODE, &sgi_fwspec);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ #else
+ #define gic_smp_init()		do { } while(0)
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/irqchip/irq-gic-v3.c linux-6.12.7/drivers/irqchip/irq-gic-v3.c
+--- linux-6.12.7-ori/drivers/irqchip/irq-gic-v3.c	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/drivers/irqchip/irq-gic-v3.c	2024-12-30 14:49:15.306349268 +0800
+@@ -1458,11 +1458,15 @@ static void __init gic_smp_init(void)
+ 				  gic_starting_cpu, NULL);
+ 
+ 	/* Register all 8 non-secure SGIs */
+-	base_sgi = irq_domain_alloc_irqs(gic_data.domain, 8, NUMA_NO_NODE, &sgi_fwspec);
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = irq_domain_alloc_irqs(gic_data.domain, 16, NUMA_NO_NODE, &sgi_fwspec);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ 
+ static int gic_set_affinity(struct irq_data *d, const struct cpumask *mask_val,
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/Kconfig linux-6.12.7/drivers/tee/Kconfig
+--- linux-6.12.7-ori/drivers/tee/Kconfig	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/drivers/tee/Kconfig	2024-12-30 14:49:15.307349268 +0800
+@@ -16,5 +16,6 @@ if TEE
+ source "drivers/tee/optee/Kconfig"
+ source "drivers/tee/amdtee/Kconfig"
+ source "drivers/tee/tstee/Kconfig"
++source "drivers/tee/mbedtee/Kconfig"
+ 
+ endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/Makefile linux-6.12.7/drivers/tee/Makefile
+--- linux-6.12.7-ori/drivers/tee/Makefile	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/drivers/tee/Makefile	2024-12-30 14:49:15.307349268 +0800
+@@ -6,3 +6,4 @@ tee-objs += tee_shm_pool.o
+ obj-$(CONFIG_OPTEE) += optee/
+ obj-$(CONFIG_AMDTEE) += amdtee/
+ obj-$(CONFIG_ARM_TSTEE) += tstee/
++obj-$(CONFIG_MBEDTEE) += mbedtee/
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/core.c linux-6.12.7/drivers/tee/mbedtee/core.c
+--- linux-6.12.7-ori/drivers/tee/mbedtee/core.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/core.c	2024-12-30 14:49:15.308349268 +0800
+@@ -0,0 +1,253 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#include <linux/errno.h>
++#include <linux/io.h>
++#include <linux/module.h>
++#include <linux/of.h>
++#include <linux/of_platform.h>
++#include <linux/platform_device.h>
++#include <linux/slab.h>
++#include <linux/string.h>
++#include <linux/tee_drv.h>
++#include <linux/types.h>
++#include <linux/uaccess.h>
++#include "mbedtee_drv.h"
++#include "shm_pool.h"
++
++#include "../tee_private.h"
++
++struct mbedtee_clnt __clnt = {0}, *clnt = &__clnt;
++
++static void mbedtee_get_version(struct tee_device *teedev,
++			      struct tee_ioctl_version_data *vers)
++{
++	struct tee_ioctl_version_data v = {
++		.impl_id = TEE_IMPL_ID_MBEDTEE,
++		.impl_caps = 0,
++		.gen_caps = TEE_GEN_CAP_GP | TEE_GEN_CAP_REG_MEM | TEE_GEN_CAP_MEMREF_NULL,
++	};
++
++	*vers = v;
++}
++
++static int mbedtee_open(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *ctxdata;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++
++	ctxdata = kzalloc(sizeof(*ctxdata), GFP_KERNEL);
++	if (!ctxdata)
++		return -ENOMEM;
++
++	mutex_init(&ctxdata->mutex);
++	INIT_LIST_HEAD(&ctxdata->sess_list);
++
++	dev_dbg(clnt->dev, "mbedtee_open\n");
++
++	ctx->data = ctxdata;
++	ctx->cap_memref_null = true;
++
++	return 0;
++}
++
++static void mbedtee_release(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *d = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *s, *n = NULL;
++
++	if (d == NULL)
++		return;
++
++	if (d->is_supp_ctx)
++		mbedtee_supp_release(&clnt->supp);
++	else {
++		list_for_each_entry_safe(s, n, &d->sess_list, list_node) {
++			dev_dbg(clnt->dev, "mbedtee_release %d\n", s->session_id);
++			mbedtee_close_session(ctx, s->session_id);
++		}
++	}
++
++	kfree(d);
++	ctx->data = NULL;
++}
++
++static const struct tee_driver_ops mbedtee_ops = {
++	.get_version = mbedtee_get_version,
++	.open = mbedtee_open,
++	.release = mbedtee_release,
++	.open_session = mbedtee_open_session,
++	.close_session = mbedtee_close_session,
++	.invoke_func = mbedtee_invoke_session,
++	.cancel_req = mbedtee_cancel_req,
++	.supp_recv = mbedtee_supp_recv,
++	.supp_send = mbedtee_supp_send,
++	.shm_register = mbedtee_shm_register,
++	.shm_unregister = mbedtee_shm_unregister,
++};
++
++
++static const struct tee_desc mbedtee_desc = {
++	.name = "mbedtee-clnt",
++	.ops = &mbedtee_ops,
++	.owner = THIS_MODULE,
++};
++
++#if defined(MBEDTEE_NODE_IN_DTS)
++static int mbedtee_remove(struct platform_device *pdev)
++{
++	struct mbedtee_clnt *clnt = platform_get_drvdata(pdev);
++
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++
++	return 0;
++}
++
++static int mbedtee_probe(struct platform_device *pdev)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	dev_info(&pdev->dev, "mbedtee client probing\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		dev_info(&pdev->dev, "mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	dev_info(&pdev->dev, "mbedtee version: 0x%06x\n", version);
++	dev_info(&pdev->dev, "mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &pdev->dev;
++
++	platform_set_drvdata(pdev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client probed\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++
++	return ret;
++}
++
++static const struct of_device_id mbedtee_dt_match[] = {
++	{ .compatible = "mbedtee-clnt" },
++	{},
++};
++
++MODULE_DEVICE_TABLE(of, mbedtee_dt_match);
++
++static struct platform_driver mbedtee_driver = {
++	.probe  = mbedtee_probe,
++	.remove = mbedtee_remove,
++	.driver = {
++		.name = "mbedtee-clnt",
++		.of_match_table = mbedtee_dt_match,
++	},
++};
++module_platform_driver(mbedtee_driver);
++#endif
++
++static void __exit mbedtee_exit(void)
++{
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++}
++
++static int __init mbedtee_init(void)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	pr_info("mbedtee client init\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		pr_info("mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	pr_info("mbedtee version: 0x%06x\n", version);
++	pr_info("mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &teedev->dev;
++
++	dev_set_drvdata(mbedclnt->dev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client initialized\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++	return ret;
++}
++module_init(mbedtee_init);
++module_exit(mbedtee_exit);
++
++MODULE_AUTHOR("Kapa");
++MODULE_DESCRIPTION("MBEDTEE Client");
++MODULE_VERSION("1.0");
++MODULE_LICENSE("GPL v2");
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/Kconfig linux-6.12.7/drivers/tee/mbedtee/Kconfig
+--- linux-6.12.7-ori/drivers/tee/mbedtee/Kconfig	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/Kconfig	2024-12-30 14:49:15.308349268 +0800
+@@ -0,0 +1,8 @@
++# SPDX-License-Identifier: GPL-2.0-only
++# MBED-TEE Trusted Execution Environment Configuration
++config MBEDTEE
++	tristate "MBEDTEE"
++	depends on MMU
++	help
++	  This implements the MBEDTEE Trusted Execution Environment (TEE)
++	  driver.
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/Makefile linux-6.12.7/drivers/tee/mbedtee/Makefile
+--- linux-6.12.7-ori/drivers/tee/mbedtee/Makefile	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/Makefile	2024-12-30 14:49:15.308349268 +0800
+@@ -0,0 +1,13 @@
++# SPDX-License-Identifier: GPL-2.0
++
++ccflags-$(CONFIG_MBEDTEE) += -I$(STAGING_DIR)/usr/include/mbedtee
++
++obj-$(CONFIG_MBEDTEE) += mbedtee.o
++
++mbedtee-y += core.o
++mbedtee-y += supp.o
++mbedtee-y += shm_pool.o
++mbedtee-y += rpc.o rpc-callee.o
++mbedtee-$(CONFIG_ARM) += rpc-caller-arm.o
++mbedtee-$(CONFIG_ARM64) += rpc-caller-arm.o
++mbedtee-$(CONFIG_RISCV) += rpc-caller-riscv.o
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/mbedtee_drv.h linux-6.12.7/drivers/tee/mbedtee/mbedtee_drv.h
+--- linux-6.12.7-ori/drivers/tee/mbedtee/mbedtee_drv.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/mbedtee_drv.h	2024-12-30 14:49:15.309349269 +0800
+@@ -0,0 +1,155 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#ifndef MBEDTEE_DRV_H
++#define MBEDTEE_DRV_H
++
++#include <linux/types.h>
++#include <linux/of.h>
++#include <linux/semaphore.h>
++#include <linux/tee_drv.h>
++#include <linux/tee_core.h>
++#include <linux/syscalls.h>
++#include <asm/cacheflush.h>
++
++#include <rpc/rpc.h>
++#include <rpc/reefs.h>
++
++#include "mbedtee_rpc.h"
++#include "shm_pool.h"
++
++#define TEEC_ERROR_TARGET_DEAD      0xFFFF3024
++#define TEEC_ERROR_OUT_OF_MEMORY    0xFFFF000C
++
++#define TEEC_ORIGIN_COMMS           0x00000002
++#define TEEC_ORIGIN_TEE             0x00000003
++
++#define MBEDTEE_VALID_VERSION(x) ((((x) >> 16) == 1) && \
++	((((x) >> 8) & 0xFF) >= 0) && (((x) & 0xFF) >= 1))
++
++struct mbedtee_supp {
++	struct mutex mutex;
++	struct tee_context *ctx;
++
++	void *req;
++	struct list_head reqs;
++	struct completion reqs_c;
++};
++
++struct mbedtee_clnt {
++	int version;
++	int yield;
++	struct device *dev;
++	struct tee_device *teedev;
++	struct tee_shm_pool *pool;
++	struct mbedtee_supp supp;
++};
++
++struct mbedtee_session {
++	struct list_head list_node;
++	u32 session_id;
++};
++
++struct mbedtee_context_data {
++	int is_supp_ctx;
++	struct mutex mutex;
++	struct list_head sess_list;
++};
++
++typedef struct {
++	uint32_t timeLow;
++	uint16_t timeMid;
++	uint16_t timeHiAndVersion;
++	uint8_t clockSeqAndNode[8];
++} TEEC_UUID;
++
++extern struct mbedtee_clnt *clnt;
++
++#define mbedtee_bswap16(_x) ((__u16)(((_x) >> 8) | (((_x) << 8) & 0xff00)))
++#define mbedtee_bswap32(_x) ((__u32)(((_x) >> 24) | (((_x) >> 8) & 0xff00) | \
++	    (((_x) << 8) & 0xff0000) | (((_x) << 24) & 0xff000000)))
++
++static inline void mbedtee_flush_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM)
++	__cpuc_flush_dcache_area(va, size);
++#endif
++
++#if defined(CONFIG_ARM64)
++	dcache_clean_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* wback & inv */
++	/* ALT_CMO_OP(FLUSH, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline void mbedtee_invalidate_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM64)
++	dcache_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* inv */
++	/* ALT_CMO_OP(INVAL, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline phys_addr_t mbedtee_virt_to_phys(void *va)
++{
++	if (is_vmalloc_or_module_addr(va)) {
++		return page_to_phys(vmalloc_to_page(va)) +
++				    offset_in_page(va);
++	}
++
++	WARN_ON(!virt_addr_valid(va));
++	return virt_to_phys(va);
++}
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size);
++void mbedtee_rpc_free(struct rpc_cmd *rpc);
++
++int mbedtee_open_session(struct tee_context *ctx,
++	struct tee_ioctl_open_session_arg *arg, struct tee_param *param);
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg, struct tee_param *param);
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session);
++
++int mbedtee_cancel_req(struct tee_context *ctx, u32 cancel_id, u32 session);
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start);
++
++int mbedtee_shm_unregister(struct tee_context *ctx, struct tee_shm *shm);
++
++/* TEE->REE RPC */
++int mbedtee_rpc_init(void);
++void mbedtee_rpc_isr(void);
++
++void mbedtee_supp_init(struct mbedtee_supp *supp);
++void mbedtee_supp_uninit(struct mbedtee_supp *supp);
++void mbedtee_supp_release(struct mbedtee_supp *supp);
++int mbedtee_supp_recv(struct tee_context *ctx, u32 *func, u32 *num_params,
++		    struct tee_param *param);
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param);
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size);
++
++/* REE->TEE RPC */
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible);
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2);
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/mbedtee_rpc.h linux-6.12.7/drivers/tee/mbedtee/mbedtee_rpc.h
+--- linux-6.12.7-ori/drivers/tee/mbedtee/mbedtee_rpc.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/mbedtee_rpc.h	2024-12-30 14:49:15.309349269 +0800
+@@ -0,0 +1,30 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ *
++ * Export symbols for other kernel modules
++ */
++#ifndef _MBEDTEE_RPC_H
++#define _MBEDTEE_RPC_H
++
++/*
++ * defines the __typeof__ the RPC callee function handler.
++ * @data - shared memory buffer from the RPC peer.
++ * @size - the data size of this shared memory buffer.
++ */
++typedef void (*rpc_func_t)(void *data, size_t size);
++
++/*
++ * register the rpc callee func.
++ * @id - function id of callee
++ * @return - 0 on success. Else negative num.
++ */
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func);
++
++/*
++ * unregister the callee @id.
++ */
++void mbedtee_unregister_rpc(unsigned int id);
++
++#endif
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/rpc.c linux-6.12.7/drivers/tee/mbedtee/rpc.c
+--- linux-6.12.7-ori/drivers/tee/mbedtee/rpc.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/rpc.c	2024-12-30 14:49:15.309349269 +0800
+@@ -0,0 +1,396 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RPC calls to TEE
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size)
++{
++	struct page *p = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	if (sizeof(struct rpc_cmd) + size > PAGE_SIZE)
++		return NULL;
++
++	p = alloc_page(GFP_KERNEL);
++	if (p == NULL)
++		return NULL;
++
++	rpc = kmap(p);
++	rpc->size = size;
++	rpc->ret = -1;
++	rpc->interrupted = 0;
++
++	return rpc;
++}
++EXPORT_SYMBOL(mbedtee_rpc_alloc);
++
++void mbedtee_rpc_free(struct rpc_cmd *rpc)
++{
++	struct page *p = NULL;
++
++	if (rpc && (!rpc->interrupted)) {
++		p = virt_to_page(rpc);
++		kunmap(p);
++		put_page(p);
++	}
++}
++EXPORT_SYMBOL(mbedtee_rpc_free);
++
++static int mbedtee_param_decode(struct tee_param *params,
++	size_t num_params, const struct rpc_param *rp)
++{
++	size_t n;
++#define TYPE_GET(t, i) ((((uint32_t)t) >> ((i)*4)) & 0xF)
++
++	for (n = 0; n < num_params; n++) {
++		struct tee_param *p = params + n;
++		const union rpc_tee_param *rtp = rp->params + n;
++		u32 attr = TYPE_GET(rp->params_type, n);
++
++		switch (attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(&p->u, 0, sizeof(p->u));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			p->u.value.a = rtp->value.a;
++			p->u.value.b = rtp->value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			p->u.memref.size = rtp->memref.size;
++			break;
++
++		default:
++			return -EINVAL;
++		}
++	}
++	return 0;
++}
++
++static int mbedtee_param_encode(struct rpc_param *rp,
++	size_t num_params, const struct tee_param *params)
++{
++	size_t n;
++#define TYPE_SET(t, i) (((uint32_t)(t) & 0xF) << ((i)*4))
++
++	rp->params_type = TEE_IOCTL_PARAM_ATTR_TYPE_NONE;
++
++	for (n = 0; n < num_params; n++) {
++		const struct tee_param *p = params + n;
++		union rpc_tee_param *rtp = rp->params + n;
++
++		rp->params_type |= TYPE_SET(p->attr, n);
++
++		switch (p->attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(rtp, 0, sizeof(*rtp));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			rtp->value.a = p->u.value.a;
++			rtp->value.b = p->u.value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			if (p->u.memref.shm)
++				rtp->memref.id = p->u.memref.shm->sec_world_id;
++			else
++				rtp->memref.id = 0; /* invalid-id @ mbedtee */
++			rtp->memref.size = p->u.memref.size;
++			rtp->memref.offset = p->u.memref.shm_offs;
++			break;
++		default:
++			return -EINVAL;
++		}
++	}
++
++	return 0;
++}
++
++static void mbedtee_errno_origin(
++	__u32 *errno, __u32 *origin)
++{
++	switch (*errno) {
++	case -ENOMEM:
++		*errno = TEEC_ERROR_OUT_OF_MEMORY;
++		break;
++	case -ESRCH:
++		*origin = TEEC_ORIGIN_TEE;
++		*errno = TEEC_ERROR_TARGET_DEAD;
++		break;
++	default:
++		break;
++	}
++}
++
++static struct mbedtee_session *mbedtee_session_of(
++	struct mbedtee_context_data *ctxdata,
++	u32 session_id)
++{
++	struct mbedtee_session *sess, *ret = NULL;
++
++	mutex_lock(&ctxdata->mutex);
++	list_for_each_entry(sess, &ctxdata->sess_list, list_node)
++		if (sess->session_id == session_id) {
++			ret = sess;
++			break;
++		}
++	mutex_unlock(&ctxdata->mutex);
++	return ret;
++}
++
++int mbedtee_open_session(struct tee_context *ctx,
++			   struct tee_ioctl_open_session_arg *arg,
++			   struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret != 0) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	sess = kzalloc(sizeof(*sess), GFP_KERNEL);
++	if (sess == NULL) {
++		mbedtee_rpc_free(rpc);
++		return -ENOMEM;
++	}
++
++	memcpy(rp->uuid, arg->uuid, sizeof(arg->uuid));
++	memcpy(rp->clnt_uuid, arg->clnt_uuid, sizeof(arg->clnt_uuid));
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_rpc_yieldcall(RPC_OPEN_SESSION, rpc, false);
++
++	dev_dbg(clnt->dev, "open session ret %d\n", ret);
++
++	if (ret == 0) {
++		sess->session_id = rp->session_id;
++		mutex_lock(&ctxdata->mutex);
++		list_add(&sess->list_node, &ctxdata->sess_list);
++		mutex_unlock(&ctxdata->mutex);
++
++		mbedtee_param_decode(param, arg->num_params, rp);
++	} else {
++		kfree(sess);
++	}
++
++	arg->session = rp->session_id;
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg,
++	struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *sess;
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++
++	sess = mbedtee_session_of(ctxdata, arg->session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = arg->session;
++	rp->cmd_id = arg->func;
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	ret = mbedtee_rpc_yieldcall(RPC_INVOKE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "invoke session ret %d\n", ret);
++
++	mbedtee_param_decode(param, arg->num_params, rp);
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CLOSE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "close session ret %d\n", ret);
++
++	mutex_lock(&ctxdata->mutex);
++	list_del(&sess->list_node);
++	kfree(sess);
++	mutex_unlock(&ctxdata->mutex);
++
++	mbedtee_rpc_free(rpc);
++
++	/*
++	 * ESRCH means the session already been closed in
++	 * mbedtee, so REE return success for this case
++	 */
++	return (ret == -ESRCH) ? 0 : ret;
++}
++
++int mbedtee_cancel_req(struct tee_context *ctx,
++	u32 cancel_id, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_session *sess = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(int));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	*(int *)rpc->data = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CANCEL, rpc, false);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start)
++{
++	int ret = -1, i = 0, j = 0;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++	unsigned long *pagearray = NULL;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	size_t pagearray_sz = 0, multiple = PAGE_SIZE / TEE_PAGE_SIZE;
++
++	dev_dbg(clnt->dev, "nr_pages %d @ %d\n", (int)nr_pages, shm->id);
++
++	BUILD_BUG_ON(multiple == 0);
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++
++	pagearray_sz = DIV_ROUND_UP(nr_pages * sizeof(long) * multiple, PAGE_SIZE);
++	pagearray = alloc_pages_exact(pagearray_sz, GFP_KERNEL);
++	if (pagearray == NULL) {
++		ret = -ENOMEM;
++		goto out;
++	}
++
++	for (i = 0; i < nr_pages; i++) {
++		for (j = 0; j < multiple; j++)
++			pagearray[i * multiple + j] = TEE_PAGE_SIZE * j + \
++				page_to_phys(pages[i]);
++	}
++
++	memref->size = tee_shm_get_size(shm);
++	memref->offset = tee_shm_get_page_offset(shm);
++	memref->pages = mbedtee_virt_to_phys(pagearray);
++	memref->cnt = nr_pages * multiple;
++
++	ret = mbedtee_rpc_yieldcall(RPC_REGISTER_SHM, rpc, false);
++
++	if (ret == 0)
++		shm->sec_world_id = memref->id;
++
++	free_pages_exact(pagearray, pagearray_sz);
++
++out:
++	mbedtee_rpc_free(rpc);
++	return ret;
++}
++
++int mbedtee_shm_unregister(struct tee_context *ctx,
++	struct tee_shm *shm)
++{
++	int ret = -1;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++	memref->id = shm->sec_world_id;
++
++	ret = mbedtee_rpc_yieldcall(RPC_UNREGISTER_SHM, rpc, true);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/rpc-callee.c linux-6.12.7/drivers/tee/mbedtee/rpc-callee.c
+--- linux-6.12.7-ori/drivers/tee/mbedtee/rpc-callee.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/rpc-callee.c	2024-12-30 14:49:15.309349269 +0800
+@@ -0,0 +1,299 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ * Callees for TEE->REE RPC
++ */
++#include <linux/slab.h>
++#include <linux/module.h>
++#include <linux/io.h>
++#include <linux/printk.h>
++#include <asm/smp.h>
++#include <asm/cacheflush.h>
++#include <asm/hardirq.h>
++#include <linux/delay.h>
++#include <linux/highmem.h>
++
++#include <rpc/rpc.h>
++
++#include "mbedtee_drv.h"
++
++static void *t2r_shm = NULL;
++static unsigned long t2r_shm_phys = 0;
++static struct rpc_ringbuf *t2r_ring = NULL;
++static unsigned int t2r_ring_sz = 0;
++static unsigned int t2r_ring_rd = 0;
++static unsigned char __rpc_data[PAGE_SIZE] = {0};
++static rpc_func_t __rpc_callee_funcs[RPC_REENR] = {NULL};
++
++static DEFINE_SPINLOCK(__rpc_lock);
++
++struct mbedtee_rpc_work {
++	pid_t waiter;
++	int unfinish;
++	void *data;
++	unsigned int size;
++	rpc_func_t func;
++	struct work_struct work;
++};
++
++static inline size_t mbedtee_rpc_available_size(void)
++{
++	unsigned int wr = 0;
++	unsigned int rd = t2r_ring_rd;
++	unsigned int shm_size = t2r_ring_sz;
++
++	wr = t2r_ring->wr;
++	smp_rmb();
++
++	if (wr > shm_size)
++		return 0;
++
++	if (wr >= rd)
++		return wr - rd;
++	else
++		return shm_size + wr - rd;
++}
++
++static inline void mbedtee_rpc_read(void *data, size_t size)
++{
++	unsigned int remain = 0;
++	unsigned int shm_size = t2r_ring_sz;
++	unsigned int rd = t2r_ring_rd;
++	struct rpc_ringbuf *shm = t2r_ring;
++
++	smp_wmb();
++	if (rd + size <= shm_size) {
++		mbedtee_invalidate_cache(&shm->mem[rd], size);
++		memcpy(data, &shm->mem[rd], size);
++		rd += size;
++	} else {
++		remain = rd + size - shm_size;
++		mbedtee_invalidate_cache(&shm->mem[rd], size - remain);
++		memcpy(data, &shm->mem[rd], size - remain);
++		mbedtee_invalidate_cache(&shm->mem[0], remain);
++		memcpy((unsigned char *)data + size - remain,
++				&shm->mem[0], remain);
++		rd = remain;
++	}
++
++	shm->rd = t2r_ring_rd = rd;
++
++	smp_rmb();
++}
++
++static struct mbedtee_rpc_work *mbedtee_rpc_pick_next(
++	struct mbedtee_rpc_work *c)
++{
++	unsigned long retry = 0;
++	struct rpc_cmd cmd = {0};
++	rpc_func_t func = NULL;
++
++	/* handle the last unfinished rpc */
++	if (c->unfinish) {
++		if (mbedtee_rpc_available_size() < c->size)
++			return NULL;
++		c->unfinish = false;
++		mbedtee_rpc_read((void *)c->data, c->size);
++		return c;
++	}
++
++	if (mbedtee_rpc_available_size() < sizeof(cmd))
++		return NULL;
++
++	mbedtee_rpc_read(&cmd, sizeof(cmd));
++
++	if (cmd.id >= RPC_REENR)
++		return NULL;
++
++	func = __rpc_callee_funcs[cmd.id];
++	if (func == NULL) {
++		pr_emerg("rpc unregister %d ??\n", cmd.id);
++		return NULL;
++	}
++
++	if (cmd.waiter == 0) {
++ 		/* async rpc notification from peer */
++		while (mbedtee_rpc_available_size() < cmd.size) {
++			if (++retry % 1000 == 0)
++				pr_emerg("rpc retrying for %d func %d\n", cmd.size, cmd.id);
++			if (retry == 5000) {
++				/* mark as unfinished rpc */
++				c->unfinish = true;
++				return NULL;
++			}
++			udelay(5);
++		}
++		mbedtee_rpc_read(c->data, cmd.size);
++	} else {
++		if (cmd.shm == 0) {
++			pr_emerg("rpc cmd.shm error ??\n");
++			return NULL;
++		}
++
++		/* sync rpc notification from peer */
++		c = kmalloc(sizeof(*c), GFP_ATOMIC);
++		c->data = t2r_shm + (cmd.shm - t2r_shm_phys);
++	}
++
++	c->func = func;
++	c->waiter = cmd.waiter;
++	c->size = cmd.size;
++
++	return c;
++}
++
++static void rpc_routine(struct work_struct *w)
++{
++	struct mbedtee_rpc_work *c = NULL;
++
++	c = container_of(w, struct mbedtee_rpc_work, work);
++
++	c->func(c->data, c->size);
++
++	mbedtee_flush_cache(c->data, c->size);
++
++	mbedtee_rpc_fastcall(RPC_COMPLETE_TEE, c->waiter, 0, 0);
++	kfree(c);
++}
++
++extern void mbedtee_rpc_isr(void)
++{
++	unsigned long flags = 0, retry = 0;
++	struct mbedtee_rpc_work rw = {0}, *c = &rw;
++	struct rpc_ringbuf *ring = t2r_ring;
++
++	if (!ring || (t2r_ring_rd == ring->wr))
++		return;
++
++	c->data = (void *)__rpc_data;
++	spin_lock_irqsave(&__rpc_lock, flags);
++	while (t2r_ring_rd != ring->wr) {
++		if ((c = mbedtee_rpc_pick_next(&rw)) == NULL) {
++			if (++retry == 5000)
++				break;
++			continue;
++		}
++
++		/* no peer is waiting, it's asynchronous rpc */
++		if (c->waiter == 0) {
++			c->func(c->data, c->size);
++		} else {
++			/* peer is waiting, it's synchronous rpc */
++			INIT_WORK(&c->work, rpc_routine);
++			queue_work_on(smp_processor_id(), system_highpri_wq, &c->work);
++		}
++	}
++	spin_unlock_irqrestore(&__rpc_lock, flags);
++
++	if (retry)
++		pr_emerg("retry %ld\n", retry);
++}
++
++static struct rpc_cmd *__mbedtee_rpc_get_cmd(
++	void *data, size_t size)
++{
++	unsigned long cmd_phy = 0;
++
++	memcpy(&cmd_phy, data, sizeof(cmd_phy));
++
++	return phys_to_virt(cmd_phy);
++}
++
++/*
++ * Internal RPC instance to complete the rpc call
++ */
++static void mbedtee_rpc_complete(void *data, size_t size)
++{
++	struct rpc_cmd *cmd = __mbedtee_rpc_get_cmd(data, size);
++
++	if (!cmd || !cmd->waiter)
++		return;
++
++	smp_rmb();
++	if (!cmd->interrupted)
++		complete((void *)cmd->waiter);
++	else {
++		struct page *p = virt_to_page(cmd);
++		kunmap(p);
++		put_page(p);
++	}
++}
++
++static void mbedtee_ree_time(void *data, size_t size)
++{
++	struct timespec64 *ts = (void *)data;
++
++	ktime_get_real_ts64(ts);
++}
++
++static void mbedtee_reefs_supp(void *data, size_t size)
++{
++	mbedtee_supp_handler(clnt, SUPP_REEFS, data, size);
++}
++
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func)
++{
++	if (id >= RPC_REENR || !func)
++		return -EINVAL;
++
++	__rpc_callee_funcs[id] = func;
++
++	return 0;
++}
++EXPORT_SYMBOL(mbedtee_register_rpc);
++
++void mbedtee_unregister_rpc(unsigned int id)
++{
++	if (id >= RPC_REENR)
++		return;
++
++	__rpc_callee_funcs[id] = NULL;
++}
++EXPORT_SYMBOL(mbedtee_unregister_rpc);
++
++int mbedtee_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-t2r-shm", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	t2r_shm_phys = of_read_ulong(range, naddr);
++	t2r_shm = ioremap(t2r_shm_phys,
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_shm)
++		t2r_shm = phys_to_virt(t2r_shm_phys);
++
++	pr_info("rpc-t2r-shm %lx\n", t2r_shm_phys);
++
++	range = of_get_property(dn, "rpc-t2r-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("rpc-t2r-ring %lx\n", of_read_ulong(range, naddr));
++
++	t2r_ring_sz = of_read_ulong(range + naddr, nsize) -
++			sizeof(struct rpc_ringbuf);
++
++	t2r_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_ring)
++		t2r_ring = phys_to_virt(of_read_ulong(range, naddr));
++
++	mbedtee_register_rpc(RPC_REEFS, mbedtee_reefs_supp);
++	mbedtee_register_rpc(RPC_REETIME, mbedtee_ree_time);
++	mbedtee_register_rpc(RPC_COMPLETE_REE, mbedtee_rpc_complete);
++
++	return 0;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/rpc-caller-arm.c linux-6.12.7/drivers/tee/mbedtee/rpc-caller-arm.c
+--- linux-6.12.7-ori/drivers/tee/mbedtee/rpc-caller-arm.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/rpc-caller-arm.c	2024-12-30 14:49:15.309349269 +0800
+@@ -0,0 +1,98 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * ARM RPC calls to TEE - relies on SMC
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static inline long trigger_smc(unsigned long rpc)
++{
++	long ret = 0;
++
++#ifdef CONFIG_ARM
++	register long r0 asm ("r0") = rpc;
++	smp_wmb();
++	asm volatile(".arch_extension sec\n"
++				"smc 0x0" : "=r" (ret) : "r" (r0): "memory", "cc");
++#endif
++
++#ifdef CONFIG_ARM64
++	register long x0 asm ("x0") = rpc;
++	smp_wmb();
++	asm volatile("smc 0x0" : "=r" (ret) : "r" (x0) : "memory", "cc");
++#endif
++
++	return ret;
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret)
++		return ret;
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	static long buff[CONFIG_NR_CPUS][((sizeof(struct rpc_cmd)\
++		/ sizeof(long)) + 4)] __attribute__ ((aligned (64))) = {0};
++	struct rpc_cmd *rpc = NULL;
++	unsigned long flags = 0;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	local_irq_save(flags);
++
++	rpc = (struct rpc_cmd *)buff[smp_processor_id()];
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret == 0)
++		ret = rpc->ret;
++
++	local_irq_restore(flags);
++
++	return ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/rpc-caller-riscv.c linux-6.12.7/drivers/tee/mbedtee/rpc-caller-riscv.c
+--- linux-6.12.7-ori/drivers/tee/mbedtee/rpc-caller-riscv.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/rpc-caller-riscv.c	2024-12-30 14:49:15.309349269 +0800
+@@ -0,0 +1,234 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RISCV RPC calls to TEE - relies on IPI (sswi)
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static DEFINE_SPINLOCK(rpc_lock);
++static struct rpc_ringbuf *r2t_ring = NULL;
++static unsigned int r2t_ring_sz = 0;
++static void *sswi_base = NULL;
++
++static int r2t_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-r2t-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize)) {
++		pr_info("lack of rpc-r2t-ring\n");
++		return ret;
++	}
++
++	pr_info("rpc-r2t-ring %lx\n", of_read_ulong(range, naddr));
++
++	r2t_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	r2t_ring_sz = of_read_ulong(range + naddr, nsize) -
++				sizeof(struct rpc_ringbuf);
++
++	dn = of_find_compatible_node(NULL, NULL, "riscv,aclint-sswi");
++	if (!dn) {
++		pr_info("lack of riscv,aclint-sswi\n");
++		return ret;
++	}
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "reg", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("riscv,aclint-sswi %lx\n", of_read_ulong(range, naddr));
++
++	sswi_base = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	return 0;
++}
++
++/*
++ * check if the remain ring-buff is
++ * enough or not for current call
++ */
++static int rpc_ring_enough(unsigned int size)
++{
++	unsigned int wr = 0, rd = 0;
++	unsigned int remain = 0,ringsz = r2t_ring_sz;
++	struct rpc_ringbuf *shm = r2t_ring;
++
++	wr = shm->wr;
++	rd = shm->rd;
++	smp_rmb();
++
++	if ((rd > ringsz) || (wr > ringsz))
++		return false;
++
++	if (rd <= wr)
++		remain = ringsz + rd - wr;
++	else
++		remain = rd - wr;
++
++	return remain >= size;
++}
++
++/*
++ * copy into the ring-buff,
++ * and update the write ptr
++ */
++static void rpc_ring_write(void *data, unsigned int size)
++{
++	struct rpc_ringbuf *shm = r2t_ring;
++	unsigned int remain = 0, ringsz = r2t_ring_sz;
++	static unsigned int wr = 0;
++
++	if (wr + size > ringsz) {
++		remain = wr + size - ringsz;
++		memcpy(&shm->mem[wr], data, size - remain);
++		mbedtee_flush_cache(&shm->mem[wr], size - remain);
++		memcpy(&shm->mem[0], data + size - remain, remain);
++		mbedtee_flush_cache(&shm->mem[0], remain);
++		wr = remain;
++	} else {
++		memcpy(&shm->mem[wr], data, size);
++		mbedtee_flush_cache(&shm->mem[wr], size);
++		wr += size;
++	}
++
++	shm->wr = wr;
++
++	smp_mb();
++}
++
++static void trigger_sswi(void)
++{
++	iowrite32(1, (int *)sswi_base + 0);
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	long buff[((sizeof(struct rpc_cmd)/sizeof(long)) + 4)] = {0};
++	struct rpc_cmd *rpc = (void *)buff;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	/* 3 args */
++	rpc->size = 3 * sizeof(long);
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	ret = wait_for_completion_interruptible(&c);
++	if (ret)
++		return ret;
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/shm_pool.c linux-6.12.7/drivers/tee/mbedtee/shm_pool.c
+--- linux-6.12.7-ori/drivers/tee/mbedtee/shm_pool.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/shm_pool.c	2024-12-30 14:49:15.309349269 +0800
+@@ -0,0 +1,86 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2017, EPAM Systems
++ */
++#include <linux/device.h>
++#include <linux/dma-buf.h>
++#include <linux/genalloc.h>
++#include <linux/slab.h>
++
++#include "mbedtee_drv.h"
++
++static int pool_op_alloc(struct tee_shm_pool *pool,
++			 struct tee_shm *shm, size_t size, size_t align)
++{
++	unsigned int order = get_order(size);
++	struct page *page;
++	int rc = 0;
++
++	page = alloc_pages(GFP_KERNEL | __GFP_ZERO, order);
++	if (!page)
++		return -ENOMEM;
++
++	shm->kaddr = page_address(page);
++	shm->paddr = page_to_phys(page);
++	shm->size = PAGE_SIZE << order;
++
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield) {
++		unsigned int nr_pages = 1 << order, i;
++		struct page **pages;
++
++		pages = kcalloc(nr_pages, sizeof(pages), GFP_KERNEL);
++		if (!pages)
++			return -ENOMEM;
++
++		for (i = 0; i < nr_pages; i++) {
++			pages[i] = page;
++			page++;
++		}
++
++		rc = mbedtee_shm_register(shm->ctx, shm, pages, nr_pages,
++					(unsigned long)shm->kaddr);
++		kfree(pages);
++	}
++
++	return rc;
++}
++
++static void pool_op_free(struct tee_shm_pool *pool,
++			 struct tee_shm *shm)
++{
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield)
++		mbedtee_shm_unregister(shm->ctx, shm);
++
++	free_pages((unsigned long)shm->kaddr, get_order(shm->size));
++	shm->kaddr = NULL;
++}
++
++static void pool_op_destroy_pool(struct tee_shm_pool *pool)
++{
++	kfree(pool);
++}
++
++static const struct tee_shm_pool_ops pool_ops = {
++	.alloc = pool_op_alloc,
++	.free = pool_op_free,
++	.destroy_pool = pool_op_destroy_pool,
++};
++
++/**
++ * mbedtee_shm_pool_alloc_pages() - create page-based allocator pool
++ *
++ * This pool is used when MBEDTEE supports dymanic SHM. In this case
++ * command buffers and such are allocated from kernel's own memory.
++ */
++struct tee_shm_pool *mbedtee_shm_pool_alloc_pages(void)
++{
++	struct tee_shm_pool *pool = kzalloc(sizeof(*pool), GFP_KERNEL);
++
++	if (!pool)
++		return ERR_PTR(-ENOMEM);
++
++	pool->ops = &pool_ops;
++
++	return pool;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/shm_pool.h linux-6.12.7/drivers/tee/mbedtee/shm_pool.h
+--- linux-6.12.7-ori/drivers/tee/mbedtee/shm_pool.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/shm_pool.h	2024-12-30 14:49:15.309349269 +0800
+@@ -0,0 +1,14 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2016, EPAM Systems
++ */
++
++#ifndef SHM_POOL_H
++#define SHM_POOL_H
++
++#include <linux/tee_drv.h>
++
++struct tee_shm_pool *mbedtee_shm_pool_alloc_pages(void);
++
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/mbedtee/supp.c linux-6.12.7/drivers/tee/mbedtee/supp.c
+--- linux-6.12.7-ori/drivers/tee/mbedtee/supp.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.12.7/drivers/tee/mbedtee/supp.c	2024-12-30 14:49:15.309349269 +0800
+@@ -0,0 +1,210 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ */
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/uaccess.h>
++#include <linux/highmem.h>
++#include <asm/cacheflush.h>
++
++#include "mbedtee_drv.h"
++
++struct mbedtee_supp_req {
++	int ret;
++	u32 func;
++
++	struct list_head node;
++
++	struct tee_shm *shm;
++	void *data;
++	size_t size;
++
++	struct completion c;
++};
++
++void mbedtee_supp_init(struct mbedtee_supp *supp)
++{
++	memset(supp, 0, sizeof(*supp));
++	mutex_init(&supp->mutex);
++	init_completion(&supp->reqs_c);
++	INIT_LIST_HEAD(&supp->reqs);
++}
++
++void mbedtee_supp_uninit(struct mbedtee_supp *supp)
++{
++	mutex_destroy(&supp->mutex);
++}
++
++void mbedtee_supp_release(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *r, *n;
++
++	mutex_lock(&supp->mutex);
++
++	list_for_each_entry_safe(r, n, &supp->reqs, node) {
++		list_del(&r->node);
++		r->ret = -ERESTARTSYS;
++		complete(&r->c);
++	}
++
++	supp->ctx = NULL;
++	supp->req = NULL;
++
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_enqueue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_add_tail(&req->node, &supp->reqs);
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_dequeue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_del(&req->node);
++	mutex_unlock(&supp->mutex);
++}
++
++/*
++ * receive the request from mbedtee,
++ * then push it to mbedtee_supp
++ */
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size)
++{
++	int ret = -1;
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = kzalloc(sizeof(*req), GFP_KERNEL);
++
++	if (req == NULL)
++		return -ENOMEM;
++
++	init_completion(&req->c);
++	req->func = func;
++	req->data = data;
++	req->size = size;
++
++	supp_enqueue_req(supp, req);
++
++	/* wakeup the mbedtee_supp daemon to handle this request */
++	complete(&supp->reqs_c);
++
++	if (wait_for_completion_interruptible(&req->c)) {
++		req->ret = -ERESTARTSYS;
++		supp_dequeue_req(supp, req);
++	}
++
++	ret = req->ret;
++	kfree(req);
++	return ret;
++}
++
++static struct mbedtee_supp_req *supp_pop_req(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *req;
++
++	mutex_lock(&supp->mutex);
++
++	/*
++	 * last request not finishs
++	 */
++	if (supp->req != NULL) {
++		req = ERR_PTR(-EINVAL);
++		goto out;
++	}
++
++	req = list_first_entry_or_null(&supp->reqs,
++			struct mbedtee_supp_req, node);
++
++	if (req) {
++		list_del(&req->node);
++		supp->req = req;
++	}
++
++out:
++	mutex_unlock(&supp->mutex);
++	return req;
++}
++
++/*
++ * receive request for mbedtee_supp
++ */
++int mbedtee_supp_recv(struct tee_context *ctx,
++	u32 *func, u32 *num_params, struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = NULL;
++	struct mbedtee_context_data *d = ctx->data;
++	struct tee_shm *shm = param->u.memref.shm;
++
++	if (*num_params != 1)
++		return -EINVAL;
++
++	if ((tee_param_is_memref(param) != true) ||
++		(param->u.memref.shm == NULL))
++		return -EINVAL;
++
++	d->is_supp_ctx = true;
++
++	tee_shm_put(shm);
++
++	while (true) {
++		req = supp_pop_req(supp);
++		if (IS_ERR(req))
++			return PTR_ERR(req);
++
++		if (req != NULL)
++			break;
++
++		if (wait_for_completion_interruptible(&supp->reqs_c))
++			return -ERESTARTSYS;
++	}
++
++	if (req->size > param->u.memref.size)
++		return -EOVERFLOW;
++
++	*func = req->func;
++	req->shm = shm;
++
++	memcpy(shm->kaddr, req->data, req->size);
++	param->u.memref.size = req->size;
++
++	return 0;
++}
++
++/*
++ * mbedtee_supp send result to mbedtee_supp_handler()
++ */
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = supp->req;
++
++	if (IS_ERR_OR_NULL(req))
++		return PTR_ERR(req);
++
++	if (req->size < param->u.memref.size)
++		ret = -EOVERFLOW;
++
++	req->ret = ret;
++	memcpy(req->data, req->shm->kaddr, param->u.memref.size);
++
++	mutex_lock(&supp->mutex);
++	supp->req = NULL;
++	mutex_unlock(&supp->mutex);
++
++	/* wakeup mbedtee_supp_handler() */
++	complete(&req->c);
++
++	return 0;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tee/tee_core.c linux-6.12.7/drivers/tee/tee_core.c
+--- linux-6.12.7-ori/drivers/tee/tee_core.c	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/drivers/tee/tee_core.c	2024-12-30 14:49:15.309349269 +0800
+@@ -575,8 +575,10 @@ static int tee_ioctl_invoke(struct tee_c
+ 			return -ENOMEM;
+ 		uparams = uarg->params;
+ 		rc = params_from_user(ctx, params, arg.num_params, uparams);
+-		if (rc)
++		if (rc) {
++			pr_emerg("rc %d\n", rc);
+ 			goto out;
++		}
+ 	}
+ 
+ 	rc = ctx->teedev->desc->ops->invoke_func(ctx, &arg, params);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/drivers/tty/serial/amba-pl011.c linux-6.12.7/drivers/tty/serial/amba-pl011.c
+--- linux-6.12.7-ori/drivers/tty/serial/amba-pl011.c	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/drivers/tty/serial/amba-pl011.c	2024-12-30 14:49:15.310349269 +0800
+@@ -2574,6 +2574,51 @@ static int pl011_early_read(struct conso
+ #define pl011_early_read NULL
+ #endif
+ 
++static __init void __pl011_early_port_setup(struct uart_port *p)
++{
++	int brd_i = 0;
++	int brd_f = 0;
++	int baud = 115200, divisor = 16;
++
++	p->uartclk = 24000000;
++
++	/*
++	 * Disable all
++	 */
++	iowrite32(0, p->membase + UART011_CR);
++
++	/* mask/clear all interrupt */
++	iowrite32(0, p->membase + UART011_IMSC);
++	iowrite32(UART011_OEIC | UART011_BEIC | UART011_PEIC |
++				UART011_FEIC | UART011_RTIC | UART011_RXIC,
++			p->membase + UART011_ICR);
++
++	/* Baud rate divisor
++	 *	BAUDDIV = (FUARTCLK/ {16 * Baud rate})
++	 *  fractional part, m = integer((x * 64) + 0.5)
++	 */
++	brd_i = p->uartclk * 64 / (baud * divisor);
++	brd_f = brd_i & 0x3F;
++	brd_i >>= 6;
++	iowrite32(brd_i, p->membase + UART011_IBRD);
++	iowrite32(brd_f, p->membase + UART011_FBRD);
++
++	/*
++	 * 8-bit data, 1-bit stop, none-parity, with FIFO
++	 */
++	iowrite32(UART01x_LCRH_WLEN_8 | UART01x_LCRH_FEN,
++				p->membase + UART011_LCRH);
++	iowrite32(UART011_IFLS_RX4_8 | UART011_IFLS_TX4_8,
++				p->membase + UART011_IFLS);
++
++	/*
++	 * Enable UART - TX only
++	 */
++	iowrite32(UART01x_CR_UARTEN | UART011_CR_TXE,
++				p->membase + UART011_CR);
++	iowrite32(UART011_TXIM, p->membase + UART011_IMSC);
++}
++
+ /*
+  * On non-ACPI systems, earlycon is enabled by specifying
+  * "earlycon=pl011,<address>" on the kernel command line.
+@@ -2592,6 +2637,8 @@ static int __init pl011_early_console_se
+ 	if (!device->port.membase)
+ 		return -ENODEV;
+ 
++	__pl011_early_port_setup(&device->port);
++
+ 	device->con->write = pl011_early_write;
+ 	device->con->read = pl011_early_read;
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.12.7-ori/include/uapi/linux/tee.h linux-6.12.7/include/uapi/linux/tee.h
+--- linux-6.12.7-ori/include/uapi/linux/tee.h	2024-12-27 21:02:20.000000000 +0800
++++ linux-6.12.7/include/uapi/linux/tee.h	2024-12-30 14:50:07.902309416 +0800
+@@ -58,6 +58,8 @@
+ #define TEE_IMPL_ID_AMDTEE	2
+ #define TEE_IMPL_ID_TSTEE	3
+ 
++#define TEE_IMPL_ID_MBEDTEE	8
++
+ /*
+  * OP-TEE specific capabilities
+  */
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/linux/patches/mbedtee-linux-6.13-rc5.patch-- buildroot/linux/patches/mbedtee-linux-6.13-rc5.patch--
--- buildroot-ori/linux/patches/mbedtee-linux-6.13-rc5.patch--	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/linux/patches/mbedtee-linux-6.13-rc5.patch--	2025-05-31 23:12:46.391379555 +0800
@@ -0,0 +1,2151 @@
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/arch/arm/boot/compressed/head.S linux-6.13-rc5/arch/arm/boot/compressed/head.S
+--- linux-6.13-rc5-ori/arch/arm/boot/compressed/head.S	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/arch/arm/boot/compressed/head.S	2024-12-30 17:40:23.856610003 +0800
+@@ -309,7 +309,8 @@ not_angel:
+ 1:
+ #endif /* CONFIG_USE_OF */
+ 		/* Determine final kernel image address. */
+-		add	r4, r0, #TEXT_OFFSET
++		ldr	r4, =TEXT_OFFSET
++		add	r4, r0, r4
+ #else
+ 		ldr	r4, =zreladdr
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/arch/arm/kernel/head.S linux-6.13-rc5/arch/arm/kernel/head.S
+--- linux-6.13-rc5-ori/arch/arm/kernel/head.S	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/arch/arm/kernel/head.S	2024-12-30 17:40:23.879610004 +0800
+@@ -65,7 +65,8 @@ kernel_sec_end:
+ 	.popsection
+ 
+ 	.macro	pgtbl, rd, phys
+-	add	\rd, \phys, #TEXT_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	add	\rd, \phys, r0
+ 	sub	\rd, \rd, #PG_DIR_SIZE
+ 	.endm
+ 
+@@ -120,7 +121,9 @@ ENTRY(stext)
+ 
+ #ifndef CONFIG_XIP_KERNEL
+ 	adr_l	r8, _text			@ __pa(_text)
+-	sub	r8, r8, #TEXT_OFFSET		@ PHYS_OFFSET
++#	sub	r8, r8, #TEXT_OFFSET	@ PHYS_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	sub	r8, r8, r0				@ PHYS_OFFSET
+ #else
+ 	ldr	r8, =PLAT_PHYS_OFFSET		@ always constant in this case
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/arch/arm/kernel/smp.c linux-6.13-rc5/arch/arm/kernel/smp.c
+--- linux-6.13-rc5-ori/arch/arm/kernel/smp.c	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/arch/arm/kernel/smp.c	2024-12-30 17:40:23.888610004 +0800
+@@ -65,20 +65,21 @@ enum ipi_msg_type {
+ 	IPI_CPU_STOP,
+ 	IPI_IRQ_WORK,
+ 	IPI_COMPLETION,
+-	NR_IPI,
+ 	/*
+ 	 * CPU_BACKTRACE is special and not included in NR_IPI
+ 	 * or tracable with trace_ipi_*
+ 	 */
+-	IPI_CPU_BACKTRACE = NR_IPI,
++	IPI_CPU_BACKTRACE,
+ 	/*
+ 	 * SGI8-15 can be reserved by secure firmware, and thus may
+ 	 * not be usable by the kernel. Please keep the above limited
+ 	 * to at most 8 entries.
+ 	 */
++	IPI_TEECALL,
++	NR_IPI,
+ 	MAX_IPI
+ };
+-
++extern void mbedtee_rpc_isr(void);
+ static int ipi_irq_base __read_mostly;
+ static int nr_ipi __read_mostly = NR_IPI;
+ static struct irq_desc *ipi_desc[MAX_IPI] __read_mostly;
+@@ -675,6 +676,11 @@ static void do_handle_IPI(int ipinr)
+ 		printk_deferred_exit();
+ 		break;
+ 
++	/* mbedtee callback */
++	case IPI_TEECALL:
++		mbedtee_rpc_isr();
++		break;
++
+ 	default:
+ 		pr_crit("CPU%u: Unknown IPI message 0x%x\n",
+ 		        cpu, ipinr);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/arch/arm/Makefile linux-6.13-rc5/arch/arm/Makefile
+--- linux-6.13-rc5-ori/arch/arm/Makefile	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/arch/arm/Makefile	2024-12-30 17:40:23.889610004 +0800
+@@ -158,7 +158,7 @@ CHECKFLAGS	+= -D__arm__
+ # Note: the 32kB below this value is reserved for use by the kernel
+ # during boot, and this offset is critical to the functioning of
+ # kexec-tools.
+-textofs-y	:= 0x00008000
++textofs-y	:= 0x06008000
+ # RTD1195 has Boot ROM at start of address space
+ textofs-$(CONFIG_ARCH_REALTEK)  := 0x00108000
+ # SA1111 DMA bug: we don't want the kernel to live in precious DMA-able memory
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/arch/arm64/kernel/smp.c linux-6.13-rc5/arch/arm64/kernel/smp.c
+--- linux-6.13-rc5-ori/arch/arm64/kernel/smp.c	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/arch/arm64/kernel/smp.c	2024-12-30 17:40:23.890610004 +0800
+@@ -71,6 +71,9 @@ enum ipi_msg_type {
+ 	IPI_CPU_STOP_NMI,
+ 	IPI_TIMER,
+ 	IPI_IRQ_WORK,
++	IPI_RESERVED1, /* 0 ~ 7 for REE */
++	IPI_RESERVED2, /* 0 ~ 7 for REE */
++	IPI_TEECALL, /* 8 ~ 15 for TEE */
+ 	NR_IPI,
+ 	/*
+ 	 * Any enum >= NR_IPI and < MAX_IPI is special and not tracable
+@@ -990,6 +993,12 @@ static void do_handle_IPI(int ipinr)
+ 		break;
+ #endif
+ 
++	/* mbedtee RPC callback */
++	case IPI_TEECALL:
++		extern void mbedtee_rpc_isr(void);
++		mbedtee_rpc_isr();
++		break;
++
+ 	case IPI_CPU_BACKTRACE:
+ 		/*
+ 		 * NOTE: in some cases this _won't_ be NMI context. See the
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/arch/riscv/kernel/sbi-ipi.c linux-6.13-rc5/arch/riscv/kernel/sbi-ipi.c
+--- linux-6.13-rc5-ori/arch/riscv/kernel/sbi-ipi.c	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/arch/riscv/kernel/sbi-ipi.c	2024-12-30 17:40:23.890610004 +0800
+@@ -18,6 +18,8 @@ EXPORT_SYMBOL_GPL(riscv_sbi_for_rfence);
+ 
+ static int sbi_ipi_virq;
+ 
++extern void mbedtee_rpc_isr(void);
++
+ static void sbi_ipi_handle(struct irq_desc *desc)
+ {
+ 	struct irq_chip *chip = irq_desc_get_chip(desc);
+@@ -27,6 +29,8 @@ static void sbi_ipi_handle(struct irq_de
+ 	csr_clear(CSR_IP, IE_SIE);
+ 	ipi_mux_process();
+ 
++	mbedtee_rpc_isr();
++
+ 	chained_irq_exit(chip, desc);
+ }
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/firmware/psci/psci.c linux-6.13-rc5/drivers/firmware/psci/psci.c
+--- linux-6.13-rc5-ori/drivers/firmware/psci/psci.c	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/drivers/firmware/psci/psci.c	2024-12-30 17:40:23.891610004 +0800
+@@ -270,12 +270,14 @@ static unsigned long psci_migrate_info_u
+ 
+ static void set_conduit(enum arm_smccc_conduit conduit)
+ {
++	extern psci_fn mbedtee_rpc_fastcall;
++
+ 	switch (conduit) {
+ 	case SMCCC_CONDUIT_HVC:
+ 		invoke_psci_fn = __invoke_psci_fn_hvc;
+ 		break;
+ 	case SMCCC_CONDUIT_SMC:
+-		invoke_psci_fn = __invoke_psci_fn_smc;
++		invoke_psci_fn = mbedtee_rpc_fastcall;
+ 		break;
+ 	default:
+ 		WARN(1, "Unexpected PSCI conduit %d\n", conduit);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/irqchip/irq-gic.c linux-6.13-rc5/drivers/irqchip/irq-gic.c
+--- linux-6.13-rc5-ori/drivers/irqchip/irq-gic.c	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/drivers/irqchip/irq-gic.c	2024-12-30 17:40:23.891610004 +0800
+@@ -864,12 +864,15 @@ static __init void gic_smp_init(void)
+ 	cpuhp_setup_state_nocalls(CPUHP_AP_IRQ_GIC_STARTING,
+ 				  "irqchip/arm/gic:starting",
+ 				  gic_starting_cpu, NULL);
+-
+-	base_sgi = irq_domain_alloc_irqs(gic_data[0].domain, 8, NUMA_NO_NODE, &sgi_fwspec);
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = irq_domain_alloc_irqs(gic_data[0].domain, 16, NUMA_NO_NODE, &sgi_fwspec);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ #else
+ #define gic_smp_init()		do { } while(0)
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/irqchip/irq-gic-v3.c linux-6.13-rc5/drivers/irqchip/irq-gic-v3.c
+--- linux-6.13-rc5-ori/drivers/irqchip/irq-gic-v3.c	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/drivers/irqchip/irq-gic-v3.c	2024-12-30 17:40:23.892610004 +0800
+@@ -1458,11 +1458,15 @@ static void __init gic_smp_init(void)
+ 				  gic_starting_cpu, NULL);
+ 
+ 	/* Register all 8 non-secure SGIs */
+-	base_sgi = irq_domain_alloc_irqs(gic_data.domain, 8, NUMA_NO_NODE, &sgi_fwspec);
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = irq_domain_alloc_irqs(gic_data.domain, 16, NUMA_NO_NODE, &sgi_fwspec);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ 
+ static int gic_set_affinity(struct irq_data *d, const struct cpumask *mask_val,
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/Kconfig linux-6.13-rc5/drivers/tee/Kconfig
+--- linux-6.13-rc5-ori/drivers/tee/Kconfig	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/Kconfig	2024-12-30 17:40:23.892610004 +0800
+@@ -16,5 +16,6 @@ if TEE
+ source "drivers/tee/optee/Kconfig"
+ source "drivers/tee/amdtee/Kconfig"
+ source "drivers/tee/tstee/Kconfig"
++source "drivers/tee/mbedtee/Kconfig"
+ 
+ endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/Makefile linux-6.13-rc5/drivers/tee/Makefile
+--- linux-6.13-rc5-ori/drivers/tee/Makefile	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/Makefile	2024-12-30 17:40:23.907610004 +0800
+@@ -6,3 +6,4 @@ tee-objs += tee_shm_pool.o
+ obj-$(CONFIG_OPTEE) += optee/
+ obj-$(CONFIG_AMDTEE) += amdtee/
+ obj-$(CONFIG_ARM_TSTEE) += tstee/
++obj-$(CONFIG_MBEDTEE) += mbedtee/
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/core.c linux-6.13-rc5/drivers/tee/mbedtee/core.c
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/core.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/core.c	2024-12-30 17:40:23.907610004 +0800
+@@ -0,0 +1,253 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#include <linux/errno.h>
++#include <linux/io.h>
++#include <linux/module.h>
++#include <linux/of.h>
++#include <linux/of_platform.h>
++#include <linux/platform_device.h>
++#include <linux/slab.h>
++#include <linux/string.h>
++#include <linux/tee_drv.h>
++#include <linux/types.h>
++#include <linux/uaccess.h>
++#include "mbedtee_drv.h"
++#include "shm_pool.h"
++
++#include "../tee_private.h"
++
++struct mbedtee_clnt __clnt = {0}, *clnt = &__clnt;
++
++static void mbedtee_get_version(struct tee_device *teedev,
++			      struct tee_ioctl_version_data *vers)
++{
++	struct tee_ioctl_version_data v = {
++		.impl_id = TEE_IMPL_ID_MBEDTEE,
++		.impl_caps = 0,
++		.gen_caps = TEE_GEN_CAP_GP | TEE_GEN_CAP_REG_MEM | TEE_GEN_CAP_MEMREF_NULL,
++	};
++
++	*vers = v;
++}
++
++static int mbedtee_open(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *ctxdata;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++
++	ctxdata = kzalloc(sizeof(*ctxdata), GFP_KERNEL);
++	if (!ctxdata)
++		return -ENOMEM;
++
++	mutex_init(&ctxdata->mutex);
++	INIT_LIST_HEAD(&ctxdata->sess_list);
++
++	dev_dbg(clnt->dev, "mbedtee_open\n");
++
++	ctx->data = ctxdata;
++	ctx->cap_memref_null = true;
++
++	return 0;
++}
++
++static void mbedtee_release(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *d = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *s, *n = NULL;
++
++	if (d == NULL)
++		return;
++
++	if (d->is_supp_ctx)
++		mbedtee_supp_release(&clnt->supp);
++	else {
++		list_for_each_entry_safe(s, n, &d->sess_list, list_node) {
++			dev_dbg(clnt->dev, "mbedtee_release %d\n", s->session_id);
++			mbedtee_close_session(ctx, s->session_id);
++		}
++	}
++
++	kfree(d);
++	ctx->data = NULL;
++}
++
++static const struct tee_driver_ops mbedtee_ops = {
++	.get_version = mbedtee_get_version,
++	.open = mbedtee_open,
++	.release = mbedtee_release,
++	.open_session = mbedtee_open_session,
++	.close_session = mbedtee_close_session,
++	.invoke_func = mbedtee_invoke_session,
++	.cancel_req = mbedtee_cancel_req,
++	.supp_recv = mbedtee_supp_recv,
++	.supp_send = mbedtee_supp_send,
++	.shm_register = mbedtee_shm_register,
++	.shm_unregister = mbedtee_shm_unregister,
++};
++
++
++static const struct tee_desc mbedtee_desc = {
++	.name = "mbedtee-clnt",
++	.ops = &mbedtee_ops,
++	.owner = THIS_MODULE,
++};
++
++#if defined(MBEDTEE_NODE_IN_DTS)
++static int mbedtee_remove(struct platform_device *pdev)
++{
++	struct mbedtee_clnt *clnt = platform_get_drvdata(pdev);
++
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++
++	return 0;
++}
++
++static int mbedtee_probe(struct platform_device *pdev)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	dev_info(&pdev->dev, "mbedtee client probing\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		dev_info(&pdev->dev, "mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	dev_info(&pdev->dev, "mbedtee version: 0x%06x\n", version);
++	dev_info(&pdev->dev, "mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &pdev->dev;
++
++	platform_set_drvdata(pdev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client probed\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++
++	return ret;
++}
++
++static const struct of_device_id mbedtee_dt_match[] = {
++	{ .compatible = "mbedtee-clnt" },
++	{},
++};
++
++MODULE_DEVICE_TABLE(of, mbedtee_dt_match);
++
++static struct platform_driver mbedtee_driver = {
++	.probe  = mbedtee_probe,
++	.remove = mbedtee_remove,
++	.driver = {
++		.name = "mbedtee-clnt",
++		.of_match_table = mbedtee_dt_match,
++	},
++};
++module_platform_driver(mbedtee_driver);
++#endif
++
++static void __exit mbedtee_exit(void)
++{
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++}
++
++static int __init mbedtee_init(void)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	pr_info("mbedtee client init\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		pr_info("mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	pr_info("mbedtee version: 0x%06x\n", version);
++	pr_info("mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &teedev->dev;
++
++	dev_set_drvdata(mbedclnt->dev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client initialized\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++	return ret;
++}
++module_init(mbedtee_init);
++module_exit(mbedtee_exit);
++
++MODULE_AUTHOR("Kapa");
++MODULE_DESCRIPTION("MBEDTEE Client");
++MODULE_VERSION("1.0");
++MODULE_LICENSE("GPL v2");
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/Kconfig linux-6.13-rc5/drivers/tee/mbedtee/Kconfig
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/Kconfig	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/Kconfig	2024-12-30 17:40:23.907610004 +0800
+@@ -0,0 +1,8 @@
++# SPDX-License-Identifier: GPL-2.0-only
++# MBED-TEE Trusted Execution Environment Configuration
++config MBEDTEE
++	tristate "MBEDTEE"
++	depends on MMU
++	help
++	  This implements the MBEDTEE Trusted Execution Environment (TEE)
++	  driver.
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/Makefile linux-6.13-rc5/drivers/tee/mbedtee/Makefile
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/Makefile	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/Makefile	2024-12-30 17:40:23.908610004 +0800
+@@ -0,0 +1,13 @@
++# SPDX-License-Identifier: GPL-2.0
++
++ccflags-$(CONFIG_MBEDTEE) += -I$(STAGING_DIR)/usr/include/mbedtee
++
++obj-$(CONFIG_MBEDTEE) += mbedtee.o
++
++mbedtee-y += core.o
++mbedtee-y += supp.o
++mbedtee-y += shm_pool.o
++mbedtee-y += rpc.o rpc-callee.o
++mbedtee-$(CONFIG_ARM) += rpc-caller-arm.o
++mbedtee-$(CONFIG_ARM64) += rpc-caller-arm.o
++mbedtee-$(CONFIG_RISCV) += rpc-caller-riscv.o
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/mbedtee_drv.h linux-6.13-rc5/drivers/tee/mbedtee/mbedtee_drv.h
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/mbedtee_drv.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/mbedtee_drv.h	2024-12-30 17:40:23.908610004 +0800
+@@ -0,0 +1,155 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#ifndef MBEDTEE_DRV_H
++#define MBEDTEE_DRV_H
++
++#include <linux/types.h>
++#include <linux/of.h>
++#include <linux/semaphore.h>
++#include <linux/tee_drv.h>
++#include <linux/tee_core.h>
++#include <linux/syscalls.h>
++#include <asm/cacheflush.h>
++
++#include <rpc/rpc.h>
++#include <rpc/reefs.h>
++
++#include "mbedtee_rpc.h"
++#include "shm_pool.h"
++
++#define TEEC_ERROR_TARGET_DEAD      0xFFFF3024
++#define TEEC_ERROR_OUT_OF_MEMORY    0xFFFF000C
++
++#define TEEC_ORIGIN_COMMS           0x00000002
++#define TEEC_ORIGIN_TEE             0x00000003
++
++#define MBEDTEE_VALID_VERSION(x) ((((x) >> 16) == 1) && \
++	((((x) >> 8) & 0xFF) >= 0) && (((x) & 0xFF) >= 1))
++
++struct mbedtee_supp {
++	struct mutex mutex;
++	struct tee_context *ctx;
++
++	void *req;
++	struct list_head reqs;
++	struct completion reqs_c;
++};
++
++struct mbedtee_clnt {
++	int version;
++	int yield;
++	struct device *dev;
++	struct tee_device *teedev;
++	struct tee_shm_pool *pool;
++	struct mbedtee_supp supp;
++};
++
++struct mbedtee_session {
++	struct list_head list_node;
++	u32 session_id;
++};
++
++struct mbedtee_context_data {
++	int is_supp_ctx;
++	struct mutex mutex;
++	struct list_head sess_list;
++};
++
++typedef struct {
++	uint32_t timeLow;
++	uint16_t timeMid;
++	uint16_t timeHiAndVersion;
++	uint8_t clockSeqAndNode[8];
++} TEEC_UUID;
++
++extern struct mbedtee_clnt *clnt;
++
++#define mbedtee_bswap16(_x) ((__u16)(((_x) >> 8) | (((_x) << 8) & 0xff00)))
++#define mbedtee_bswap32(_x) ((__u32)(((_x) >> 24) | (((_x) >> 8) & 0xff00) | \
++	    (((_x) << 8) & 0xff0000) | (((_x) << 24) & 0xff000000)))
++
++static inline void mbedtee_flush_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM)
++	__cpuc_flush_dcache_area(va, size);
++#endif
++
++#if defined(CONFIG_ARM64)
++	dcache_clean_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* wback & inv */
++	/* ALT_CMO_OP(FLUSH, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline void mbedtee_invalidate_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM64)
++	dcache_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* inv */
++	/* ALT_CMO_OP(INVAL, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline phys_addr_t mbedtee_virt_to_phys(void *va)
++{
++	if (is_vmalloc_or_module_addr(va)) {
++		return page_to_phys(vmalloc_to_page(va)) +
++				    offset_in_page(va);
++	}
++
++	WARN_ON(!virt_addr_valid(va));
++	return virt_to_phys(va);
++}
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size);
++void mbedtee_rpc_free(struct rpc_cmd *rpc);
++
++int mbedtee_open_session(struct tee_context *ctx,
++	struct tee_ioctl_open_session_arg *arg, struct tee_param *param);
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg, struct tee_param *param);
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session);
++
++int mbedtee_cancel_req(struct tee_context *ctx, u32 cancel_id, u32 session);
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start);
++
++int mbedtee_shm_unregister(struct tee_context *ctx, struct tee_shm *shm);
++
++/* TEE->REE RPC */
++int mbedtee_rpc_init(void);
++void mbedtee_rpc_isr(void);
++
++void mbedtee_supp_init(struct mbedtee_supp *supp);
++void mbedtee_supp_uninit(struct mbedtee_supp *supp);
++void mbedtee_supp_release(struct mbedtee_supp *supp);
++int mbedtee_supp_recv(struct tee_context *ctx, u32 *func, u32 *num_params,
++		    struct tee_param *param);
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param);
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size);
++
++/* REE->TEE RPC */
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible);
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2);
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/mbedtee_rpc.h linux-6.13-rc5/drivers/tee/mbedtee/mbedtee_rpc.h
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/mbedtee_rpc.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/mbedtee_rpc.h	2024-12-30 17:40:23.908610004 +0800
+@@ -0,0 +1,30 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ *
++ * Export symbols for other kernel modules
++ */
++#ifndef _MBEDTEE_RPC_H
++#define _MBEDTEE_RPC_H
++
++/*
++ * defines the __typeof__ the RPC callee function handler.
++ * @data - shared memory buffer from the RPC peer.
++ * @size - the data size of this shared memory buffer.
++ */
++typedef void (*rpc_func_t)(void *data, size_t size);
++
++/*
++ * register the rpc callee func.
++ * @id - function id of callee
++ * @return - 0 on success. Else negative num.
++ */
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func);
++
++/*
++ * unregister the callee @id.
++ */
++void mbedtee_unregister_rpc(unsigned int id);
++
++#endif
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/rpc.c linux-6.13-rc5/drivers/tee/mbedtee/rpc.c
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/rpc.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/rpc.c	2024-12-30 17:40:23.908610004 +0800
+@@ -0,0 +1,396 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RPC calls to TEE
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size)
++{
++	struct page *p = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	if (sizeof(struct rpc_cmd) + size > PAGE_SIZE)
++		return NULL;
++
++	p = alloc_page(GFP_KERNEL);
++	if (p == NULL)
++		return NULL;
++
++	rpc = kmap(p);
++	rpc->size = size;
++	rpc->ret = -1;
++	rpc->interrupted = 0;
++
++	return rpc;
++}
++EXPORT_SYMBOL(mbedtee_rpc_alloc);
++
++void mbedtee_rpc_free(struct rpc_cmd *rpc)
++{
++	struct page *p = NULL;
++
++	if (rpc && (!rpc->interrupted)) {
++		p = virt_to_page(rpc);
++		kunmap(p);
++		put_page(p);
++	}
++}
++EXPORT_SYMBOL(mbedtee_rpc_free);
++
++static int mbedtee_param_decode(struct tee_param *params,
++	size_t num_params, const struct rpc_param *rp)
++{
++	size_t n;
++#define TYPE_GET(t, i) ((((uint32_t)t) >> ((i)*4)) & 0xF)
++
++	for (n = 0; n < num_params; n++) {
++		struct tee_param *p = params + n;
++		const union rpc_tee_param *rtp = rp->params + n;
++		u32 attr = TYPE_GET(rp->params_type, n);
++
++		switch (attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(&p->u, 0, sizeof(p->u));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			p->u.value.a = rtp->value.a;
++			p->u.value.b = rtp->value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			p->u.memref.size = rtp->memref.size;
++			break;
++
++		default:
++			return -EINVAL;
++		}
++	}
++	return 0;
++}
++
++static int mbedtee_param_encode(struct rpc_param *rp,
++	size_t num_params, const struct tee_param *params)
++{
++	size_t n;
++#define TYPE_SET(t, i) (((uint32_t)(t) & 0xF) << ((i)*4))
++
++	rp->params_type = TEE_IOCTL_PARAM_ATTR_TYPE_NONE;
++
++	for (n = 0; n < num_params; n++) {
++		const struct tee_param *p = params + n;
++		union rpc_tee_param *rtp = rp->params + n;
++
++		rp->params_type |= TYPE_SET(p->attr, n);
++
++		switch (p->attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(rtp, 0, sizeof(*rtp));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			rtp->value.a = p->u.value.a;
++			rtp->value.b = p->u.value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			if (p->u.memref.shm)
++				rtp->memref.id = p->u.memref.shm->sec_world_id;
++			else
++				rtp->memref.id = 0; /* invalid-id @ mbedtee */
++			rtp->memref.size = p->u.memref.size;
++			rtp->memref.offset = p->u.memref.shm_offs;
++			break;
++		default:
++			return -EINVAL;
++		}
++	}
++
++	return 0;
++}
++
++static void mbedtee_errno_origin(
++	__u32 *errno, __u32 *origin)
++{
++	switch (*errno) {
++	case -ENOMEM:
++		*errno = TEEC_ERROR_OUT_OF_MEMORY;
++		break;
++	case -ESRCH:
++		*origin = TEEC_ORIGIN_TEE;
++		*errno = TEEC_ERROR_TARGET_DEAD;
++		break;
++	default:
++		break;
++	}
++}
++
++static struct mbedtee_session *mbedtee_session_of(
++	struct mbedtee_context_data *ctxdata,
++	u32 session_id)
++{
++	struct mbedtee_session *sess, *ret = NULL;
++
++	mutex_lock(&ctxdata->mutex);
++	list_for_each_entry(sess, &ctxdata->sess_list, list_node)
++		if (sess->session_id == session_id) {
++			ret = sess;
++			break;
++		}
++	mutex_unlock(&ctxdata->mutex);
++	return ret;
++}
++
++int mbedtee_open_session(struct tee_context *ctx,
++			   struct tee_ioctl_open_session_arg *arg,
++			   struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret != 0) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	sess = kzalloc(sizeof(*sess), GFP_KERNEL);
++	if (sess == NULL) {
++		mbedtee_rpc_free(rpc);
++		return -ENOMEM;
++	}
++
++	memcpy(rp->uuid, arg->uuid, sizeof(arg->uuid));
++	memcpy(rp->clnt_uuid, arg->clnt_uuid, sizeof(arg->clnt_uuid));
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_rpc_yieldcall(RPC_OPEN_SESSION, rpc, false);
++
++	dev_dbg(clnt->dev, "open session ret %d\n", ret);
++
++	if (ret == 0) {
++		sess->session_id = rp->session_id;
++		mutex_lock(&ctxdata->mutex);
++		list_add(&sess->list_node, &ctxdata->sess_list);
++		mutex_unlock(&ctxdata->mutex);
++
++		mbedtee_param_decode(param, arg->num_params, rp);
++	} else {
++		kfree(sess);
++	}
++
++	arg->session = rp->session_id;
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg,
++	struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *sess;
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++
++	sess = mbedtee_session_of(ctxdata, arg->session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = arg->session;
++	rp->cmd_id = arg->func;
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	ret = mbedtee_rpc_yieldcall(RPC_INVOKE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "invoke session ret %d\n", ret);
++
++	mbedtee_param_decode(param, arg->num_params, rp);
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CLOSE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "close session ret %d\n", ret);
++
++	mutex_lock(&ctxdata->mutex);
++	list_del(&sess->list_node);
++	kfree(sess);
++	mutex_unlock(&ctxdata->mutex);
++
++	mbedtee_rpc_free(rpc);
++
++	/*
++	 * ESRCH means the session already been closed in
++	 * mbedtee, so REE return success for this case
++	 */
++	return (ret == -ESRCH) ? 0 : ret;
++}
++
++int mbedtee_cancel_req(struct tee_context *ctx,
++	u32 cancel_id, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_session *sess = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(int));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	*(int *)rpc->data = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CANCEL, rpc, false);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start)
++{
++	int ret = -1, i = 0, j = 0;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++	unsigned long *pagearray = NULL;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	size_t pagearray_sz = 0, multiple = PAGE_SIZE / TEE_PAGE_SIZE;
++
++	dev_dbg(clnt->dev, "nr_pages %d @ %d\n", (int)nr_pages, shm->id);
++
++	BUILD_BUG_ON(multiple == 0);
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++
++	pagearray_sz = DIV_ROUND_UP(nr_pages * sizeof(long) * multiple, PAGE_SIZE);
++	pagearray = alloc_pages_exact(pagearray_sz, GFP_KERNEL);
++	if (pagearray == NULL) {
++		ret = -ENOMEM;
++		goto out;
++	}
++
++	for (i = 0; i < nr_pages; i++) {
++		for (j = 0; j < multiple; j++)
++			pagearray[i * multiple + j] = TEE_PAGE_SIZE * j + \
++				page_to_phys(pages[i]);
++	}
++
++	memref->size = tee_shm_get_size(shm);
++	memref->offset = tee_shm_get_page_offset(shm);
++	memref->pages = mbedtee_virt_to_phys(pagearray);
++	memref->cnt = nr_pages * multiple;
++
++	ret = mbedtee_rpc_yieldcall(RPC_REGISTER_SHM, rpc, false);
++
++	if (ret == 0)
++		shm->sec_world_id = memref->id;
++
++	free_pages_exact(pagearray, pagearray_sz);
++
++out:
++	mbedtee_rpc_free(rpc);
++	return ret;
++}
++
++int mbedtee_shm_unregister(struct tee_context *ctx,
++	struct tee_shm *shm)
++{
++	int ret = -1;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++	memref->id = shm->sec_world_id;
++
++	ret = mbedtee_rpc_yieldcall(RPC_UNREGISTER_SHM, rpc, true);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/rpc-callee.c linux-6.13-rc5/drivers/tee/mbedtee/rpc-callee.c
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/rpc-callee.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/rpc-callee.c	2024-12-30 17:40:23.908610004 +0800
+@@ -0,0 +1,299 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ * Callees for TEE->REE RPC
++ */
++#include <linux/slab.h>
++#include <linux/module.h>
++#include <linux/io.h>
++#include <linux/printk.h>
++#include <asm/smp.h>
++#include <asm/cacheflush.h>
++#include <asm/hardirq.h>
++#include <linux/delay.h>
++#include <linux/highmem.h>
++
++#include <rpc/rpc.h>
++
++#include "mbedtee_drv.h"
++
++static void *t2r_shm = NULL;
++static unsigned long t2r_shm_phys = 0;
++static struct rpc_ringbuf *t2r_ring = NULL;
++static unsigned int t2r_ring_sz = 0;
++static unsigned int t2r_ring_rd = 0;
++static unsigned char __rpc_data[PAGE_SIZE] = {0};
++static rpc_func_t __rpc_callee_funcs[RPC_REENR] = {NULL};
++
++static DEFINE_SPINLOCK(__rpc_lock);
++
++struct mbedtee_rpc_work {
++	pid_t waiter;
++	int unfinish;
++	void *data;
++	unsigned int size;
++	rpc_func_t func;
++	struct work_struct work;
++};
++
++static inline size_t mbedtee_rpc_available_size(void)
++{
++	unsigned int wr = 0;
++	unsigned int rd = t2r_ring_rd;
++	unsigned int shm_size = t2r_ring_sz;
++
++	wr = t2r_ring->wr;
++	smp_rmb();
++
++	if (wr > shm_size)
++		return 0;
++
++	if (wr >= rd)
++		return wr - rd;
++	else
++		return shm_size + wr - rd;
++}
++
++static inline void mbedtee_rpc_read(void *data, size_t size)
++{
++	unsigned int remain = 0;
++	unsigned int shm_size = t2r_ring_sz;
++	unsigned int rd = t2r_ring_rd;
++	struct rpc_ringbuf *shm = t2r_ring;
++
++	smp_wmb();
++	if (rd + size <= shm_size) {
++		mbedtee_invalidate_cache(&shm->mem[rd], size);
++		memcpy(data, &shm->mem[rd], size);
++		rd += size;
++	} else {
++		remain = rd + size - shm_size;
++		mbedtee_invalidate_cache(&shm->mem[rd], size - remain);
++		memcpy(data, &shm->mem[rd], size - remain);
++		mbedtee_invalidate_cache(&shm->mem[0], remain);
++		memcpy((unsigned char *)data + size - remain,
++				&shm->mem[0], remain);
++		rd = remain;
++	}
++
++	shm->rd = t2r_ring_rd = rd;
++
++	smp_rmb();
++}
++
++static struct mbedtee_rpc_work *mbedtee_rpc_pick_next(
++	struct mbedtee_rpc_work *c)
++{
++	unsigned long retry = 0;
++	struct rpc_cmd cmd = {0};
++	rpc_func_t func = NULL;
++
++	/* handle the last unfinished rpc */
++	if (c->unfinish) {
++		if (mbedtee_rpc_available_size() < c->size)
++			return NULL;
++		c->unfinish = false;
++		mbedtee_rpc_read((void *)c->data, c->size);
++		return c;
++	}
++
++	if (mbedtee_rpc_available_size() < sizeof(cmd))
++		return NULL;
++
++	mbedtee_rpc_read(&cmd, sizeof(cmd));
++
++	if (cmd.id >= RPC_REENR)
++		return NULL;
++
++	func = __rpc_callee_funcs[cmd.id];
++	if (func == NULL) {
++		pr_emerg("rpc unregister %d ??\n", cmd.id);
++		return NULL;
++	}
++
++	if (cmd.waiter == 0) {
++ 		/* async rpc notification from peer */
++		while (mbedtee_rpc_available_size() < cmd.size) {
++			if (++retry % 1000 == 0)
++				pr_emerg("rpc retrying for %d func %d\n", cmd.size, cmd.id);
++			if (retry == 5000) {
++				/* mark as unfinished rpc */
++				c->unfinish = true;
++				return NULL;
++			}
++			udelay(5);
++		}
++		mbedtee_rpc_read(c->data, cmd.size);
++	} else {
++		if (cmd.shm == 0) {
++			pr_emerg("rpc cmd.shm error ??\n");
++			return NULL;
++		}
++
++		/* sync rpc notification from peer */
++		c = kmalloc(sizeof(*c), GFP_ATOMIC);
++		c->data = t2r_shm + (cmd.shm - t2r_shm_phys);
++	}
++
++	c->func = func;
++	c->waiter = cmd.waiter;
++	c->size = cmd.size;
++
++	return c;
++}
++
++static void rpc_routine(struct work_struct *w)
++{
++	struct mbedtee_rpc_work *c = NULL;
++
++	c = container_of(w, struct mbedtee_rpc_work, work);
++
++	c->func(c->data, c->size);
++
++	mbedtee_flush_cache(c->data, c->size);
++
++	mbedtee_rpc_fastcall(RPC_COMPLETE_TEE, c->waiter, 0, 0);
++	kfree(c);
++}
++
++extern void mbedtee_rpc_isr(void)
++{
++	unsigned long flags = 0, retry = 0;
++	struct mbedtee_rpc_work rw = {0}, *c = &rw;
++	struct rpc_ringbuf *ring = t2r_ring;
++
++	if (!ring || (t2r_ring_rd == ring->wr))
++		return;
++
++	c->data = (void *)__rpc_data;
++	spin_lock_irqsave(&__rpc_lock, flags);
++	while (t2r_ring_rd != ring->wr) {
++		if ((c = mbedtee_rpc_pick_next(&rw)) == NULL) {
++			if (++retry == 5000)
++				break;
++			continue;
++		}
++
++		/* no peer is waiting, it's asynchronous rpc */
++		if (c->waiter == 0) {
++			c->func(c->data, c->size);
++		} else {
++			/* peer is waiting, it's synchronous rpc */
++			INIT_WORK(&c->work, rpc_routine);
++			queue_work_on(smp_processor_id(), system_highpri_wq, &c->work);
++		}
++	}
++	spin_unlock_irqrestore(&__rpc_lock, flags);
++
++	if (retry)
++		pr_emerg("retry %ld\n", retry);
++}
++
++static struct rpc_cmd *__mbedtee_rpc_get_cmd(
++	void *data, size_t size)
++{
++	unsigned long cmd_phy = 0;
++
++	memcpy(&cmd_phy, data, sizeof(cmd_phy));
++
++	return phys_to_virt(cmd_phy);
++}
++
++/*
++ * Internal RPC instance to complete the rpc call
++ */
++static void mbedtee_rpc_complete(void *data, size_t size)
++{
++	struct rpc_cmd *cmd = __mbedtee_rpc_get_cmd(data, size);
++
++	if (!cmd || !cmd->waiter)
++		return;
++
++	smp_rmb();
++	if (!cmd->interrupted)
++		complete((void *)cmd->waiter);
++	else {
++		struct page *p = virt_to_page(cmd);
++		kunmap(p);
++		put_page(p);
++	}
++}
++
++static void mbedtee_ree_time(void *data, size_t size)
++{
++	struct timespec64 *ts = (void *)data;
++
++	ktime_get_real_ts64(ts);
++}
++
++static void mbedtee_reefs_supp(void *data, size_t size)
++{
++	mbedtee_supp_handler(clnt, SUPP_REEFS, data, size);
++}
++
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func)
++{
++	if (id >= RPC_REENR || !func)
++		return -EINVAL;
++
++	__rpc_callee_funcs[id] = func;
++
++	return 0;
++}
++EXPORT_SYMBOL(mbedtee_register_rpc);
++
++void mbedtee_unregister_rpc(unsigned int id)
++{
++	if (id >= RPC_REENR)
++		return;
++
++	__rpc_callee_funcs[id] = NULL;
++}
++EXPORT_SYMBOL(mbedtee_unregister_rpc);
++
++int mbedtee_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-t2r-shm", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	t2r_shm_phys = of_read_ulong(range, naddr);
++	t2r_shm = ioremap(t2r_shm_phys,
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_shm)
++		t2r_shm = phys_to_virt(t2r_shm_phys);
++
++	pr_info("rpc-t2r-shm %lx\n", t2r_shm_phys);
++
++	range = of_get_property(dn, "rpc-t2r-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("rpc-t2r-ring %lx\n", of_read_ulong(range, naddr));
++
++	t2r_ring_sz = of_read_ulong(range + naddr, nsize) -
++			sizeof(struct rpc_ringbuf);
++
++	t2r_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_ring)
++		t2r_ring = phys_to_virt(of_read_ulong(range, naddr));
++
++	mbedtee_register_rpc(RPC_REEFS, mbedtee_reefs_supp);
++	mbedtee_register_rpc(RPC_REETIME, mbedtee_ree_time);
++	mbedtee_register_rpc(RPC_COMPLETE_REE, mbedtee_rpc_complete);
++
++	return 0;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/rpc-caller-arm.c linux-6.13-rc5/drivers/tee/mbedtee/rpc-caller-arm.c
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/rpc-caller-arm.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/rpc-caller-arm.c	2024-12-30 17:40:23.908610004 +0800
+@@ -0,0 +1,98 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * ARM RPC calls to TEE - relies on SMC
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static inline long trigger_smc(unsigned long rpc)
++{
++	long ret = 0;
++
++#ifdef CONFIG_ARM
++	register long r0 asm ("r0") = rpc;
++	smp_wmb();
++	asm volatile(".arch_extension sec\n"
++				"smc 0x0" : "=r" (ret) : "r" (r0): "memory", "cc");
++#endif
++
++#ifdef CONFIG_ARM64
++	register long x0 asm ("x0") = rpc;
++	smp_wmb();
++	asm volatile("smc 0x0" : "=r" (ret) : "r" (x0) : "memory", "cc");
++#endif
++
++	return ret;
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret)
++		return ret;
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	static long buff[CONFIG_NR_CPUS][((sizeof(struct rpc_cmd)\
++		/ sizeof(long)) + 4)] __attribute__ ((aligned (64))) = {0};
++	struct rpc_cmd *rpc = NULL;
++	unsigned long flags = 0;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	local_irq_save(flags);
++
++	rpc = (struct rpc_cmd *)buff[smp_processor_id()];
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret == 0)
++		ret = rpc->ret;
++
++	local_irq_restore(flags);
++
++	return ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/rpc-caller-riscv.c linux-6.13-rc5/drivers/tee/mbedtee/rpc-caller-riscv.c
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/rpc-caller-riscv.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/rpc-caller-riscv.c	2024-12-30 17:40:23.908610004 +0800
+@@ -0,0 +1,234 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RISCV RPC calls to TEE - relies on IPI (sswi)
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static DEFINE_SPINLOCK(rpc_lock);
++static struct rpc_ringbuf *r2t_ring = NULL;
++static unsigned int r2t_ring_sz = 0;
++static void *sswi_base = NULL;
++
++static int r2t_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-r2t-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize)) {
++		pr_info("lack of rpc-r2t-ring\n");
++		return ret;
++	}
++
++	pr_info("rpc-r2t-ring %lx\n", of_read_ulong(range, naddr));
++
++	r2t_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	r2t_ring_sz = of_read_ulong(range + naddr, nsize) -
++				sizeof(struct rpc_ringbuf);
++
++	dn = of_find_compatible_node(NULL, NULL, "riscv,aclint-sswi");
++	if (!dn) {
++		pr_info("lack of riscv,aclint-sswi\n");
++		return ret;
++	}
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "reg", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("riscv,aclint-sswi %lx\n", of_read_ulong(range, naddr));
++
++	sswi_base = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	return 0;
++}
++
++/*
++ * check if the remain ring-buff is
++ * enough or not for current call
++ */
++static int rpc_ring_enough(unsigned int size)
++{
++	unsigned int wr = 0, rd = 0;
++	unsigned int remain = 0,ringsz = r2t_ring_sz;
++	struct rpc_ringbuf *shm = r2t_ring;
++
++	wr = shm->wr;
++	rd = shm->rd;
++	smp_rmb();
++
++	if ((rd > ringsz) || (wr > ringsz))
++		return false;
++
++	if (rd <= wr)
++		remain = ringsz + rd - wr;
++	else
++		remain = rd - wr;
++
++	return remain >= size;
++}
++
++/*
++ * copy into the ring-buff,
++ * and update the write ptr
++ */
++static void rpc_ring_write(void *data, unsigned int size)
++{
++	struct rpc_ringbuf *shm = r2t_ring;
++	unsigned int remain = 0, ringsz = r2t_ring_sz;
++	static unsigned int wr = 0;
++
++	if (wr + size > ringsz) {
++		remain = wr + size - ringsz;
++		memcpy(&shm->mem[wr], data, size - remain);
++		mbedtee_flush_cache(&shm->mem[wr], size - remain);
++		memcpy(&shm->mem[0], data + size - remain, remain);
++		mbedtee_flush_cache(&shm->mem[0], remain);
++		wr = remain;
++	} else {
++		memcpy(&shm->mem[wr], data, size);
++		mbedtee_flush_cache(&shm->mem[wr], size);
++		wr += size;
++	}
++
++	shm->wr = wr;
++
++	smp_mb();
++}
++
++static void trigger_sswi(void)
++{
++	iowrite32(1, (int *)sswi_base + 0);
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	long buff[((sizeof(struct rpc_cmd)/sizeof(long)) + 4)] = {0};
++	struct rpc_cmd *rpc = (void *)buff;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	/* 3 args */
++	rpc->size = 3 * sizeof(long);
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	ret = wait_for_completion_interruptible(&c);
++	if (ret)
++		return ret;
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/shm_pool.c linux-6.13-rc5/drivers/tee/mbedtee/shm_pool.c
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/shm_pool.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/shm_pool.c	2024-12-30 17:40:23.908610004 +0800
+@@ -0,0 +1,86 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2017, EPAM Systems
++ */
++#include <linux/device.h>
++#include <linux/dma-buf.h>
++#include <linux/genalloc.h>
++#include <linux/slab.h>
++
++#include "mbedtee_drv.h"
++
++static int pool_op_alloc(struct tee_shm_pool *pool,
++			 struct tee_shm *shm, size_t size, size_t align)
++{
++	unsigned int order = get_order(size);
++	struct page *page;
++	int rc = 0;
++
++	page = alloc_pages(GFP_KERNEL | __GFP_ZERO, order);
++	if (!page)
++		return -ENOMEM;
++
++	shm->kaddr = page_address(page);
++	shm->paddr = page_to_phys(page);
++	shm->size = PAGE_SIZE << order;
++
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield) {
++		unsigned int nr_pages = 1 << order, i;
++		struct page **pages;
++
++		pages = kcalloc(nr_pages, sizeof(pages), GFP_KERNEL);
++		if (!pages)
++			return -ENOMEM;
++
++		for (i = 0; i < nr_pages; i++) {
++			pages[i] = page;
++			page++;
++		}
++
++		rc = mbedtee_shm_register(shm->ctx, shm, pages, nr_pages,
++					(unsigned long)shm->kaddr);
++		kfree(pages);
++	}
++
++	return rc;
++}
++
++static void pool_op_free(struct tee_shm_pool *pool,
++			 struct tee_shm *shm)
++{
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield)
++		mbedtee_shm_unregister(shm->ctx, shm);
++
++	free_pages((unsigned long)shm->kaddr, get_order(shm->size));
++	shm->kaddr = NULL;
++}
++
++static void pool_op_destroy_pool(struct tee_shm_pool *pool)
++{
++	kfree(pool);
++}
++
++static const struct tee_shm_pool_ops pool_ops = {
++	.alloc = pool_op_alloc,
++	.free = pool_op_free,
++	.destroy_pool = pool_op_destroy_pool,
++};
++
++/**
++ * mbedtee_shm_pool_alloc_pages() - create page-based allocator pool
++ *
++ * This pool is used when MBEDTEE supports dymanic SHM. In this case
++ * command buffers and such are allocated from kernel's own memory.
++ */
++struct tee_shm_pool *mbedtee_shm_pool_alloc_pages(void)
++{
++	struct tee_shm_pool *pool = kzalloc(sizeof(*pool), GFP_KERNEL);
++
++	if (!pool)
++		return ERR_PTR(-ENOMEM);
++
++	pool->ops = &pool_ops;
++
++	return pool;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/shm_pool.h linux-6.13-rc5/drivers/tee/mbedtee/shm_pool.h
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/shm_pool.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/shm_pool.h	2024-12-30 17:40:23.909610004 +0800
+@@ -0,0 +1,14 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2016, EPAM Systems
++ */
++
++#ifndef SHM_POOL_H
++#define SHM_POOL_H
++
++#include <linux/tee_drv.h>
++
++struct tee_shm_pool *mbedtee_shm_pool_alloc_pages(void);
++
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/mbedtee/supp.c linux-6.13-rc5/drivers/tee/mbedtee/supp.c
+--- linux-6.13-rc5-ori/drivers/tee/mbedtee/supp.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/mbedtee/supp.c	2024-12-30 17:40:23.909610004 +0800
+@@ -0,0 +1,210 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ */
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/uaccess.h>
++#include <linux/highmem.h>
++#include <asm/cacheflush.h>
++
++#include "mbedtee_drv.h"
++
++struct mbedtee_supp_req {
++	int ret;
++	u32 func;
++
++	struct list_head node;
++
++	struct tee_shm *shm;
++	void *data;
++	size_t size;
++
++	struct completion c;
++};
++
++void mbedtee_supp_init(struct mbedtee_supp *supp)
++{
++	memset(supp, 0, sizeof(*supp));
++	mutex_init(&supp->mutex);
++	init_completion(&supp->reqs_c);
++	INIT_LIST_HEAD(&supp->reqs);
++}
++
++void mbedtee_supp_uninit(struct mbedtee_supp *supp)
++{
++	mutex_destroy(&supp->mutex);
++}
++
++void mbedtee_supp_release(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *r, *n;
++
++	mutex_lock(&supp->mutex);
++
++	list_for_each_entry_safe(r, n, &supp->reqs, node) {
++		list_del(&r->node);
++		r->ret = -ERESTARTSYS;
++		complete(&r->c);
++	}
++
++	supp->ctx = NULL;
++	supp->req = NULL;
++
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_enqueue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_add_tail(&req->node, &supp->reqs);
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_dequeue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_del(&req->node);
++	mutex_unlock(&supp->mutex);
++}
++
++/*
++ * receive the request from mbedtee,
++ * then push it to mbedtee_supp
++ */
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size)
++{
++	int ret = -1;
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = kzalloc(sizeof(*req), GFP_KERNEL);
++
++	if (req == NULL)
++		return -ENOMEM;
++
++	init_completion(&req->c);
++	req->func = func;
++	req->data = data;
++	req->size = size;
++
++	supp_enqueue_req(supp, req);
++
++	/* wakeup the mbedtee_supp daemon to handle this request */
++	complete(&supp->reqs_c);
++
++	if (wait_for_completion_interruptible(&req->c)) {
++		req->ret = -ERESTARTSYS;
++		supp_dequeue_req(supp, req);
++	}
++
++	ret = req->ret;
++	kfree(req);
++	return ret;
++}
++
++static struct mbedtee_supp_req *supp_pop_req(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *req;
++
++	mutex_lock(&supp->mutex);
++
++	/*
++	 * last request not finishs
++	 */
++	if (supp->req != NULL) {
++		req = ERR_PTR(-EINVAL);
++		goto out;
++	}
++
++	req = list_first_entry_or_null(&supp->reqs,
++			struct mbedtee_supp_req, node);
++
++	if (req) {
++		list_del(&req->node);
++		supp->req = req;
++	}
++
++out:
++	mutex_unlock(&supp->mutex);
++	return req;
++}
++
++/*
++ * receive request for mbedtee_supp
++ */
++int mbedtee_supp_recv(struct tee_context *ctx,
++	u32 *func, u32 *num_params, struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = NULL;
++	struct mbedtee_context_data *d = ctx->data;
++	struct tee_shm *shm = param->u.memref.shm;
++
++	if (*num_params != 1)
++		return -EINVAL;
++
++	if ((tee_param_is_memref(param) != true) ||
++		(param->u.memref.shm == NULL))
++		return -EINVAL;
++
++	d->is_supp_ctx = true;
++
++	tee_shm_put(shm);
++
++	while (true) {
++		req = supp_pop_req(supp);
++		if (IS_ERR(req))
++			return PTR_ERR(req);
++
++		if (req != NULL)
++			break;
++
++		if (wait_for_completion_interruptible(&supp->reqs_c))
++			return -ERESTARTSYS;
++	}
++
++	if (req->size > param->u.memref.size)
++		return -EOVERFLOW;
++
++	*func = req->func;
++	req->shm = shm;
++
++	memcpy(shm->kaddr, req->data, req->size);
++	param->u.memref.size = req->size;
++
++	return 0;
++}
++
++/*
++ * mbedtee_supp send result to mbedtee_supp_handler()
++ */
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = supp->req;
++
++	if (IS_ERR_OR_NULL(req))
++		return PTR_ERR(req);
++
++	if (req->size < param->u.memref.size)
++		ret = -EOVERFLOW;
++
++	req->ret = ret;
++	memcpy(req->data, req->shm->kaddr, param->u.memref.size);
++
++	mutex_lock(&supp->mutex);
++	supp->req = NULL;
++	mutex_unlock(&supp->mutex);
++
++	/* wakeup mbedtee_supp_handler() */
++	complete(&req->c);
++
++	return 0;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tee/tee_core.c linux-6.13-rc5/drivers/tee/tee_core.c
+--- linux-6.13-rc5-ori/drivers/tee/tee_core.c	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/drivers/tee/tee_core.c	2024-12-30 17:40:23.909610004 +0800
+@@ -575,8 +575,10 @@ static int tee_ioctl_invoke(struct tee_c
+ 			return -ENOMEM;
+ 		uparams = uarg->params;
+ 		rc = params_from_user(ctx, params, arg.num_params, uparams);
+-		if (rc)
++		if (rc) {
++			pr_emerg("rc %d\n", rc);
+ 			goto out;
++		}
+ 	}
+ 
+ 	rc = ctx->teedev->desc->ops->invoke_func(ctx, &arg, params);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/drivers/tty/serial/amba-pl011.c linux-6.13-rc5/drivers/tty/serial/amba-pl011.c
+--- linux-6.13-rc5-ori/drivers/tty/serial/amba-pl011.c	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/drivers/tty/serial/amba-pl011.c	2024-12-30 17:40:23.909610004 +0800
+@@ -2574,6 +2574,51 @@ static int pl011_early_read(struct conso
+ #define pl011_early_read NULL
+ #endif
+ 
++static __init void __pl011_early_port_setup(struct uart_port *p)
++{
++	int brd_i = 0;
++	int brd_f = 0;
++	int baud = 115200, divisor = 16;
++
++	p->uartclk = 24000000;
++
++	/*
++	 * Disable all
++	 */
++	iowrite32(0, p->membase + UART011_CR);
++
++	/* mask/clear all interrupt */
++	iowrite32(0, p->membase + UART011_IMSC);
++	iowrite32(UART011_OEIC | UART011_BEIC | UART011_PEIC |
++				UART011_FEIC | UART011_RTIC | UART011_RXIC,
++			p->membase + UART011_ICR);
++
++	/* Baud rate divisor
++	 *	BAUDDIV = (FUARTCLK/ {16 * Baud rate})
++	 *  fractional part, m = integer((x * 64) + 0.5)
++	 */
++	brd_i = p->uartclk * 64 / (baud * divisor);
++	brd_f = brd_i & 0x3F;
++	brd_i >>= 6;
++	iowrite32(brd_i, p->membase + UART011_IBRD);
++	iowrite32(brd_f, p->membase + UART011_FBRD);
++
++	/*
++	 * 8-bit data, 1-bit stop, none-parity, with FIFO
++	 */
++	iowrite32(UART01x_LCRH_WLEN_8 | UART01x_LCRH_FEN,
++				p->membase + UART011_LCRH);
++	iowrite32(UART011_IFLS_RX4_8 | UART011_IFLS_TX4_8,
++				p->membase + UART011_IFLS);
++
++	/*
++	 * Enable UART - TX only
++	 */
++	iowrite32(UART01x_CR_UARTEN | UART011_CR_TXE,
++				p->membase + UART011_CR);
++	iowrite32(UART011_TXIM, p->membase + UART011_IMSC);
++}
++
+ /*
+  * On non-ACPI systems, earlycon is enabled by specifying
+  * "earlycon=pl011,<address>" on the kernel command line.
+@@ -2592,6 +2637,8 @@ static int __init pl011_early_console_se
+ 	if (!device->port.membase)
+ 		return -ENODEV;
+ 
++	__pl011_early_port_setup(&device->port);
++
+ 	device->con->write = pl011_early_write;
+ 	device->con->read = pl011_early_read;
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.13-rc5-ori/include/uapi/linux/tee.h linux-6.13-rc5/include/uapi/linux/tee.h
+--- linux-6.13-rc5-ori/include/uapi/linux/tee.h	2024-12-30 05:15:45.000000000 +0800
++++ linux-6.13-rc5/include/uapi/linux/tee.h	2024-12-30 17:40:23.910610005 +0800
+@@ -58,6 +58,8 @@
+ #define TEE_IMPL_ID_AMDTEE	2
+ #define TEE_IMPL_ID_TSTEE	3
+ 
++#define TEE_IMPL_ID_MBEDTEE	8
++
+ /*
+  * OP-TEE specific capabilities
+  */
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/linux/patches/mbedtee-linux-6.6.68.patch buildroot/linux/patches/mbedtee-linux-6.6.68.patch
--- buildroot-ori/linux/patches/mbedtee-linux-6.6.68.patch	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/linux/patches/mbedtee-linux-6.6.68.patch	2025-05-31 23:12:46.392380055 +0800
@@ -0,0 +1,2149 @@
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/arch/arm/boot/compressed/head.S linux-6.6.68/arch/arm/boot/compressed/head.S
+--- linux-6.6.68-ori/arch/arm/boot/compressed/head.S	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/arch/arm/boot/compressed/head.S	2024-12-30 16:45:09.513525847 +0800
+@@ -309,7 +309,8 @@ not_angel:
+ 1:
+ #endif /* CONFIG_USE_OF */
+ 		/* Determine final kernel image address. */
+-		add	r4, r0, #TEXT_OFFSET
++		ldr	r4, =TEXT_OFFSET
++		add	r4, r0, r4
+ #else
+ 		ldr	r4, =zreladdr
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/arch/arm/kernel/head.S linux-6.6.68/arch/arm/kernel/head.S
+--- linux-6.6.68-ori/arch/arm/kernel/head.S	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/arch/arm/kernel/head.S	2024-12-30 16:45:09.513525847 +0800
+@@ -65,7 +65,8 @@ kernel_sec_end:
+ 	.popsection
+ 
+ 	.macro	pgtbl, rd, phys
+-	add	\rd, \phys, #TEXT_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	add	\rd, \phys, r0
+ 	sub	\rd, \rd, #PG_DIR_SIZE
+ 	.endm
+ 
+@@ -120,7 +121,9 @@ ENTRY(stext)
+ 
+ #ifndef CONFIG_XIP_KERNEL
+ 	adr_l	r8, _text			@ __pa(_text)
+-	sub	r8, r8, #TEXT_OFFSET		@ PHYS_OFFSET
++#	sub	r8, r8, #TEXT_OFFSET	@ PHYS_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	sub	r8, r8, r0				@ PHYS_OFFSET
+ #else
+ 	ldr	r8, =PLAT_PHYS_OFFSET		@ always constant in this case
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/arch/arm/kernel/smp.c linux-6.6.68/arch/arm/kernel/smp.c
+--- linux-6.6.68-ori/arch/arm/kernel/smp.c	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/arch/arm/kernel/smp.c	2024-12-30 16:45:09.513525847 +0800
+@@ -65,20 +65,21 @@ enum ipi_msg_type {
+ 	IPI_CPU_STOP,
+ 	IPI_IRQ_WORK,
+ 	IPI_COMPLETION,
+-	NR_IPI,
+ 	/*
+ 	 * CPU_BACKTRACE is special and not included in NR_IPI
+ 	 * or tracable with trace_ipi_*
+ 	 */
+-	IPI_CPU_BACKTRACE = NR_IPI,
++	IPI_CPU_BACKTRACE,
+ 	/*
+ 	 * SGI8-15 can be reserved by secure firmware, and thus may
+ 	 * not be usable by the kernel. Please keep the above limited
+ 	 * to at most 8 entries.
+ 	 */
++	IPI_TEECALL,
++	NR_IPI,
+ 	MAX_IPI
+ };
+-
++extern void mbedtee_rpc_isr(void);
+ static int ipi_irq_base __read_mostly;
+ static int nr_ipi __read_mostly = NR_IPI;
+ static struct irq_desc *ipi_desc[MAX_IPI] __read_mostly;
+@@ -675,6 +676,11 @@ static void do_handle_IPI(int ipinr)
+ 		printk_deferred_exit();
+ 		break;
+ 
++	/* mbedtee callback */
++	case IPI_TEECALL:
++		mbedtee_rpc_isr();
++		break;
++
+ 	default:
+ 		pr_crit("CPU%u: Unknown IPI message 0x%x\n",
+ 		        cpu, ipinr);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/arch/arm/Makefile linux-6.6.68/arch/arm/Makefile
+--- linux-6.6.68-ori/arch/arm/Makefile	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/arch/arm/Makefile	2024-12-30 16:45:09.514525847 +0800
+@@ -151,7 +151,7 @@ CHECKFLAGS	+= -D__arm__
+ # Note: the 32kB below this value is reserved for use by the kernel
+ # during boot, and this offset is critical to the functioning of
+ # kexec-tools.
+-textofs-y	:= 0x00008000
++textofs-y	:= 0x06008000
+ # RTD1195 has Boot ROM at start of address space
+ textofs-$(CONFIG_ARCH_REALTEK)  := 0x00108000
+ # SA1111 DMA bug: we don't want the kernel to live in precious DMA-able memory
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/arch/arm64/kernel/smp.c linux-6.6.68/arch/arm64/kernel/smp.c
+--- linux-6.6.68-ori/arch/arm64/kernel/smp.c	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/arch/arm64/kernel/smp.c	2024-12-30 16:45:09.514525847 +0800
+@@ -73,6 +73,8 @@ enum ipi_msg_type {
+ 	IPI_TIMER,
+ 	IPI_IRQ_WORK,
+ 	IPI_WAKEUP,
++	IPI_RESERVED, /* 0 ~ 7 for REE */
++	IPI_TEECALL, /* 8 ~ 15 for TEE */
+ 	NR_IPI
+ };
+ 
+@@ -899,6 +901,12 @@ static void do_handle_IPI(int ipinr)
+ 		break;
+ #endif
+ 
++	/* mbedtee RPC callback */
++	case IPI_TEECALL:
++		extern void mbedtee_rpc_isr(void);
++		mbedtee_rpc_isr();
++		break;
++
+ #ifdef CONFIG_ARM64_ACPI_PARKING_PROTOCOL
+ 	case IPI_WAKEUP:
+ 		WARN_ONCE(!acpi_parking_protocol_valid(cpu),
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/arch/riscv/kernel/sbi-ipi.c linux-6.6.68/arch/riscv/kernel/sbi-ipi.c
+--- linux-6.6.68-ori/arch/riscv/kernel/sbi-ipi.c	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/arch/riscv/kernel/sbi-ipi.c	2024-12-30 16:45:09.514525847 +0800
+@@ -15,6 +15,8 @@
+ 
+ static int sbi_ipi_virq;
+ 
++extern void mbedtee_rpc_isr(void);
++
+ static void sbi_ipi_handle(struct irq_desc *desc)
+ {
+ 	struct irq_chip *chip = irq_desc_get_chip(desc);
+@@ -24,6 +26,8 @@ static void sbi_ipi_handle(struct irq_de
+ 	csr_clear(CSR_IP, IE_SIE);
+ 	ipi_mux_process();
+ 
++	mbedtee_rpc_isr();
++
+ 	chained_irq_exit(chip, desc);
+ }
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/firmware/psci/psci.c linux-6.6.68/drivers/firmware/psci/psci.c
+--- linux-6.6.68-ori/drivers/firmware/psci/psci.c	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/drivers/firmware/psci/psci.c	2024-12-30 16:45:09.515525847 +0800
+@@ -269,12 +269,14 @@ static unsigned long psci_migrate_info_u
+ 
+ static void set_conduit(enum arm_smccc_conduit conduit)
+ {
++	extern psci_fn mbedtee_rpc_fastcall;
++
+ 	switch (conduit) {
+ 	case SMCCC_CONDUIT_HVC:
+ 		invoke_psci_fn = __invoke_psci_fn_hvc;
+ 		break;
+ 	case SMCCC_CONDUIT_SMC:
+-		invoke_psci_fn = __invoke_psci_fn_smc;
++		invoke_psci_fn = mbedtee_rpc_fastcall;
+ 		break;
+ 	default:
+ 		WARN(1, "Unexpected PSCI conduit %d\n", conduit);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/irqchip/irq-gic.c linux-6.6.68/drivers/irqchip/irq-gic.c
+--- linux-6.6.68-ori/drivers/irqchip/irq-gic.c	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/drivers/irqchip/irq-gic.c	2024-12-30 16:45:09.515525847 +0800
+@@ -867,12 +867,15 @@ static __init void gic_smp_init(void)
+ 	cpuhp_setup_state_nocalls(CPUHP_AP_IRQ_GIC_STARTING,
+ 				  "irqchip/arm/gic:starting",
+ 				  gic_starting_cpu, NULL);
+-
+-	base_sgi = irq_domain_alloc_irqs(gic_data[0].domain, 8, NUMA_NO_NODE, &sgi_fwspec);
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = irq_domain_alloc_irqs(gic_data[0].domain, 16, NUMA_NO_NODE, &sgi_fwspec);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ #else
+ #define gic_smp_init()		do { } while(0)
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/irqchip/irq-gic-v3.c linux-6.6.68/drivers/irqchip/irq-gic-v3.c
+--- linux-6.6.68-ori/drivers/irqchip/irq-gic-v3.c	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/drivers/irqchip/irq-gic-v3.c	2024-12-30 16:45:09.515525847 +0800
+@@ -1396,11 +1396,15 @@ static void __init gic_smp_init(void)
+ 				  gic_starting_cpu, NULL);
+ 
+ 	/* Register all 8 non-secure SGIs */
+-	base_sgi = irq_domain_alloc_irqs(gic_data.domain, 8, NUMA_NO_NODE, &sgi_fwspec);
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = irq_domain_alloc_irqs(gic_data.domain, 16, NUMA_NO_NODE, &sgi_fwspec);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ 
+ static int gic_set_affinity(struct irq_data *d, const struct cpumask *mask_val,
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/Kconfig linux-6.6.68/drivers/tee/Kconfig
+--- linux-6.6.68-ori/drivers/tee/Kconfig	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/drivers/tee/Kconfig	2024-12-30 16:45:09.516525847 +0800
+@@ -15,5 +15,6 @@ if TEE
+ 
+ source "drivers/tee/optee/Kconfig"
+ source "drivers/tee/amdtee/Kconfig"
++source "drivers/tee/mbedtee/Kconfig"
+ 
+ endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/Makefile linux-6.6.68/drivers/tee/Makefile
+--- linux-6.6.68-ori/drivers/tee/Makefile	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/drivers/tee/Makefile	2024-12-30 16:45:09.516525847 +0800
+@@ -5,3 +5,4 @@ tee-objs += tee_shm.o
+ tee-objs += tee_shm_pool.o
+ obj-$(CONFIG_OPTEE) += optee/
+ obj-$(CONFIG_AMDTEE) += amdtee/
++obj-$(CONFIG_MBEDTEE) += mbedtee/
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/core.c linux-6.6.68/drivers/tee/mbedtee/core.c
+--- linux-6.6.68-ori/drivers/tee/mbedtee/core.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/core.c	2024-12-30 16:45:09.517525847 +0800
+@@ -0,0 +1,253 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#include <linux/errno.h>
++#include <linux/io.h>
++#include <linux/module.h>
++#include <linux/of.h>
++#include <linux/of_platform.h>
++#include <linux/platform_device.h>
++#include <linux/slab.h>
++#include <linux/string.h>
++#include <linux/tee_drv.h>
++#include <linux/types.h>
++#include <linux/uaccess.h>
++#include "mbedtee_drv.h"
++#include "shm_pool.h"
++
++#include "../tee_private.h"
++
++struct mbedtee_clnt __clnt = {0}, *clnt = &__clnt;
++
++static void mbedtee_get_version(struct tee_device *teedev,
++			      struct tee_ioctl_version_data *vers)
++{
++	struct tee_ioctl_version_data v = {
++		.impl_id = TEE_IMPL_ID_MBEDTEE,
++		.impl_caps = 0,
++		.gen_caps = TEE_GEN_CAP_GP | TEE_GEN_CAP_REG_MEM | TEE_GEN_CAP_MEMREF_NULL,
++	};
++
++	*vers = v;
++}
++
++static int mbedtee_open(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *ctxdata;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++
++	ctxdata = kzalloc(sizeof(*ctxdata), GFP_KERNEL);
++	if (!ctxdata)
++		return -ENOMEM;
++
++	mutex_init(&ctxdata->mutex);
++	INIT_LIST_HEAD(&ctxdata->sess_list);
++
++	dev_dbg(clnt->dev, "mbedtee_open\n");
++
++	ctx->data = ctxdata;
++	ctx->cap_memref_null = true;
++
++	return 0;
++}
++
++static void mbedtee_release(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *d = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *s, *n = NULL;
++
++	if (d == NULL)
++		return;
++
++	if (d->is_supp_ctx)
++		mbedtee_supp_release(&clnt->supp);
++	else {
++		list_for_each_entry_safe(s, n, &d->sess_list, list_node) {
++			dev_dbg(clnt->dev, "mbedtee_release %d\n", s->session_id);
++			mbedtee_close_session(ctx, s->session_id);
++		}
++	}
++
++	kfree(d);
++	ctx->data = NULL;
++}
++
++static const struct tee_driver_ops mbedtee_ops = {
++	.get_version = mbedtee_get_version,
++	.open = mbedtee_open,
++	.release = mbedtee_release,
++	.open_session = mbedtee_open_session,
++	.close_session = mbedtee_close_session,
++	.invoke_func = mbedtee_invoke_session,
++	.cancel_req = mbedtee_cancel_req,
++	.supp_recv = mbedtee_supp_recv,
++	.supp_send = mbedtee_supp_send,
++	.shm_register = mbedtee_shm_register,
++	.shm_unregister = mbedtee_shm_unregister,
++};
++
++
++static const struct tee_desc mbedtee_desc = {
++	.name = "mbedtee-clnt",
++	.ops = &mbedtee_ops,
++	.owner = THIS_MODULE,
++};
++
++#if defined(MBEDTEE_NODE_IN_DTS)
++static int mbedtee_remove(struct platform_device *pdev)
++{
++	struct mbedtee_clnt *clnt = platform_get_drvdata(pdev);
++
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++
++	return 0;
++}
++
++static int mbedtee_probe(struct platform_device *pdev)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	dev_info(&pdev->dev, "mbedtee client probing\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		dev_info(&pdev->dev, "mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	dev_info(&pdev->dev, "mbedtee version: 0x%06x\n", version);
++	dev_info(&pdev->dev, "mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &pdev->dev;
++
++	platform_set_drvdata(pdev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client probed\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++
++	return ret;
++}
++
++static const struct of_device_id mbedtee_dt_match[] = {
++	{ .compatible = "mbedtee-clnt" },
++	{},
++};
++
++MODULE_DEVICE_TABLE(of, mbedtee_dt_match);
++
++static struct platform_driver mbedtee_driver = {
++	.probe  = mbedtee_probe,
++	.remove = mbedtee_remove,
++	.driver = {
++		.name = "mbedtee-clnt",
++		.of_match_table = mbedtee_dt_match,
++	},
++};
++module_platform_driver(mbedtee_driver);
++#endif
++
++static void __exit mbedtee_exit(void)
++{
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++}
++
++static int __init mbedtee_init(void)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	pr_info("mbedtee client init\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		pr_info("mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	pr_info("mbedtee version: 0x%06x\n", version);
++	pr_info("mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &teedev->dev;
++
++	dev_set_drvdata(mbedclnt->dev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client initialized\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++	return ret;
++}
++module_init(mbedtee_init);
++module_exit(mbedtee_exit);
++
++MODULE_AUTHOR("Kapa");
++MODULE_DESCRIPTION("MBEDTEE Client");
++MODULE_VERSION("1.0");
++MODULE_LICENSE("GPL v2");
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/Kconfig linux-6.6.68/drivers/tee/mbedtee/Kconfig
+--- linux-6.6.68-ori/drivers/tee/mbedtee/Kconfig	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/Kconfig	2024-12-30 16:45:09.517525847 +0800
+@@ -0,0 +1,8 @@
++# SPDX-License-Identifier: GPL-2.0-only
++# MBED-TEE Trusted Execution Environment Configuration
++config MBEDTEE
++	tristate "MBEDTEE"
++	depends on MMU
++	help
++	  This implements the MBEDTEE Trusted Execution Environment (TEE)
++	  driver.
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/Makefile linux-6.6.68/drivers/tee/mbedtee/Makefile
+--- linux-6.6.68-ori/drivers/tee/mbedtee/Makefile	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/Makefile	2024-12-30 16:45:09.517525847 +0800
+@@ -0,0 +1,13 @@
++# SPDX-License-Identifier: GPL-2.0
++
++ccflags-$(CONFIG_MBEDTEE) += -I$(STAGING_DIR)/usr/include/mbedtee
++
++obj-$(CONFIG_MBEDTEE) += mbedtee.o
++
++mbedtee-y += core.o
++mbedtee-y += supp.o
++mbedtee-y += shm_pool.o
++mbedtee-y += rpc.o rpc-callee.o
++mbedtee-$(CONFIG_ARM) += rpc-caller-arm.o
++mbedtee-$(CONFIG_ARM64) += rpc-caller-arm.o
++mbedtee-$(CONFIG_RISCV) += rpc-caller-riscv.o
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/mbedtee_drv.h linux-6.6.68/drivers/tee/mbedtee/mbedtee_drv.h
+--- linux-6.6.68-ori/drivers/tee/mbedtee/mbedtee_drv.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/mbedtee_drv.h	2024-12-30 16:47:54.533303136 +0800
+@@ -0,0 +1,154 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#ifndef MBEDTEE_DRV_H
++#define MBEDTEE_DRV_H
++
++#include <linux/types.h>
++#include <linux/of.h>
++#include <linux/semaphore.h>
++#include <linux/tee_drv.h>
++#include <linux/syscalls.h>
++#include <asm/cacheflush.h>
++
++#include <rpc/rpc.h>
++#include <rpc/reefs.h>
++
++#include "mbedtee_rpc.h"
++#include "shm_pool.h"
++
++#define TEEC_ERROR_TARGET_DEAD      0xFFFF3024
++#define TEEC_ERROR_OUT_OF_MEMORY    0xFFFF000C
++
++#define TEEC_ORIGIN_COMMS           0x00000002
++#define TEEC_ORIGIN_TEE             0x00000003
++
++#define MBEDTEE_VALID_VERSION(x) ((((x) >> 16) == 1) && \
++	((((x) >> 8) & 0xFF) >= 0) && (((x) & 0xFF) >= 1))
++
++struct mbedtee_supp {
++	struct mutex mutex;
++	struct tee_context *ctx;
++
++	void *req;
++	struct list_head reqs;
++	struct completion reqs_c;
++};
++
++struct mbedtee_clnt {
++	int version;
++	int yield;
++	struct device *dev;
++	struct tee_device *teedev;
++	struct tee_shm_pool *pool;
++	struct mbedtee_supp supp;
++};
++
++struct mbedtee_session {
++	struct list_head list_node;
++	u32 session_id;
++};
++
++struct mbedtee_context_data {
++	int is_supp_ctx;
++	struct mutex mutex;
++	struct list_head sess_list;
++};
++
++typedef struct {
++	uint32_t timeLow;
++	uint16_t timeMid;
++	uint16_t timeHiAndVersion;
++	uint8_t clockSeqAndNode[8];
++} TEEC_UUID;
++
++extern struct mbedtee_clnt *clnt;
++
++#define mbedtee_bswap16(_x) ((__u16)(((_x) >> 8) | (((_x) << 8) & 0xff00)))
++#define mbedtee_bswap32(_x) ((__u32)(((_x) >> 24) | (((_x) >> 8) & 0xff00) | \
++	    (((_x) << 8) & 0xff0000) | (((_x) << 24) & 0xff000000)))
++
++static inline void mbedtee_flush_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM)
++	__cpuc_flush_dcache_area(va, size);
++#endif
++
++#if defined(CONFIG_ARM64)
++	dcache_clean_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* wback & inv */
++	/* ALT_CMO_OP(FLUSH, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline void mbedtee_invalidate_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM64)
++	dcache_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* inv */
++	/* ALT_CMO_OP(INVAL, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline phys_addr_t mbedtee_virt_to_phys(void *va)
++{
++	if (is_vmalloc_or_module_addr(va)) {
++		return page_to_phys(vmalloc_to_page(va)) +
++				    offset_in_page(va);
++	}
++
++	WARN_ON(!virt_addr_valid(va));
++	return virt_to_phys(va);
++}
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size);
++void mbedtee_rpc_free(struct rpc_cmd *rpc);
++
++int mbedtee_open_session(struct tee_context *ctx,
++	struct tee_ioctl_open_session_arg *arg, struct tee_param *param);
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg, struct tee_param *param);
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session);
++
++int mbedtee_cancel_req(struct tee_context *ctx, u32 cancel_id, u32 session);
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start);
++
++int mbedtee_shm_unregister(struct tee_context *ctx, struct tee_shm *shm);
++
++/* TEE->REE RPC */
++int mbedtee_rpc_init(void);
++void mbedtee_rpc_isr(void);
++
++void mbedtee_supp_init(struct mbedtee_supp *supp);
++void mbedtee_supp_uninit(struct mbedtee_supp *supp);
++void mbedtee_supp_release(struct mbedtee_supp *supp);
++int mbedtee_supp_recv(struct tee_context *ctx, u32 *func, u32 *num_params,
++		    struct tee_param *param);
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param);
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size);
++
++/* REE->TEE RPC */
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible);
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2);
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/mbedtee_rpc.h linux-6.6.68/drivers/tee/mbedtee/mbedtee_rpc.h
+--- linux-6.6.68-ori/drivers/tee/mbedtee/mbedtee_rpc.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/mbedtee_rpc.h	2024-12-30 16:45:09.517525847 +0800
+@@ -0,0 +1,30 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ *
++ * Export symbols for other kernel modules
++ */
++#ifndef _MBEDTEE_RPC_H
++#define _MBEDTEE_RPC_H
++
++/*
++ * defines the __typeof__ the RPC callee function handler.
++ * @data - shared memory buffer from the RPC peer.
++ * @size - the data size of this shared memory buffer.
++ */
++typedef void (*rpc_func_t)(void *data, size_t size);
++
++/*
++ * register the rpc callee func.
++ * @id - function id of callee
++ * @return - 0 on success. Else negative num.
++ */
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func);
++
++/*
++ * unregister the callee @id.
++ */
++void mbedtee_unregister_rpc(unsigned int id);
++
++#endif
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/rpc.c linux-6.6.68/drivers/tee/mbedtee/rpc.c
+--- linux-6.6.68-ori/drivers/tee/mbedtee/rpc.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/rpc.c	2024-12-30 16:45:09.517525847 +0800
+@@ -0,0 +1,396 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RPC calls to TEE
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size)
++{
++	struct page *p = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	if (sizeof(struct rpc_cmd) + size > PAGE_SIZE)
++		return NULL;
++
++	p = alloc_page(GFP_KERNEL);
++	if (p == NULL)
++		return NULL;
++
++	rpc = kmap(p);
++	rpc->size = size;
++	rpc->ret = -1;
++	rpc->interrupted = 0;
++
++	return rpc;
++}
++EXPORT_SYMBOL(mbedtee_rpc_alloc);
++
++void mbedtee_rpc_free(struct rpc_cmd *rpc)
++{
++	struct page *p = NULL;
++
++	if (rpc && (!rpc->interrupted)) {
++		p = virt_to_page(rpc);
++		kunmap(p);
++		put_page(p);
++	}
++}
++EXPORT_SYMBOL(mbedtee_rpc_free);
++
++static int mbedtee_param_decode(struct tee_param *params,
++	size_t num_params, const struct rpc_param *rp)
++{
++	size_t n;
++#define TYPE_GET(t, i) ((((uint32_t)t) >> ((i)*4)) & 0xF)
++
++	for (n = 0; n < num_params; n++) {
++		struct tee_param *p = params + n;
++		const union rpc_tee_param *rtp = rp->params + n;
++		u32 attr = TYPE_GET(rp->params_type, n);
++
++		switch (attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(&p->u, 0, sizeof(p->u));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			p->u.value.a = rtp->value.a;
++			p->u.value.b = rtp->value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			p->u.memref.size = rtp->memref.size;
++			break;
++
++		default:
++			return -EINVAL;
++		}
++	}
++	return 0;
++}
++
++static int mbedtee_param_encode(struct rpc_param *rp,
++	size_t num_params, const struct tee_param *params)
++{
++	size_t n;
++#define TYPE_SET(t, i) (((uint32_t)(t) & 0xF) << ((i)*4))
++
++	rp->params_type = TEE_IOCTL_PARAM_ATTR_TYPE_NONE;
++
++	for (n = 0; n < num_params; n++) {
++		const struct tee_param *p = params + n;
++		union rpc_tee_param *rtp = rp->params + n;
++
++		rp->params_type |= TYPE_SET(p->attr, n);
++
++		switch (p->attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(rtp, 0, sizeof(*rtp));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			rtp->value.a = p->u.value.a;
++			rtp->value.b = p->u.value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			if (p->u.memref.shm)
++				rtp->memref.id = p->u.memref.shm->sec_world_id;
++			else
++				rtp->memref.id = 0; /* invalid-id @ mbedtee */
++			rtp->memref.size = p->u.memref.size;
++			rtp->memref.offset = p->u.memref.shm_offs;
++			break;
++		default:
++			return -EINVAL;
++		}
++	}
++
++	return 0;
++}
++
++static void mbedtee_errno_origin(
++	__u32 *errno, __u32 *origin)
++{
++	switch (*errno) {
++	case -ENOMEM:
++		*errno = TEEC_ERROR_OUT_OF_MEMORY;
++		break;
++	case -ESRCH:
++		*origin = TEEC_ORIGIN_TEE;
++		*errno = TEEC_ERROR_TARGET_DEAD;
++		break;
++	default:
++		break;
++	}
++}
++
++static struct mbedtee_session *mbedtee_session_of(
++	struct mbedtee_context_data *ctxdata,
++	u32 session_id)
++{
++	struct mbedtee_session *sess, *ret = NULL;
++
++	mutex_lock(&ctxdata->mutex);
++	list_for_each_entry(sess, &ctxdata->sess_list, list_node)
++		if (sess->session_id == session_id) {
++			ret = sess;
++			break;
++		}
++	mutex_unlock(&ctxdata->mutex);
++	return ret;
++}
++
++int mbedtee_open_session(struct tee_context *ctx,
++			   struct tee_ioctl_open_session_arg *arg,
++			   struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret != 0) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	sess = kzalloc(sizeof(*sess), GFP_KERNEL);
++	if (sess == NULL) {
++		mbedtee_rpc_free(rpc);
++		return -ENOMEM;
++	}
++
++	memcpy(rp->uuid, arg->uuid, sizeof(arg->uuid));
++	memcpy(rp->clnt_uuid, arg->clnt_uuid, sizeof(arg->clnt_uuid));
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_rpc_yieldcall(RPC_OPEN_SESSION, rpc, false);
++
++	dev_dbg(clnt->dev, "open session ret %d\n", ret);
++
++	if (ret == 0) {
++		sess->session_id = rp->session_id;
++		mutex_lock(&ctxdata->mutex);
++		list_add(&sess->list_node, &ctxdata->sess_list);
++		mutex_unlock(&ctxdata->mutex);
++
++		mbedtee_param_decode(param, arg->num_params, rp);
++	} else {
++		kfree(sess);
++	}
++
++	arg->session = rp->session_id;
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg,
++	struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *sess;
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++
++	sess = mbedtee_session_of(ctxdata, arg->session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = arg->session;
++	rp->cmd_id = arg->func;
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	ret = mbedtee_rpc_yieldcall(RPC_INVOKE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "invoke session ret %d\n", ret);
++
++	mbedtee_param_decode(param, arg->num_params, rp);
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CLOSE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "close session ret %d\n", ret);
++
++	mutex_lock(&ctxdata->mutex);
++	list_del(&sess->list_node);
++	kfree(sess);
++	mutex_unlock(&ctxdata->mutex);
++
++	mbedtee_rpc_free(rpc);
++
++	/*
++	 * ESRCH means the session already been closed in
++	 * mbedtee, so REE return success for this case
++	 */
++	return (ret == -ESRCH) ? 0 : ret;
++}
++
++int mbedtee_cancel_req(struct tee_context *ctx,
++	u32 cancel_id, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_session *sess = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(int));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	*(int *)rpc->data = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CANCEL, rpc, false);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start)
++{
++	int ret = -1, i = 0, j = 0;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++	unsigned long *pagearray = NULL;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	size_t pagearray_sz = 0, multiple = PAGE_SIZE / TEE_PAGE_SIZE;
++
++	dev_dbg(clnt->dev, "nr_pages %d @ %d\n", (int)nr_pages, shm->id);
++
++	BUILD_BUG_ON(multiple == 0);
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++
++	pagearray_sz = DIV_ROUND_UP(nr_pages * sizeof(long) * multiple, PAGE_SIZE);
++	pagearray = alloc_pages_exact(pagearray_sz, GFP_KERNEL);
++	if (pagearray == NULL) {
++		ret = -ENOMEM;
++		goto out;
++	}
++
++	for (i = 0; i < nr_pages; i++) {
++		for (j = 0; j < multiple; j++)
++			pagearray[i * multiple + j] = TEE_PAGE_SIZE * j + \
++				page_to_phys(pages[i]);
++	}
++
++	memref->size = tee_shm_get_size(shm);
++	memref->offset = tee_shm_get_page_offset(shm);
++	memref->pages = mbedtee_virt_to_phys(pagearray);
++	memref->cnt = nr_pages * multiple;
++
++	ret = mbedtee_rpc_yieldcall(RPC_REGISTER_SHM, rpc, false);
++
++	if (ret == 0)
++		shm->sec_world_id = memref->id;
++
++	free_pages_exact(pagearray, pagearray_sz);
++
++out:
++	mbedtee_rpc_free(rpc);
++	return ret;
++}
++
++int mbedtee_shm_unregister(struct tee_context *ctx,
++	struct tee_shm *shm)
++{
++	int ret = -1;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++	memref->id = shm->sec_world_id;
++
++	ret = mbedtee_rpc_yieldcall(RPC_UNREGISTER_SHM, rpc, true);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/rpc-callee.c linux-6.6.68/drivers/tee/mbedtee/rpc-callee.c
+--- linux-6.6.68-ori/drivers/tee/mbedtee/rpc-callee.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/rpc-callee.c	2024-12-30 16:45:09.517525847 +0800
+@@ -0,0 +1,299 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ * Callees for TEE->REE RPC
++ */
++#include <linux/slab.h>
++#include <linux/module.h>
++#include <linux/io.h>
++#include <linux/printk.h>
++#include <asm/smp.h>
++#include <asm/cacheflush.h>
++#include <asm/hardirq.h>
++#include <linux/delay.h>
++#include <linux/highmem.h>
++
++#include <rpc/rpc.h>
++
++#include "mbedtee_drv.h"
++
++static void *t2r_shm = NULL;
++static unsigned long t2r_shm_phys = 0;
++static struct rpc_ringbuf *t2r_ring = NULL;
++static unsigned int t2r_ring_sz = 0;
++static unsigned int t2r_ring_rd = 0;
++static unsigned char __rpc_data[PAGE_SIZE] = {0};
++static rpc_func_t __rpc_callee_funcs[RPC_REENR] = {NULL};
++
++static DEFINE_SPINLOCK(__rpc_lock);
++
++struct mbedtee_rpc_work {
++	pid_t waiter;
++	int unfinish;
++	void *data;
++	unsigned int size;
++	rpc_func_t func;
++	struct work_struct work;
++};
++
++static inline size_t mbedtee_rpc_available_size(void)
++{
++	unsigned int wr = 0;
++	unsigned int rd = t2r_ring_rd;
++	unsigned int shm_size = t2r_ring_sz;
++
++	wr = t2r_ring->wr;
++	smp_rmb();
++
++	if (wr > shm_size)
++		return 0;
++
++	if (wr >= rd)
++		return wr - rd;
++	else
++		return shm_size + wr - rd;
++}
++
++static inline void mbedtee_rpc_read(void *data, size_t size)
++{
++	unsigned int remain = 0;
++	unsigned int shm_size = t2r_ring_sz;
++	unsigned int rd = t2r_ring_rd;
++	struct rpc_ringbuf *shm = t2r_ring;
++
++	smp_wmb();
++	if (rd + size <= shm_size) {
++		mbedtee_invalidate_cache(&shm->mem[rd], size);
++		memcpy(data, &shm->mem[rd], size);
++		rd += size;
++	} else {
++		remain = rd + size - shm_size;
++		mbedtee_invalidate_cache(&shm->mem[rd], size - remain);
++		memcpy(data, &shm->mem[rd], size - remain);
++		mbedtee_invalidate_cache(&shm->mem[0], remain);
++		memcpy((unsigned char *)data + size - remain,
++				&shm->mem[0], remain);
++		rd = remain;
++	}
++
++	shm->rd = t2r_ring_rd = rd;
++
++	smp_rmb();
++}
++
++static struct mbedtee_rpc_work *mbedtee_rpc_pick_next(
++	struct mbedtee_rpc_work *c)
++{
++	unsigned long retry = 0;
++	struct rpc_cmd cmd = {0};
++	rpc_func_t func = NULL;
++
++	/* handle the last unfinished rpc */
++	if (c->unfinish) {
++		if (mbedtee_rpc_available_size() < c->size)
++			return NULL;
++		c->unfinish = false;
++		mbedtee_rpc_read((void *)c->data, c->size);
++		return c;
++	}
++
++	if (mbedtee_rpc_available_size() < sizeof(cmd))
++		return NULL;
++
++	mbedtee_rpc_read(&cmd, sizeof(cmd));
++
++	if (cmd.id >= RPC_REENR)
++		return NULL;
++
++	func = __rpc_callee_funcs[cmd.id];
++	if (func == NULL) {
++		pr_emerg("rpc unregister %d ??\n", cmd.id);
++		return NULL;
++	}
++
++	if (cmd.waiter == 0) {
++ 		/* async rpc notification from peer */
++		while (mbedtee_rpc_available_size() < cmd.size) {
++			if (++retry % 1000 == 0)
++				pr_emerg("rpc retrying for %d func %d\n", cmd.size, cmd.id);
++			if (retry == 5000) {
++				/* mark as unfinished rpc */
++				c->unfinish = true;
++				return NULL;
++			}
++			udelay(5);
++		}
++		mbedtee_rpc_read(c->data, cmd.size);
++	} else {
++		if (cmd.shm == 0) {
++			pr_emerg("rpc cmd.shm error ??\n");
++			return NULL;
++		}
++
++		/* sync rpc notification from peer */
++		c = kmalloc(sizeof(*c), GFP_ATOMIC);
++		c->data = t2r_shm + (cmd.shm - t2r_shm_phys);
++	}
++
++	c->func = func;
++	c->waiter = cmd.waiter;
++	c->size = cmd.size;
++
++	return c;
++}
++
++static void rpc_routine(struct work_struct *w)
++{
++	struct mbedtee_rpc_work *c = NULL;
++
++	c = container_of(w, struct mbedtee_rpc_work, work);
++
++	c->func(c->data, c->size);
++
++	mbedtee_flush_cache(c->data, c->size);
++
++	mbedtee_rpc_fastcall(RPC_COMPLETE_TEE, c->waiter, 0, 0);
++	kfree(c);
++}
++
++extern void mbedtee_rpc_isr(void)
++{
++	unsigned long flags = 0, retry = 0;
++	struct mbedtee_rpc_work rw = {0}, *c = &rw;
++	struct rpc_ringbuf *ring = t2r_ring;
++
++	if (!ring || (t2r_ring_rd == ring->wr))
++		return;
++
++	c->data = (void *)__rpc_data;
++	spin_lock_irqsave(&__rpc_lock, flags);
++	while (t2r_ring_rd != ring->wr) {
++		if ((c = mbedtee_rpc_pick_next(&rw)) == NULL) {
++			if (++retry == 5000)
++				break;
++			continue;
++		}
++
++		/* no peer is waiting, it's asynchronous rpc */
++		if (c->waiter == 0) {
++			c->func(c->data, c->size);
++		} else {
++			/* peer is waiting, it's synchronous rpc */
++			INIT_WORK(&c->work, rpc_routine);
++			queue_work_on(smp_processor_id(), system_highpri_wq, &c->work);
++		}
++	}
++	spin_unlock_irqrestore(&__rpc_lock, flags);
++
++	if (retry)
++		pr_emerg("retry %ld\n", retry);
++}
++
++static struct rpc_cmd *__mbedtee_rpc_get_cmd(
++	void *data, size_t size)
++{
++	unsigned long cmd_phy = 0;
++
++	memcpy(&cmd_phy, data, sizeof(cmd_phy));
++
++	return phys_to_virt(cmd_phy);
++}
++
++/*
++ * Internal RPC instance to complete the rpc call
++ */
++static void mbedtee_rpc_complete(void *data, size_t size)
++{
++	struct rpc_cmd *cmd = __mbedtee_rpc_get_cmd(data, size);
++
++	if (!cmd || !cmd->waiter)
++		return;
++
++	smp_rmb();
++	if (!cmd->interrupted)
++		complete((void *)cmd->waiter);
++	else {
++		struct page *p = virt_to_page(cmd);
++		kunmap(p);
++		put_page(p);
++	}
++}
++
++static void mbedtee_ree_time(void *data, size_t size)
++{
++	struct timespec64 *ts = (void *)data;
++
++	ktime_get_real_ts64(ts);
++}
++
++static void mbedtee_reefs_supp(void *data, size_t size)
++{
++	mbedtee_supp_handler(clnt, SUPP_REEFS, data, size);
++}
++
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func)
++{
++	if (id >= RPC_REENR || !func)
++		return -EINVAL;
++
++	__rpc_callee_funcs[id] = func;
++
++	return 0;
++}
++EXPORT_SYMBOL(mbedtee_register_rpc);
++
++void mbedtee_unregister_rpc(unsigned int id)
++{
++	if (id >= RPC_REENR)
++		return;
++
++	__rpc_callee_funcs[id] = NULL;
++}
++EXPORT_SYMBOL(mbedtee_unregister_rpc);
++
++int mbedtee_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-t2r-shm", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	t2r_shm_phys = of_read_ulong(range, naddr);
++	t2r_shm = ioremap(t2r_shm_phys,
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_shm)
++		t2r_shm = phys_to_virt(t2r_shm_phys);
++
++	pr_info("rpc-t2r-shm %lx\n", t2r_shm_phys);
++
++	range = of_get_property(dn, "rpc-t2r-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("rpc-t2r-ring %lx\n", of_read_ulong(range, naddr));
++
++	t2r_ring_sz = of_read_ulong(range + naddr, nsize) -
++			sizeof(struct rpc_ringbuf);
++
++	t2r_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_ring)
++		t2r_ring = phys_to_virt(of_read_ulong(range, naddr));
++
++	mbedtee_register_rpc(RPC_REEFS, mbedtee_reefs_supp);
++	mbedtee_register_rpc(RPC_REETIME, mbedtee_ree_time);
++	mbedtee_register_rpc(RPC_COMPLETE_REE, mbedtee_rpc_complete);
++
++	return 0;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/rpc-caller-arm.c linux-6.6.68/drivers/tee/mbedtee/rpc-caller-arm.c
+--- linux-6.6.68-ori/drivers/tee/mbedtee/rpc-caller-arm.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/rpc-caller-arm.c	2024-12-30 16:45:09.518525847 +0800
+@@ -0,0 +1,98 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * ARM RPC calls to TEE - relies on SMC
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static inline long trigger_smc(unsigned long rpc)
++{
++	long ret = 0;
++
++#ifdef CONFIG_ARM
++	register long r0 asm ("r0") = rpc;
++	smp_wmb();
++	asm volatile(".arch_extension sec\n"
++				"smc 0x0" : "=r" (ret) : "r" (r0): "memory", "cc");
++#endif
++
++#ifdef CONFIG_ARM64
++	register long x0 asm ("x0") = rpc;
++	smp_wmb();
++	asm volatile("smc 0x0" : "=r" (ret) : "r" (x0) : "memory", "cc");
++#endif
++
++	return ret;
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret)
++		return ret;
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	static long buff[CONFIG_NR_CPUS][((sizeof(struct rpc_cmd)\
++		/ sizeof(long)) + 4)] __attribute__ ((aligned (64))) = {0};
++	struct rpc_cmd *rpc = NULL;
++	unsigned long flags = 0;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	local_irq_save(flags);
++
++	rpc = (struct rpc_cmd *)buff[smp_processor_id()];
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret == 0)
++		ret = rpc->ret;
++
++	local_irq_restore(flags);
++
++	return ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/rpc-caller-riscv.c linux-6.6.68/drivers/tee/mbedtee/rpc-caller-riscv.c
+--- linux-6.6.68-ori/drivers/tee/mbedtee/rpc-caller-riscv.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/rpc-caller-riscv.c	2024-12-30 16:45:09.518525847 +0800
+@@ -0,0 +1,234 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RISCV RPC calls to TEE - relies on IPI (sswi)
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static DEFINE_SPINLOCK(rpc_lock);
++static struct rpc_ringbuf *r2t_ring = NULL;
++static unsigned int r2t_ring_sz = 0;
++static void *sswi_base = NULL;
++
++static int r2t_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-r2t-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize)) {
++		pr_info("lack of rpc-r2t-ring\n");
++		return ret;
++	}
++
++	pr_info("rpc-r2t-ring %lx\n", of_read_ulong(range, naddr));
++
++	r2t_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	r2t_ring_sz = of_read_ulong(range + naddr, nsize) -
++				sizeof(struct rpc_ringbuf);
++
++	dn = of_find_compatible_node(NULL, NULL, "riscv,aclint-sswi");
++	if (!dn) {
++		pr_info("lack of riscv,aclint-sswi\n");
++		return ret;
++	}
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "reg", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("riscv,aclint-sswi %lx\n", of_read_ulong(range, naddr));
++
++	sswi_base = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	return 0;
++}
++
++/*
++ * check if the remain ring-buff is
++ * enough or not for current call
++ */
++static int rpc_ring_enough(unsigned int size)
++{
++	unsigned int wr = 0, rd = 0;
++	unsigned int remain = 0,ringsz = r2t_ring_sz;
++	struct rpc_ringbuf *shm = r2t_ring;
++
++	wr = shm->wr;
++	rd = shm->rd;
++	smp_rmb();
++
++	if ((rd > ringsz) || (wr > ringsz))
++		return false;
++
++	if (rd <= wr)
++		remain = ringsz + rd - wr;
++	else
++		remain = rd - wr;
++
++	return remain >= size;
++}
++
++/*
++ * copy into the ring-buff,
++ * and update the write ptr
++ */
++static void rpc_ring_write(void *data, unsigned int size)
++{
++	struct rpc_ringbuf *shm = r2t_ring;
++	unsigned int remain = 0, ringsz = r2t_ring_sz;
++	static unsigned int wr = 0;
++
++	if (wr + size > ringsz) {
++		remain = wr + size - ringsz;
++		memcpy(&shm->mem[wr], data, size - remain);
++		mbedtee_flush_cache(&shm->mem[wr], size - remain);
++		memcpy(&shm->mem[0], data + size - remain, remain);
++		mbedtee_flush_cache(&shm->mem[0], remain);
++		wr = remain;
++	} else {
++		memcpy(&shm->mem[wr], data, size);
++		mbedtee_flush_cache(&shm->mem[wr], size);
++		wr += size;
++	}
++
++	shm->wr = wr;
++
++	smp_mb();
++}
++
++static void trigger_sswi(void)
++{
++	iowrite32(1, (int *)sswi_base + 0);
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	long buff[((sizeof(struct rpc_cmd)/sizeof(long)) + 4)] = {0};
++	struct rpc_cmd *rpc = (void *)buff;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	/* 3 args */
++	rpc->size = 3 * sizeof(long);
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	ret = wait_for_completion_interruptible(&c);
++	if (ret)
++		return ret;
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/shm_pool.c linux-6.6.68/drivers/tee/mbedtee/shm_pool.c
+--- linux-6.6.68-ori/drivers/tee/mbedtee/shm_pool.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/shm_pool.c	2024-12-30 16:45:09.518525847 +0800
+@@ -0,0 +1,86 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2017, EPAM Systems
++ */
++#include <linux/device.h>
++#include <linux/dma-buf.h>
++#include <linux/genalloc.h>
++#include <linux/slab.h>
++
++#include "mbedtee_drv.h"
++
++static int pool_op_alloc(struct tee_shm_pool *pool,
++			 struct tee_shm *shm, size_t size, size_t align)
++{
++	unsigned int order = get_order(size);
++	struct page *page;
++	int rc = 0;
++
++	page = alloc_pages(GFP_KERNEL | __GFP_ZERO, order);
++	if (!page)
++		return -ENOMEM;
++
++	shm->kaddr = page_address(page);
++	shm->paddr = page_to_phys(page);
++	shm->size = PAGE_SIZE << order;
++
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield) {
++		unsigned int nr_pages = 1 << order, i;
++		struct page **pages;
++
++		pages = kcalloc(nr_pages, sizeof(pages), GFP_KERNEL);
++		if (!pages)
++			return -ENOMEM;
++
++		for (i = 0; i < nr_pages; i++) {
++			pages[i] = page;
++			page++;
++		}
++
++		rc = mbedtee_shm_register(shm->ctx, shm, pages, nr_pages,
++					(unsigned long)shm->kaddr);
++		kfree(pages);
++	}
++
++	return rc;
++}
++
++static void pool_op_free(struct tee_shm_pool *pool,
++			 struct tee_shm *shm)
++{
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield)
++		mbedtee_shm_unregister(shm->ctx, shm);
++
++	free_pages((unsigned long)shm->kaddr, get_order(shm->size));
++	shm->kaddr = NULL;
++}
++
++static void pool_op_destroy_pool(struct tee_shm_pool *pool)
++{
++	kfree(pool);
++}
++
++static const struct tee_shm_pool_ops pool_ops = {
++	.alloc = pool_op_alloc,
++	.free = pool_op_free,
++	.destroy_pool = pool_op_destroy_pool,
++};
++
++/**
++ * mbedtee_shm_pool_alloc_pages() - create page-based allocator pool
++ *
++ * This pool is used when MBEDTEE supports dymanic SHM. In this case
++ * command buffers and such are allocated from kernel's own memory.
++ */
++struct tee_shm_pool *mbedtee_shm_pool_alloc_pages(void)
++{
++	struct tee_shm_pool *pool = kzalloc(sizeof(*pool), GFP_KERNEL);
++
++	if (!pool)
++		return ERR_PTR(-ENOMEM);
++
++	pool->ops = &pool_ops;
++
++	return pool;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/shm_pool.h linux-6.6.68/drivers/tee/mbedtee/shm_pool.h
+--- linux-6.6.68-ori/drivers/tee/mbedtee/shm_pool.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/shm_pool.h	2024-12-30 16:45:09.518525847 +0800
+@@ -0,0 +1,14 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2016, EPAM Systems
++ */
++
++#ifndef SHM_POOL_H
++#define SHM_POOL_H
++
++#include <linux/tee_drv.h>
++
++struct tee_shm_pool *mbedtee_shm_pool_alloc_pages(void);
++
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/mbedtee/supp.c linux-6.6.68/drivers/tee/mbedtee/supp.c
+--- linux-6.6.68-ori/drivers/tee/mbedtee/supp.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.6.68/drivers/tee/mbedtee/supp.c	2024-12-30 16:45:09.518525847 +0800
+@@ -0,0 +1,210 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ */
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/uaccess.h>
++#include <linux/highmem.h>
++#include <asm/cacheflush.h>
++
++#include "mbedtee_drv.h"
++
++struct mbedtee_supp_req {
++	int ret;
++	u32 func;
++
++	struct list_head node;
++
++	struct tee_shm *shm;
++	void *data;
++	size_t size;
++
++	struct completion c;
++};
++
++void mbedtee_supp_init(struct mbedtee_supp *supp)
++{
++	memset(supp, 0, sizeof(*supp));
++	mutex_init(&supp->mutex);
++	init_completion(&supp->reqs_c);
++	INIT_LIST_HEAD(&supp->reqs);
++}
++
++void mbedtee_supp_uninit(struct mbedtee_supp *supp)
++{
++	mutex_destroy(&supp->mutex);
++}
++
++void mbedtee_supp_release(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *r, *n;
++
++	mutex_lock(&supp->mutex);
++
++	list_for_each_entry_safe(r, n, &supp->reqs, node) {
++		list_del(&r->node);
++		r->ret = -ERESTARTSYS;
++		complete(&r->c);
++	}
++
++	supp->ctx = NULL;
++	supp->req = NULL;
++
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_enqueue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_add_tail(&req->node, &supp->reqs);
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_dequeue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_del(&req->node);
++	mutex_unlock(&supp->mutex);
++}
++
++/*
++ * receive the request from mbedtee,
++ * then push it to mbedtee_supp
++ */
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size)
++{
++	int ret = -1;
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = kzalloc(sizeof(*req), GFP_KERNEL);
++
++	if (req == NULL)
++		return -ENOMEM;
++
++	init_completion(&req->c);
++	req->func = func;
++	req->data = data;
++	req->size = size;
++
++	supp_enqueue_req(supp, req);
++
++	/* wakeup the mbedtee_supp daemon to handle this request */
++	complete(&supp->reqs_c);
++
++	if (wait_for_completion_interruptible(&req->c)) {
++		req->ret = -ERESTARTSYS;
++		supp_dequeue_req(supp, req);
++	}
++
++	ret = req->ret;
++	kfree(req);
++	return ret;
++}
++
++static struct mbedtee_supp_req *supp_pop_req(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *req;
++
++	mutex_lock(&supp->mutex);
++
++	/*
++	 * last request not finishs
++	 */
++	if (supp->req != NULL) {
++		req = ERR_PTR(-EINVAL);
++		goto out;
++	}
++
++	req = list_first_entry_or_null(&supp->reqs,
++			struct mbedtee_supp_req, node);
++
++	if (req) {
++		list_del(&req->node);
++		supp->req = req;
++	}
++
++out:
++	mutex_unlock(&supp->mutex);
++	return req;
++}
++
++/*
++ * receive request for mbedtee_supp
++ */
++int mbedtee_supp_recv(struct tee_context *ctx,
++	u32 *func, u32 *num_params, struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = NULL;
++	struct mbedtee_context_data *d = ctx->data;
++	struct tee_shm *shm = param->u.memref.shm;
++
++	if (*num_params != 1)
++		return -EINVAL;
++
++	if ((tee_param_is_memref(param) != true) ||
++		(param->u.memref.shm == NULL))
++		return -EINVAL;
++
++	d->is_supp_ctx = true;
++
++	tee_shm_put(shm);
++
++	while (true) {
++		req = supp_pop_req(supp);
++		if (IS_ERR(req))
++			return PTR_ERR(req);
++
++		if (req != NULL)
++			break;
++
++		if (wait_for_completion_interruptible(&supp->reqs_c))
++			return -ERESTARTSYS;
++	}
++
++	if (req->size > param->u.memref.size)
++		return -EOVERFLOW;
++
++	*func = req->func;
++	req->shm = shm;
++
++	memcpy(shm->kaddr, req->data, req->size);
++	param->u.memref.size = req->size;
++
++	return 0;
++}
++
++/*
++ * mbedtee_supp send result to mbedtee_supp_handler()
++ */
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = supp->req;
++
++	if (IS_ERR_OR_NULL(req))
++		return PTR_ERR(req);
++
++	if (req->size < param->u.memref.size)
++		ret = -EOVERFLOW;
++
++	req->ret = ret;
++	memcpy(req->data, req->shm->kaddr, param->u.memref.size);
++
++	mutex_lock(&supp->mutex);
++	supp->req = NULL;
++	mutex_unlock(&supp->mutex);
++
++	/* wakeup mbedtee_supp_handler() */
++	complete(&req->c);
++
++	return 0;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tee/tee_core.c linux-6.6.68/drivers/tee/tee_core.c
+--- linux-6.6.68-ori/drivers/tee/tee_core.c	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/drivers/tee/tee_core.c	2024-12-30 16:45:09.518525847 +0800
+@@ -575,8 +575,10 @@ static int tee_ioctl_invoke(struct tee_c
+ 			return -ENOMEM;
+ 		uparams = uarg->params;
+ 		rc = params_from_user(ctx, params, arg.num_params, uparams);
+-		if (rc)
++		if (rc) {
++			pr_emerg("rc %d\n", rc);
+ 			goto out;
++		}
+ 	}
+ 
+ 	rc = ctx->teedev->desc->ops->invoke_func(ctx, &arg, params);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/drivers/tty/serial/amba-pl011.c linux-6.6.68/drivers/tty/serial/amba-pl011.c
+--- linux-6.6.68-ori/drivers/tty/serial/amba-pl011.c	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/drivers/tty/serial/amba-pl011.c	2024-12-30 16:45:09.519525847 +0800
+@@ -2597,6 +2597,51 @@ static int pl011_early_read(struct conso
+ #define pl011_early_read NULL
+ #endif
+ 
++static __init void __pl011_early_port_setup(struct uart_port *p)
++{
++	int brd_i = 0;
++	int brd_f = 0;
++	int baud = 115200, divisor = 16;
++
++	p->uartclk = 24000000;
++
++	/*
++	 * Disable all
++	 */
++	iowrite32(0, p->membase + UART011_CR);
++
++	/* mask/clear all interrupt */
++	iowrite32(0, p->membase + UART011_IMSC);
++	iowrite32(UART011_OEIC | UART011_BEIC | UART011_PEIC |
++				UART011_FEIC | UART011_RTIC | UART011_RXIC,
++			p->membase + UART011_ICR);
++
++	/* Baud rate divisor
++	 *	BAUDDIV = (FUARTCLK/ {16 * Baud rate})
++	 *  fractional part, m = integer((x * 64) + 0.5)
++	 */
++	brd_i = p->uartclk * 64 / (baud * divisor);
++	brd_f = brd_i & 0x3F;
++	brd_i >>= 6;
++	iowrite32(brd_i, p->membase + UART011_IBRD);
++	iowrite32(brd_f, p->membase + UART011_FBRD);
++
++	/*
++	 * 8-bit data, 1-bit stop, none-parity, with FIFO
++	 */
++	iowrite32(UART01x_LCRH_WLEN_8 | UART01x_LCRH_FEN,
++				p->membase + UART011_LCRH);
++	iowrite32(UART011_IFLS_RX4_8 | UART011_IFLS_TX4_8,
++				p->membase + UART011_IFLS);
++
++	/*
++	 * Enable UART - TX only
++	 */
++	iowrite32(UART01x_CR_UARTEN | UART011_CR_TXE,
++				p->membase + UART011_CR);
++	iowrite32(UART011_TXIM, p->membase + UART011_IMSC);
++}
++
+ /*
+  * On non-ACPI systems, earlycon is enabled by specifying
+  * "earlycon=pl011,<address>" on the kernel command line.
+@@ -2615,6 +2660,8 @@ static int __init pl011_early_console_se
+ 	if (!device->port.membase)
+ 		return -ENODEV;
+ 
++	__pl011_early_port_setup(&device->port);
++
+ 	device->con->write = pl011_early_write;
+ 	device->con->read = pl011_early_read;
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.6.68-ori/include/uapi/linux/tee.h linux-6.6.68/include/uapi/linux/tee.h
+--- linux-6.6.68-ori/include/uapi/linux/tee.h	2024-12-27 20:58:58.000000000 +0800
++++ linux-6.6.68/include/uapi/linux/tee.h	2024-12-30 16:45:09.519525847 +0800
+@@ -57,6 +57,8 @@
+ #define TEE_IMPL_ID_OPTEE	1
+ #define TEE_IMPL_ID_AMDTEE	2
+ 
++#define TEE_IMPL_ID_MBEDTEE	8
++
+ /*
+  * OP-TEE specific capabilities
+  */
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/linux/patches/mbedtee-linux-6.9.10.patch-- buildroot/linux/patches/mbedtee-linux-6.9.10.patch--
--- buildroot-ori/linux/patches/mbedtee-linux-6.9.10.patch--	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/linux/patches/mbedtee-linux-6.9.10.patch--	2025-05-31 23:12:46.394381055 +0800
@@ -0,0 +1,2149 @@
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/arch/arm/boot/compressed/head.S linux-6.9.10/arch/arm/boot/compressed/head.S
+--- linux-6.9.10-ori/arch/arm/boot/compressed/head.S	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/arch/arm/boot/compressed/head.S	2024-11-20 17:11:08.674744789 +0800
+@@ -309,7 +309,8 @@ not_angel:
+ 1:
+ #endif /* CONFIG_USE_OF */
+ 		/* Determine final kernel image address. */
+-		add	r4, r0, #TEXT_OFFSET
++		ldr	r4, =TEXT_OFFSET
++		add	r4, r0, r4
+ #else
+ 		ldr	r4, =zreladdr
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/arch/arm/kernel/head.S linux-6.9.10/arch/arm/kernel/head.S
+--- linux-6.9.10-ori/arch/arm/kernel/head.S	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/arch/arm/kernel/head.S	2024-11-20 17:11:08.677744789 +0800
+@@ -65,7 +65,8 @@ kernel_sec_end:
+ 	.popsection
+ 
+ 	.macro	pgtbl, rd, phys
+-	add	\rd, \phys, #TEXT_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	add	\rd, \phys, r0
+ 	sub	\rd, \rd, #PG_DIR_SIZE
+ 	.endm
+ 
+@@ -120,7 +121,9 @@ ENTRY(stext)
+ 
+ #ifndef CONFIG_XIP_KERNEL
+ 	adr_l	r8, _text			@ __pa(_text)
+-	sub	r8, r8, #TEXT_OFFSET		@ PHYS_OFFSET
++#	sub	r8, r8, #TEXT_OFFSET	@ PHYS_OFFSET
++	ldr 	r0, =TEXT_OFFSET
++	sub	r8, r8, r0				@ PHYS_OFFSET
+ #else
+ 	ldr	r8, =PLAT_PHYS_OFFSET		@ always constant in this case
+ #endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/arch/arm/kernel/smp.c linux-6.9.10/arch/arm/kernel/smp.c
+--- linux-6.9.10-ori/arch/arm/kernel/smp.c	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/arch/arm/kernel/smp.c	2024-11-20 17:11:08.681744789 +0800
+@@ -65,20 +65,21 @@ enum ipi_msg_type {
+ 	IPI_CPU_STOP,
+ 	IPI_IRQ_WORK,
+ 	IPI_COMPLETION,
+-	NR_IPI,
+ 	/*
+ 	 * CPU_BACKTRACE is special and not included in NR_IPI
+ 	 * or tracable with trace_ipi_*
+ 	 */
+-	IPI_CPU_BACKTRACE = NR_IPI,
++	IPI_CPU_BACKTRACE,
+ 	/*
+ 	 * SGI8-15 can be reserved by secure firmware, and thus may
+ 	 * not be usable by the kernel. Please keep the above limited
+ 	 * to at most 8 entries.
+ 	 */
++	IPI_TEECALL,
++	NR_IPI,
+ 	MAX_IPI
+ };
+-
++extern void mbedtee_rpc_isr(void);
+ static int ipi_irq_base __read_mostly;
+ static int nr_ipi __read_mostly = NR_IPI;
+ static struct irq_desc *ipi_desc[MAX_IPI] __read_mostly;
+@@ -675,6 +676,11 @@ static void do_handle_IPI(int ipinr)
+ 		printk_deferred_exit();
+ 		break;
+ 
++	/* mbedtee callback */
++	case IPI_TEECALL:
++		mbedtee_rpc_isr();
++		break;
++
+ 	default:
+ 		pr_crit("CPU%u: Unknown IPI message 0x%x\n",
+ 		        cpu, ipinr);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/arch/arm/Makefile linux-6.9.10/arch/arm/Makefile
+--- linux-6.9.10-ori/arch/arm/Makefile	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/arch/arm/Makefile	2024-11-20 17:11:08.683744789 +0800
+@@ -151,7 +151,7 @@ CHECKFLAGS	+= -D__arm__
+ # Note: the 32kB below this value is reserved for use by the kernel
+ # during boot, and this offset is critical to the functioning of
+ # kexec-tools.
+-textofs-y	:= 0x00008000
++textofs-y	:= 0x06008000
+ # RTD1195 has Boot ROM at start of address space
+ textofs-$(CONFIG_ARCH_REALTEK)  := 0x00108000
+ # SA1111 DMA bug: we don't want the kernel to live in precious DMA-able memory
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/arch/arm64/kernel/smp.c linux-6.9.10/arch/arm64/kernel/smp.c
+--- linux-6.9.10-ori/arch/arm64/kernel/smp.c	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/arch/arm64/kernel/smp.c	2024-11-20 17:11:08.686744790 +0800
+@@ -74,6 +74,9 @@ enum ipi_msg_type {
+ 	IPI_CPU_CRASH_STOP,
+ 	IPI_TIMER,
+ 	IPI_IRQ_WORK,
++	IPI_RESERVED1,
++	IPI_RESERVED2, /* 0 ~ 7 for REE */
++	IPI_TEECALL, /* 8 ~ 15 for TEE */
+ 	NR_IPI,
+ 	/*
+ 	 * Any enum >= NR_IPI and < MAX_IPI is special and not tracable
+@@ -923,6 +926,11 @@ static void do_handle_IPI(int ipinr)
+ 		irq_work_run();
+ 		break;
+ #endif
++	/* mbedtee RPC callback */
++	case IPI_TEECALL:
++		extern void mbedtee_rpc_isr(void);
++		mbedtee_rpc_isr();
++		break;
+ 
+ 	case IPI_CPU_BACKTRACE:
+ 		/*
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/arch/riscv/kernel/sbi-ipi.c linux-6.9.10/arch/riscv/kernel/sbi-ipi.c
+--- linux-6.9.10-ori/arch/riscv/kernel/sbi-ipi.c	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/arch/riscv/kernel/sbi-ipi.c	2024-11-20 17:11:08.690744790 +0800
+@@ -15,6 +15,8 @@
+ 
+ static int sbi_ipi_virq;
+ 
++extern void mbedtee_rpc_isr(void);
++
+ static void sbi_ipi_handle(struct irq_desc *desc)
+ {
+ 	struct irq_chip *chip = irq_desc_get_chip(desc);
+@@ -24,6 +26,8 @@ static void sbi_ipi_handle(struct irq_de
+ 	csr_clear(CSR_IP, IE_SIE);
+ 	ipi_mux_process();
+ 
++	mbedtee_rpc_isr();
++
+ 	chained_irq_exit(chip, desc);
+ }
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/firmware/psci/psci.c linux-6.9.10/drivers/firmware/psci/psci.c
+--- linux-6.9.10-ori/drivers/firmware/psci/psci.c	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/drivers/firmware/psci/psci.c	2024-11-20 17:11:08.693744790 +0800
+@@ -269,12 +269,14 @@ static unsigned long psci_migrate_info_u
+ 
+ static void set_conduit(enum arm_smccc_conduit conduit)
+ {
++	extern psci_fn mbedtee_rpc_fastcall;
++
+ 	switch (conduit) {
+ 	case SMCCC_CONDUIT_HVC:
+ 		invoke_psci_fn = __invoke_psci_fn_hvc;
+ 		break;
+ 	case SMCCC_CONDUIT_SMC:
+-		invoke_psci_fn = __invoke_psci_fn_smc;
++		invoke_psci_fn = mbedtee_rpc_fastcall;
+ 		break;
+ 	default:
+ 		WARN(1, "Unexpected PSCI conduit %d\n", conduit);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/irqchip/irq-gic.c linux-6.9.10/drivers/irqchip/irq-gic.c
+--- linux-6.9.10-ori/drivers/irqchip/irq-gic.c	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/drivers/irqchip/irq-gic.c	2024-11-20 17:11:08.695744790 +0800
+@@ -864,12 +864,15 @@ static __init void gic_smp_init(void)
+ 	cpuhp_setup_state_nocalls(CPUHP_AP_IRQ_GIC_STARTING,
+ 				  "irqchip/arm/gic:starting",
+ 				  gic_starting_cpu, NULL);
+-
+-	base_sgi = irq_domain_alloc_irqs(gic_data[0].domain, 8, NUMA_NO_NODE, &sgi_fwspec);
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = irq_domain_alloc_irqs(gic_data[0].domain, 16, NUMA_NO_NODE, &sgi_fwspec);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ #else
+ #define gic_smp_init()		do { } while(0)
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/irqchip/irq-gic-v3.c linux-6.9.10/drivers/irqchip/irq-gic-v3.c
+--- linux-6.9.10-ori/drivers/irqchip/irq-gic-v3.c	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/drivers/irqchip/irq-gic-v3.c	2024-11-20 17:11:08.701744790 +0800
+@@ -1389,11 +1389,15 @@ static void __init gic_smp_init(void)
+ 				  gic_starting_cpu, NULL);
+ 
+ 	/* Register all 8 non-secure SGIs */
+-	base_sgi = irq_domain_alloc_irqs(gic_data.domain, 8, NUMA_NO_NODE, &sgi_fwspec);
++	/*
++	 * SGI8-15 is current in use for mbedtee <-> linux IPI calls,
++	 * so install all 0 ~ 15 SGIs for mbedtee-client solution
++	 */
++	base_sgi = irq_domain_alloc_irqs(gic_data.domain, 16, NUMA_NO_NODE, &sgi_fwspec);
+ 	if (WARN_ON(base_sgi <= 0))
+ 		return;
+ 
+-	set_smp_ipi_range(base_sgi, 8);
++	set_smp_ipi_range(base_sgi, 16);
+ }
+ 
+ static int gic_set_affinity(struct irq_data *d, const struct cpumask *mask_val,
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/Kconfig linux-6.9.10/drivers/tee/Kconfig
+--- linux-6.9.10-ori/drivers/tee/Kconfig	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/drivers/tee/Kconfig	2024-11-20 17:11:08.707744791 +0800
+@@ -15,5 +15,6 @@ if TEE
+ 
+ source "drivers/tee/optee/Kconfig"
+ source "drivers/tee/amdtee/Kconfig"
++source "drivers/tee/mbedtee/Kconfig"
+ 
+ endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/Makefile linux-6.9.10/drivers/tee/Makefile
+--- linux-6.9.10-ori/drivers/tee/Makefile	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/drivers/tee/Makefile	2024-11-20 17:11:08.711744791 +0800
+@@ -5,3 +5,4 @@ tee-objs += tee_shm.o
+ tee-objs += tee_shm_pool.o
+ obj-$(CONFIG_OPTEE) += optee/
+ obj-$(CONFIG_AMDTEE) += amdtee/
++obj-$(CONFIG_MBEDTEE) += mbedtee/
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/core.c linux-6.9.10/drivers/tee/mbedtee/core.c
+--- linux-6.9.10-ori/drivers/tee/mbedtee/core.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/core.c	2024-11-20 17:40:59.106983959 +0800
+@@ -0,0 +1,253 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#include <linux/errno.h>
++#include <linux/io.h>
++#include <linux/module.h>
++#include <linux/of.h>
++#include <linux/of_platform.h>
++#include <linux/platform_device.h>
++#include <linux/slab.h>
++#include <linux/string.h>
++#include <linux/tee_drv.h>
++#include <linux/types.h>
++#include <linux/uaccess.h>
++#include "mbedtee_drv.h"
++#include "shm_pool.h"
++
++#include "../tee_private.h"
++
++struct mbedtee_clnt __clnt = {0}, *clnt = &__clnt;
++
++static void mbedtee_get_version(struct tee_device *teedev,
++			      struct tee_ioctl_version_data *vers)
++{
++	struct tee_ioctl_version_data v = {
++		.impl_id = TEE_IMPL_ID_MBEDTEE,
++		.impl_caps = 0,
++		.gen_caps = TEE_GEN_CAP_GP | TEE_GEN_CAP_REG_MEM | TEE_GEN_CAP_MEMREF_NULL,
++	};
++
++	*vers = v;
++}
++
++static int mbedtee_open(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *ctxdata;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++
++	ctxdata = kzalloc(sizeof(*ctxdata), GFP_KERNEL);
++	if (!ctxdata)
++		return -ENOMEM;
++
++	mutex_init(&ctxdata->mutex);
++	INIT_LIST_HEAD(&ctxdata->sess_list);
++
++	dev_dbg(clnt->dev, "mbedtee_open\n");
++
++	ctx->data = ctxdata;
++	ctx->cap_memref_null = true;
++
++	return 0;
++}
++
++static void mbedtee_release(struct tee_context *ctx)
++{
++	struct mbedtee_context_data *d = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *s, *n = NULL;
++
++	if (d == NULL)
++		return;
++
++	if (d->is_supp_ctx)
++		mbedtee_supp_release(&clnt->supp);
++	else {
++		list_for_each_entry_safe(s, n, &d->sess_list, list_node) {
++			dev_dbg(clnt->dev, "mbedtee_release %d\n", s->session_id);
++			mbedtee_close_session(ctx, s->session_id);
++		}
++	}
++
++	kfree(d);
++	ctx->data = NULL;
++}
++
++static const struct tee_driver_ops mbedtee_ops = {
++	.get_version = mbedtee_get_version,
++	.open = mbedtee_open,
++	.release = mbedtee_release,
++	.open_session = mbedtee_open_session,
++	.close_session = mbedtee_close_session,
++	.invoke_func = mbedtee_invoke_session,
++	.cancel_req = mbedtee_cancel_req,
++	.supp_recv = mbedtee_supp_recv,
++	.supp_send = mbedtee_supp_send,
++	.shm_register = mbedtee_shm_register,
++	.shm_unregister = mbedtee_shm_unregister,
++};
++
++
++static const struct tee_desc mbedtee_desc = {
++	.name = "mbedtee-clnt",
++	.ops = &mbedtee_ops,
++	.owner = THIS_MODULE,
++};
++
++#if defined(MBEDTEE_NODE_IN_DTS)
++static int mbedtee_remove(struct platform_device *pdev)
++{
++	struct mbedtee_clnt *clnt = platform_get_drvdata(pdev);
++
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++
++	return 0;
++}
++
++static int mbedtee_probe(struct platform_device *pdev)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	dev_info(&pdev->dev, "mbedtee client probing\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		dev_info(&pdev->dev, "mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	dev_info(&pdev->dev, "mbedtee version: 0x%06x\n", version);
++	dev_info(&pdev->dev, "mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &pdev->dev;
++
++	platform_set_drvdata(pdev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client probed\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++
++	return ret;
++}
++
++static const struct of_device_id mbedtee_dt_match[] = {
++	{ .compatible = "mbedtee-clnt" },
++	{},
++};
++
++MODULE_DEVICE_TABLE(of, mbedtee_dt_match);
++
++static struct platform_driver mbedtee_driver = {
++	.probe  = mbedtee_probe,
++	.remove = mbedtee_remove,
++	.driver = {
++		.name = "mbedtee-clnt",
++		.of_match_table = mbedtee_dt_match,
++	},
++};
++module_platform_driver(mbedtee_driver);
++#endif
++
++static void __exit mbedtee_exit(void)
++{
++	mbedtee_supp_uninit(&clnt->supp);
++	tee_device_unregister(clnt->teedev);
++	tee_shm_pool_free(clnt->pool);
++}
++
++static int __init mbedtee_init(void)
++{
++	int ret = -1, version = 0, yield = false;
++	struct tee_shm_pool *pool = ERR_PTR(-EINVAL);
++	struct mbedtee_clnt *mbedclnt = clnt;
++	struct tee_device *teedev;
++
++	pr_info("mbedtee client init\n");
++
++	mbedtee_supp_init(&mbedclnt->supp);
++	mbedtee_rpc_init();
++
++	version = mbedtee_rpc_fastcall(RPC_OS_VERSION, 0, 0, 0);
++	if (!(MBEDTEE_VALID_VERSION(version))) {
++		pr_info("mbedtee not present 0x%x??\n", version);
++		return version;
++	}
++
++	yield = mbedtee_rpc_fastcall(RPC_SUPPORT_YIELD, 0, 0, 0);
++
++	pr_info("mbedtee version: 0x%06x\n", version);
++	pr_info("mbedtee yieldcall support: %d\n", yield);
++
++	pool = mbedtee_shm_pool_alloc_pages();
++	if (IS_ERR_OR_NULL(pool))
++		return -EINVAL;
++
++	teedev = tee_device_alloc(&mbedtee_desc, NULL, pool, mbedclnt);
++	if (IS_ERR(teedev)) {
++		ret = PTR_ERR(teedev);
++		goto out;
++	}
++	mbedclnt->teedev = teedev;
++
++	ret = tee_device_register(mbedclnt->teedev);
++	if (ret != 0)
++		goto out;
++
++	mbedclnt->version = version;
++	mbedclnt->yield = yield;
++	mbedclnt->pool = pool;
++	mbedclnt->dev = &teedev->dev;
++
++	dev_set_drvdata(mbedclnt->dev, mbedclnt);
++
++	dev_info(mbedclnt->dev, "mbedtee client initialized\n");
++	return 0;
++
++out:
++	if (teedev)
++		tee_device_unregister(teedev);
++	if (pool)
++		tee_shm_pool_free(pool);
++	return ret;
++}
++module_init(mbedtee_init);
++module_exit(mbedtee_exit);
++
++MODULE_AUTHOR("Kapa");
++MODULE_DESCRIPTION("MBEDTEE Client");
++MODULE_VERSION("1.0");
++MODULE_LICENSE("GPL v2");
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/Kconfig linux-6.9.10/drivers/tee/mbedtee/Kconfig
+--- linux-6.9.10-ori/drivers/tee/mbedtee/Kconfig	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/Kconfig	2024-11-20 17:11:08.713744791 +0800
+@@ -0,0 +1,8 @@
++# SPDX-License-Identifier: GPL-2.0-only
++# MBED-TEE Trusted Execution Environment Configuration
++config MBEDTEE
++	tristate "MBEDTEE"
++	depends on MMU
++	help
++	  This implements the MBEDTEE Trusted Execution Environment (TEE)
++	  driver.
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/Makefile linux-6.9.10/drivers/tee/mbedtee/Makefile
+--- linux-6.9.10-ori/drivers/tee/mbedtee/Makefile	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/Makefile	2024-11-20 17:11:08.713744791 +0800
+@@ -0,0 +1,13 @@
++# SPDX-License-Identifier: GPL-2.0
++
++ccflags-$(CONFIG_MBEDTEE) += -I$(STAGING_DIR)/usr/include/mbedtee
++
++obj-$(CONFIG_MBEDTEE) += mbedtee.o
++
++mbedtee-y += core.o
++mbedtee-y += supp.o
++mbedtee-y += shm_pool.o
++mbedtee-y += rpc.o rpc-callee.o
++mbedtee-$(CONFIG_ARM) += rpc-caller-arm.o
++mbedtee-$(CONFIG_ARM64) += rpc-caller-arm.o
++mbedtee-$(CONFIG_RISCV) += rpc-caller-riscv.o
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/mbedtee_drv.h linux-6.9.10/drivers/tee/mbedtee/mbedtee_drv.h
+--- linux-6.9.10-ori/drivers/tee/mbedtee/mbedtee_drv.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/mbedtee_drv.h	2024-11-20 17:11:08.714744791 +0800
+@@ -0,0 +1,154 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ */
++#ifndef MBEDTEE_DRV_H
++#define MBEDTEE_DRV_H
++
++#include <linux/types.h>
++#include <linux/of.h>
++#include <linux/semaphore.h>
++#include <linux/tee_drv.h>
++#include <linux/syscalls.h>
++#include <asm/cacheflush.h>
++
++#include <rpc/rpc.h>
++#include <rpc/reefs.h>
++
++#include "mbedtee_rpc.h"
++#include "shm_pool.h"
++
++#define TEEC_ERROR_TARGET_DEAD      0xFFFF3024
++#define TEEC_ERROR_OUT_OF_MEMORY    0xFFFF000C
++
++#define TEEC_ORIGIN_COMMS           0x00000002
++#define TEEC_ORIGIN_TEE             0x00000003
++
++#define MBEDTEE_VALID_VERSION(x) ((((x) >> 16) == 1) && \
++	((((x) >> 8) & 0xFF) >= 0) && (((x) & 0xFF) >= 1))
++
++struct mbedtee_supp {
++	struct mutex mutex;
++	struct tee_context *ctx;
++
++	void *req;
++	struct list_head reqs;
++	struct completion reqs_c;
++};
++
++struct mbedtee_clnt {
++	int version;
++	int yield;
++	struct device *dev;
++	struct tee_device *teedev;
++	struct tee_shm_pool *pool;
++	struct mbedtee_supp supp;
++};
++
++struct mbedtee_session {
++	struct list_head list_node;
++	u32 session_id;
++};
++
++struct mbedtee_context_data {
++	int is_supp_ctx;
++	struct mutex mutex;
++	struct list_head sess_list;
++};
++
++typedef struct {
++	uint32_t timeLow;
++	uint16_t timeMid;
++	uint16_t timeHiAndVersion;
++	uint8_t clockSeqAndNode[8];
++} TEEC_UUID;
++
++extern struct mbedtee_clnt *clnt;
++
++#define mbedtee_bswap16(_x) ((__u16)(((_x) >> 8) | (((_x) << 8) & 0xff00)))
++#define mbedtee_bswap32(_x) ((__u32)(((_x) >> 24) | (((_x) >> 8) & 0xff00) | \
++	    (((_x) << 8) & 0xff0000) | (((_x) << 24) & 0xff000000)))
++
++static inline void mbedtee_flush_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM)
++	__cpuc_flush_dcache_area(va, size);
++#endif
++
++#if defined(CONFIG_ARM64)
++	dcache_clean_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* wback & inv */
++	/* ALT_CMO_OP(FLUSH, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline void mbedtee_invalidate_cache(void *va, size_t size)
++{
++	/* currently unnecessary */
++	return;
++
++#if defined(CONFIG_ARM64)
++	dcache_inval_poc((long)va, (long)va + size);
++#endif
++
++#if defined(CONFIG_RISCV)
++	/* inv */
++	/* ALT_CMO_OP(INVAL, va, size, riscv_cbom_block_size); */
++#endif
++}
++
++static inline phys_addr_t mbedtee_virt_to_phys(void *va)
++{
++	if (is_vmalloc_or_module_addr(va)) {
++		return page_to_phys(vmalloc_to_page(va)) +
++				    offset_in_page(va);
++	}
++
++	WARN_ON(!virt_addr_valid(va));
++	return virt_to_phys(va);
++}
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size);
++void mbedtee_rpc_free(struct rpc_cmd *rpc);
++
++int mbedtee_open_session(struct tee_context *ctx,
++	struct tee_ioctl_open_session_arg *arg, struct tee_param *param);
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg, struct tee_param *param);
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session);
++
++int mbedtee_cancel_req(struct tee_context *ctx, u32 cancel_id, u32 session);
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start);
++
++int mbedtee_shm_unregister(struct tee_context *ctx, struct tee_shm *shm);
++
++/* TEE->REE RPC */
++int mbedtee_rpc_init(void);
++void mbedtee_rpc_isr(void);
++
++void mbedtee_supp_init(struct mbedtee_supp *supp);
++void mbedtee_supp_uninit(struct mbedtee_supp *supp);
++void mbedtee_supp_release(struct mbedtee_supp *supp);
++int mbedtee_supp_recv(struct tee_context *ctx, u32 *func, u32 *num_params,
++		    struct tee_param *param);
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param);
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size);
++
++/* REE->TEE RPC */
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible);
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2);
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/mbedtee_rpc.h linux-6.9.10/drivers/tee/mbedtee/mbedtee_rpc.h
+--- linux-6.9.10-ori/drivers/tee/mbedtee/mbedtee_rpc.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/mbedtee_rpc.h	2024-11-20 17:11:08.714744791 +0800
+@@ -0,0 +1,30 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ *
++ * Export symbols for other kernel modules
++ */
++#ifndef _MBEDTEE_RPC_H
++#define _MBEDTEE_RPC_H
++
++/*
++ * defines the __typeof__ the RPC callee function handler.
++ * @data - shared memory buffer from the RPC peer.
++ * @size - the data size of this shared memory buffer.
++ */
++typedef void (*rpc_func_t)(void *data, size_t size);
++
++/*
++ * register the rpc callee func.
++ * @id - function id of callee
++ * @return - 0 on success. Else negative num.
++ */
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func);
++
++/*
++ * unregister the callee @id.
++ */
++void mbedtee_unregister_rpc(unsigned int id);
++
++#endif
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/rpc.c linux-6.9.10/drivers/tee/mbedtee/rpc.c
+--- linux-6.9.10-ori/drivers/tee/mbedtee/rpc.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/rpc.c	2024-11-20 17:57:25.873893672 +0800
+@@ -0,0 +1,396 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RPC calls to TEE
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++struct rpc_cmd *mbedtee_rpc_alloc(size_t size)
++{
++	struct page *p = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	if (sizeof(struct rpc_cmd) + size > PAGE_SIZE)
++		return NULL;
++
++	p = alloc_page(GFP_KERNEL);
++	if (p == NULL)
++		return NULL;
++
++	rpc = kmap(p);
++	rpc->size = size;
++	rpc->ret = -1;
++	rpc->interrupted = 0;
++
++	return rpc;
++}
++EXPORT_SYMBOL(mbedtee_rpc_alloc);
++
++void mbedtee_rpc_free(struct rpc_cmd *rpc)
++{
++	struct page *p = NULL;
++
++	if (rpc && (!rpc->interrupted)) {
++		p = virt_to_page(rpc);
++		kunmap(p);
++		put_page(p);
++	}
++}
++EXPORT_SYMBOL(mbedtee_rpc_free);
++
++static int mbedtee_param_decode(struct tee_param *params,
++	size_t num_params, const struct rpc_param *rp)
++{
++	size_t n;
++#define TYPE_GET(t, i) ((((uint32_t)t) >> ((i)*4)) & 0xF)
++
++	for (n = 0; n < num_params; n++) {
++		struct tee_param *p = params + n;
++		const union rpc_tee_param *rtp = rp->params + n;
++		u32 attr = TYPE_GET(rp->params_type, n);
++
++		switch (attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(&p->u, 0, sizeof(p->u));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			p->u.value.a = rtp->value.a;
++			p->u.value.b = rtp->value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			p->u.memref.size = rtp->memref.size;
++			break;
++
++		default:
++			return -EINVAL;
++		}
++	}
++	return 0;
++}
++
++static int mbedtee_param_encode(struct rpc_param *rp,
++	size_t num_params, const struct tee_param *params)
++{
++	size_t n;
++#define TYPE_SET(t, i) (((uint32_t)(t) & 0xF) << ((i)*4))
++
++	rp->params_type = TEE_IOCTL_PARAM_ATTR_TYPE_NONE;
++
++	for (n = 0; n < num_params; n++) {
++		const struct tee_param *p = params + n;
++		union rpc_tee_param *rtp = rp->params + n;
++
++		rp->params_type |= TYPE_SET(p->attr, n);
++
++		switch (p->attr) {
++		case TEE_IOCTL_PARAM_ATTR_TYPE_NONE:
++			memset(rtp, 0, sizeof(*rtp));
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_VALUE_INOUT:
++			rtp->value.a = p->u.value.a;
++			rtp->value.b = p->u.value.b;
++			break;
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_OUTPUT:
++		case TEE_IOCTL_PARAM_ATTR_TYPE_MEMREF_INOUT:
++			if (p->u.memref.shm)
++				rtp->memref.id = p->u.memref.shm->sec_world_id;
++			else
++				rtp->memref.id = 0; /* invalid-id @ mbedtee */
++			rtp->memref.size = p->u.memref.size;
++			rtp->memref.offset = p->u.memref.shm_offs;
++			break;
++		default:
++			return -EINVAL;
++		}
++	}
++
++	return 0;
++}
++
++static void mbedtee_errno_origin(
++	__u32 *errno, __u32 *origin)
++{
++	switch (*errno) {
++	case -ENOMEM:
++		*errno = TEEC_ERROR_OUT_OF_MEMORY;
++		break;
++	case -ESRCH:
++		*origin = TEEC_ORIGIN_TEE;
++		*errno = TEEC_ERROR_TARGET_DEAD;
++		break;
++	default:
++		break;
++	}
++}
++
++static struct mbedtee_session *mbedtee_session_of(
++	struct mbedtee_context_data *ctxdata,
++	u32 session_id)
++{
++	struct mbedtee_session *sess, *ret = NULL;
++
++	mutex_lock(&ctxdata->mutex);
++	list_for_each_entry(sess, &ctxdata->sess_list, list_node)
++		if (sess->session_id == session_id) {
++			ret = sess;
++			break;
++		}
++	mutex_unlock(&ctxdata->mutex);
++	return ret;
++}
++
++int mbedtee_open_session(struct tee_context *ctx,
++			   struct tee_ioctl_open_session_arg *arg,
++			   struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret != 0) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	sess = kzalloc(sizeof(*sess), GFP_KERNEL);
++	if (sess == NULL) {
++		mbedtee_rpc_free(rpc);
++		return -ENOMEM;
++	}
++
++	memcpy(rp->uuid, arg->uuid, sizeof(arg->uuid));
++	memcpy(rp->clnt_uuid, arg->clnt_uuid, sizeof(arg->clnt_uuid));
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_rpc_yieldcall(RPC_OPEN_SESSION, rpc, false);
++
++	dev_dbg(clnt->dev, "open session ret %d\n", ret);
++
++	if (ret == 0) {
++		sess->session_id = rp->session_id;
++		mutex_lock(&ctxdata->mutex);
++		list_add(&sess->list_node, &ctxdata->sess_list);
++		mutex_unlock(&ctxdata->mutex);
++
++		mbedtee_param_decode(param, arg->num_params, rp);
++	} else {
++		kfree(sess);
++	}
++
++	arg->session = rp->session_id;
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_invoke_session(struct tee_context *ctx,
++	struct tee_ioctl_invoke_arg *arg,
++	struct tee_param *param)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct mbedtee_session *sess;
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++
++	sess = mbedtee_session_of(ctxdata, arg->session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = arg->session;
++	rp->cmd_id = arg->func;
++	rp->ret_origin = TEEC_ORIGIN_COMMS;
++
++	ret = mbedtee_param_encode(rp, arg->num_params, param);
++	if (ret) {
++		mbedtee_rpc_free(rpc);
++		return ret;
++	}
++
++	ret = mbedtee_rpc_yieldcall(RPC_INVOKE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "invoke session ret %d\n", ret);
++
++	mbedtee_param_decode(param, arg->num_params, rp);
++
++	arg->ret = ret;
++	arg->ret_origin = rp->ret_origin;
++	mbedtee_errno_origin(&arg->ret, &arg->ret_origin);
++
++	mbedtee_rpc_free(rpc);
++	return 0;
++}
++
++int mbedtee_close_session(struct tee_context *ctx, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	struct rpc_cmd *rpc = NULL;
++	struct rpc_param *rp = NULL;
++	struct mbedtee_session *sess = NULL;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*rp));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	rp = (struct rpc_param *)rpc->data;
++
++	rp->session_id = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CLOSE_SESSION, rpc, true);
++
++	dev_dbg(clnt->dev, "close session ret %d\n", ret);
++
++	mutex_lock(&ctxdata->mutex);
++	list_del(&sess->list_node);
++	kfree(sess);
++	mutex_unlock(&ctxdata->mutex);
++
++	mbedtee_rpc_free(rpc);
++
++	/*
++	 * ESRCH means the session already been closed in
++	 * mbedtee, so REE return success for this case
++	 */
++	return (ret == -ESRCH) ? 0 : ret;
++}
++
++int mbedtee_cancel_req(struct tee_context *ctx,
++	u32 cancel_id, u32 session)
++{
++	int ret = -1;
++	struct mbedtee_context_data *ctxdata = ctx->data;
++	struct mbedtee_session *sess = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(int));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	sess = mbedtee_session_of(ctxdata, session);
++	if (sess == NULL)
++		return -EINVAL;
++
++	*(int *)rpc->data = session;
++
++	ret = mbedtee_rpc_yieldcall(RPC_CANCEL, rpc, false);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
++int mbedtee_shm_register(struct tee_context *ctx,
++	struct tee_shm *shm, struct page **pages,
++	size_t nr_pages, unsigned long start)
++{
++	int ret = -1, i = 0, j = 0;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++	unsigned long *pagearray = NULL;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(ctx->teedev);
++	size_t pagearray_sz = 0, multiple = PAGE_SIZE / TEE_PAGE_SIZE;
++
++	dev_dbg(clnt->dev, "nr_pages %d @ %d\n", (int)nr_pages, shm->id);
++
++	BUILD_BUG_ON(multiple == 0);
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++
++	pagearray_sz = DIV_ROUND_UP(nr_pages * sizeof(long) * multiple, PAGE_SIZE);
++	pagearray = alloc_pages_exact(pagearray_sz, GFP_KERNEL);
++	if (pagearray == NULL) {
++		ret = -ENOMEM;
++		goto out;
++	}
++
++	for (i = 0; i < nr_pages; i++) {
++		for (j = 0; j < multiple; j++)
++			pagearray[i * multiple + j] = TEE_PAGE_SIZE * j + \
++				page_to_phys(pages[i]);
++	}
++
++	memref->size = tee_shm_get_size(shm);
++	memref->offset = tee_shm_get_page_offset(shm);
++	memref->pages = mbedtee_virt_to_phys(pagearray);
++	memref->cnt = nr_pages * multiple;
++
++	ret = mbedtee_rpc_yieldcall(RPC_REGISTER_SHM, rpc, false);
++
++	if (ret == 0)
++		shm->sec_world_id = memref->id;
++
++	free_pages_exact(pagearray, pagearray_sz);
++
++out:
++	mbedtee_rpc_free(rpc);
++	return ret;
++}
++
++int mbedtee_shm_unregister(struct tee_context *ctx,
++	struct tee_shm *shm)
++{
++	int ret = -1;
++	struct rpc_memref *memref = NULL;
++	struct rpc_cmd *rpc = NULL;
++
++	rpc = mbedtee_rpc_alloc(sizeof(*memref));
++	if (rpc == NULL)
++		return -ENOMEM;
++
++	memref = (struct rpc_memref *)rpc->data;
++	memref->id = shm->sec_world_id;
++
++	ret = mbedtee_rpc_yieldcall(RPC_UNREGISTER_SHM, rpc, true);
++
++	mbedtee_rpc_free(rpc);
++
++	return ret;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/rpc-callee.c linux-6.9.10/drivers/tee/mbedtee/rpc-callee.c
+--- linux-6.9.10-ori/drivers/tee/mbedtee/rpc-callee.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/rpc-callee.c	2024-11-20 17:11:08.714744791 +0800
+@@ -0,0 +1,299 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2020, Kapa Limited
++ * Callees for TEE->REE RPC
++ */
++#include <linux/slab.h>
++#include <linux/module.h>
++#include <linux/io.h>
++#include <linux/printk.h>
++#include <asm/smp.h>
++#include <asm/cacheflush.h>
++#include <asm/hardirq.h>
++#include <linux/delay.h>
++#include <linux/highmem.h>
++
++#include <rpc/rpc.h>
++
++#include "mbedtee_drv.h"
++
++static void *t2r_shm = NULL;
++static unsigned long t2r_shm_phys = 0;
++static struct rpc_ringbuf *t2r_ring = NULL;
++static unsigned int t2r_ring_sz = 0;
++static unsigned int t2r_ring_rd = 0;
++static unsigned char __rpc_data[PAGE_SIZE] = {0};
++static rpc_func_t __rpc_callee_funcs[RPC_REENR] = {NULL};
++
++static DEFINE_SPINLOCK(__rpc_lock);
++
++struct mbedtee_rpc_work {
++	pid_t waiter;
++	int unfinish;
++	void *data;
++	unsigned int size;
++	rpc_func_t func;
++	struct work_struct work;
++};
++
++static inline size_t mbedtee_rpc_available_size(void)
++{
++	unsigned int wr = 0;
++	unsigned int rd = t2r_ring_rd;
++	unsigned int shm_size = t2r_ring_sz;
++
++	wr = t2r_ring->wr;
++	smp_rmb();
++
++	if (wr > shm_size)
++		return 0;
++
++	if (wr >= rd)
++		return wr - rd;
++	else
++		return shm_size + wr - rd;
++}
++
++static inline void mbedtee_rpc_read(void *data, size_t size)
++{
++	unsigned int remain = 0;
++	unsigned int shm_size = t2r_ring_sz;
++	unsigned int rd = t2r_ring_rd;
++	struct rpc_ringbuf *shm = t2r_ring;
++
++	smp_wmb();
++	if (rd + size <= shm_size) {
++		mbedtee_invalidate_cache(&shm->mem[rd], size);
++		memcpy(data, &shm->mem[rd], size);
++		rd += size;
++	} else {
++		remain = rd + size - shm_size;
++		mbedtee_invalidate_cache(&shm->mem[rd], size - remain);
++		memcpy(data, &shm->mem[rd], size - remain);
++		mbedtee_invalidate_cache(&shm->mem[0], remain);
++		memcpy((unsigned char *)data + size - remain,
++				&shm->mem[0], remain);
++		rd = remain;
++	}
++
++	shm->rd = t2r_ring_rd = rd;
++
++	smp_rmb();
++}
++
++static struct mbedtee_rpc_work *mbedtee_rpc_pick_next(
++	struct mbedtee_rpc_work *c)
++{
++	unsigned long retry = 0;
++	struct rpc_cmd cmd = {0};
++	rpc_func_t func = NULL;
++
++	/* handle the last unfinished rpc */
++	if (c->unfinish) {
++		if (mbedtee_rpc_available_size() < c->size)
++			return NULL;
++		c->unfinish = false;
++		mbedtee_rpc_read((void *)c->data, c->size);
++		return c;
++	}
++
++	if (mbedtee_rpc_available_size() < sizeof(cmd))
++		return NULL;
++
++	mbedtee_rpc_read(&cmd, sizeof(cmd));
++
++	if (cmd.id >= RPC_REENR)
++		return NULL;
++
++	func = __rpc_callee_funcs[cmd.id];
++	if (func == NULL) {
++		pr_emerg("rpc unregister %d ??\n", cmd.id);
++		return NULL;
++	}
++
++	if (cmd.waiter == 0) {
++ 		/* async rpc notification from peer */
++		while (mbedtee_rpc_available_size() < cmd.size) {
++			if (++retry % 1000 == 0)
++				pr_emerg("rpc retrying for %d func %d\n", cmd.size, cmd.id);
++			if (retry == 5000) {
++				/* mark as unfinished rpc */
++				c->unfinish = true;
++				return NULL;
++			}
++			udelay(5);
++		}
++		mbedtee_rpc_read(c->data, cmd.size);
++	} else {
++		if (cmd.shm == 0) {
++			pr_emerg("rpc cmd.shm error ??\n");
++			return NULL;
++		}
++
++		/* sync rpc notification from peer */
++		c = kmalloc(sizeof(*c), GFP_ATOMIC);
++		c->data = t2r_shm + (cmd.shm - t2r_shm_phys);
++	}
++
++	c->func = func;
++	c->waiter = cmd.waiter;
++	c->size = cmd.size;
++
++	return c;
++}
++
++static void rpc_routine(struct work_struct *w)
++{
++	struct mbedtee_rpc_work *c = NULL;
++
++	c = container_of(w, struct mbedtee_rpc_work, work);
++
++	c->func(c->data, c->size);
++
++	mbedtee_flush_cache(c->data, c->size);
++
++	mbedtee_rpc_fastcall(RPC_COMPLETE_TEE, c->waiter, 0, 0);
++	kfree(c);
++}
++
++extern void mbedtee_rpc_isr(void)
++{
++	unsigned long flags = 0, retry = 0;
++	struct mbedtee_rpc_work rw = {0}, *c = &rw;
++	struct rpc_ringbuf *ring = t2r_ring;
++
++	if (!ring || (t2r_ring_rd == ring->wr))
++		return;
++
++	c->data = (void *)__rpc_data;
++	spin_lock_irqsave(&__rpc_lock, flags);
++	while (t2r_ring_rd != ring->wr) {
++		if ((c = mbedtee_rpc_pick_next(&rw)) == NULL) {
++			if (++retry == 5000)
++				break;
++			continue;
++		}
++
++		/* no peer is waiting, it's asynchronous rpc */
++		if (c->waiter == 0) {
++			c->func(c->data, c->size);
++		} else {
++			/* peer is waiting, it's synchronous rpc */
++			INIT_WORK(&c->work, rpc_routine);
++			queue_work_on(smp_processor_id(), system_highpri_wq, &c->work);
++		}
++	}
++	spin_unlock_irqrestore(&__rpc_lock, flags);
++
++	if (retry)
++		pr_emerg("retry %ld\n", retry);
++}
++
++static struct rpc_cmd *__mbedtee_rpc_get_cmd(
++	void *data, size_t size)
++{
++	unsigned long cmd_phy = 0;
++
++	memcpy(&cmd_phy, data, sizeof(cmd_phy));
++
++	return phys_to_virt(cmd_phy);
++}
++
++/*
++ * Internal RPC instance to complete the rpc call
++ */
++static void mbedtee_rpc_complete(void *data, size_t size)
++{
++	struct rpc_cmd *cmd = __mbedtee_rpc_get_cmd(data, size);
++
++	if (!cmd || !cmd->waiter)
++		return;
++
++	smp_rmb();
++	if (!cmd->interrupted)
++		complete((void *)cmd->waiter);
++	else {
++		struct page *p = virt_to_page(cmd);
++		kunmap(p);
++		put_page(p);
++	}
++}
++
++static void mbedtee_ree_time(void *data, size_t size)
++{
++	struct timespec64 *ts = (void *)data;
++
++	ktime_get_real_ts64(ts);
++}
++
++static void mbedtee_reefs_supp(void *data, size_t size)
++{
++	mbedtee_supp_handler(clnt, SUPP_REEFS, data, size);
++}
++
++int mbedtee_register_rpc(unsigned int id, rpc_func_t func)
++{
++	if (id >= RPC_REENR || !func)
++		return -EINVAL;
++
++	__rpc_callee_funcs[id] = func;
++
++	return 0;
++}
++EXPORT_SYMBOL(mbedtee_register_rpc);
++
++void mbedtee_unregister_rpc(unsigned int id)
++{
++	if (id >= RPC_REENR)
++		return;
++
++	__rpc_callee_funcs[id] = NULL;
++}
++EXPORT_SYMBOL(mbedtee_unregister_rpc);
++
++int mbedtee_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-t2r-shm", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	t2r_shm_phys = of_read_ulong(range, naddr);
++	t2r_shm = ioremap(t2r_shm_phys,
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_shm)
++		t2r_shm = phys_to_virt(t2r_shm_phys);
++
++	pr_info("rpc-t2r-shm %lx\n", t2r_shm_phys);
++
++	range = of_get_property(dn, "rpc-t2r-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("rpc-t2r-ring %lx\n", of_read_ulong(range, naddr));
++
++	t2r_ring_sz = of_read_ulong(range + naddr, nsize) -
++			sizeof(struct rpc_ringbuf);
++
++	t2r_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++	if (!t2r_ring)
++		t2r_ring = phys_to_virt(of_read_ulong(range, naddr));
++
++	mbedtee_register_rpc(RPC_REEFS, mbedtee_reefs_supp);
++	mbedtee_register_rpc(RPC_REETIME, mbedtee_ree_time);
++	mbedtee_register_rpc(RPC_COMPLETE_REE, mbedtee_rpc_complete);
++
++	return 0;
++}
++
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/rpc-caller-arm.c linux-6.9.10/drivers/tee/mbedtee/rpc-caller-arm.c
+--- linux-6.9.10-ori/drivers/tee/mbedtee/rpc-caller-arm.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/rpc-caller-arm.c	2024-11-20 17:11:08.714744791 +0800
+@@ -0,0 +1,98 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * ARM RPC calls to TEE - relies on SMC
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static inline long trigger_smc(unsigned long rpc)
++{
++	long ret = 0;
++
++#ifdef CONFIG_ARM
++	register long r0 asm ("r0") = rpc;
++	smp_wmb();
++	asm volatile(".arch_extension sec\n"
++				"smc 0x0" : "=r" (ret) : "r" (r0): "memory", "cc");
++#endif
++
++#ifdef CONFIG_ARM64
++	register long x0 asm ("x0") = rpc;
++	smp_wmb();
++	asm volatile("smc 0x0" : "=r" (ret) : "r" (x0) : "memory", "cc");
++#endif
++
++	return ret;
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret)
++		return ret;
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	static long buff[CONFIG_NR_CPUS][((sizeof(struct rpc_cmd)\
++		/ sizeof(long)) + 4)] __attribute__ ((aligned (64))) = {0};
++	struct rpc_cmd *rpc = NULL;
++	unsigned long flags = 0;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	local_irq_save(flags);
++
++	rpc = (struct rpc_cmd *)buff[smp_processor_id()];
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	ret = trigger_smc(mbedtee_virt_to_phys(rpc));
++	if (ret == 0)
++		ret = rpc->ret;
++
++	local_irq_restore(flags);
++
++	return ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/rpc-caller-riscv.c linux-6.9.10/drivers/tee/mbedtee/rpc-caller-riscv.c
+--- linux-6.9.10-ori/drivers/tee/mbedtee/rpc-caller-riscv.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/rpc-caller-riscv.c	2024-11-20 17:11:08.714744791 +0800
+@@ -0,0 +1,234 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright 2020, Kapa Limited
++ * RISCV RPC calls to TEE - relies on IPI (sswi)
++ */
++#include <linux/mm.h>
++#include <linux/errno.h>
++#include <linux/slab.h>
++#include <linux/types.h>
++#include <linux/delay.h>
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/highmem.h>
++
++#include "mbedtee_drv.h"
++
++static DEFINE_SPINLOCK(rpc_lock);
++static struct rpc_ringbuf *r2t_ring = NULL;
++static unsigned int r2t_ring_sz = 0;
++static void *sswi_base = NULL;
++
++static int r2t_rpc_init(void)
++{
++	int ret = -1, naddr = 0, nsize = 0, plen = 0;
++	struct device_node *dn = NULL;
++	const __be32 *range = NULL;
++
++	dn = of_find_node_by_name(NULL, "memory");
++	if (!dn)
++		return ret;
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "rpc-r2t-ring", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize)) {
++		pr_info("lack of rpc-r2t-ring\n");
++		return ret;
++	}
++
++	pr_info("rpc-r2t-ring %lx\n", of_read_ulong(range, naddr));
++
++	r2t_ring = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	r2t_ring_sz = of_read_ulong(range + naddr, nsize) -
++				sizeof(struct rpc_ringbuf);
++
++	dn = of_find_compatible_node(NULL, NULL, "riscv,aclint-sswi");
++	if (!dn) {
++		pr_info("lack of riscv,aclint-sswi\n");
++		return ret;
++	}
++
++	naddr = of_n_addr_cells(dn);
++	nsize = of_n_size_cells(dn);
++
++	range = of_get_property(dn, "reg", &plen);
++	if (range == NULL || (plen/sizeof(u32) != naddr + nsize))
++		return ret;
++
++	pr_info("riscv,aclint-sswi %lx\n", of_read_ulong(range, naddr));
++
++	sswi_base = ioremap(of_read_ulong(range, naddr),
++			of_read_ulong(range + naddr, nsize));
++
++	return 0;
++}
++
++/*
++ * check if the remain ring-buff is
++ * enough or not for current call
++ */
++static int rpc_ring_enough(unsigned int size)
++{
++	unsigned int wr = 0, rd = 0;
++	unsigned int remain = 0,ringsz = r2t_ring_sz;
++	struct rpc_ringbuf *shm = r2t_ring;
++
++	wr = shm->wr;
++	rd = shm->rd;
++	smp_rmb();
++
++	if ((rd > ringsz) || (wr > ringsz))
++		return false;
++
++	if (rd <= wr)
++		remain = ringsz + rd - wr;
++	else
++		remain = rd - wr;
++
++	return remain >= size;
++}
++
++/*
++ * copy into the ring-buff,
++ * and update the write ptr
++ */
++static void rpc_ring_write(void *data, unsigned int size)
++{
++	struct rpc_ringbuf *shm = r2t_ring;
++	unsigned int remain = 0, ringsz = r2t_ring_sz;
++	static unsigned int wr = 0;
++
++	if (wr + size > ringsz) {
++		remain = wr + size - ringsz;
++		memcpy(&shm->mem[wr], data, size - remain);
++		mbedtee_flush_cache(&shm->mem[wr], size - remain);
++		memcpy(&shm->mem[0], data + size - remain, remain);
++		mbedtee_flush_cache(&shm->mem[0], remain);
++		wr = remain;
++	} else {
++		memcpy(&shm->mem[wr], data, size);
++		mbedtee_flush_cache(&shm->mem[wr], size);
++		wr += size;
++	}
++
++	shm->wr = wr;
++
++	smp_mb();
++}
++
++static void trigger_sswi(void)
++{
++	iowrite32(1, (int *)sswi_base + 0);
++}
++
++long mbedtee_rpc_yieldcall(unsigned long fn, struct rpc_cmd *rpc, int interruptible)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	if (interruptible) {
++		ret = wait_for_completion_interruptible(&c);
++		if (ret) {
++			rpc->interrupted = true;
++			return ret;
++		}
++	} else wait_for_completion(&c);
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_yieldcall);
++
++long mbedtee_rpc_fastcall(unsigned long fn, unsigned long a0,
++	unsigned long a1, unsigned long a2)
++{
++	long ret = -1;
++	struct completion c = {0};
++	unsigned long flags = 0;
++	long buff[((sizeof(struct rpc_cmd)/sizeof(long)) + 4)] = {0};
++	struct rpc_cmd *rpc = (void *)buff;
++	unsigned long phys = 0;
++
++	if (!r2t_ring)
++		r2t_rpc_init();
++
++	if (!r2t_ring)
++		return -ENXIO;
++
++	if (!RPC_IS_FASTCALL(fn))
++		return -EINVAL;
++
++	rpc->ret = -ENOSYS;
++	rpc->waiter = (unsigned long)&c;
++
++	init_completion(&c);
++
++	spin_lock_irqsave(&rpc_lock, flags);
++	if (!rpc_ring_enough(sizeof(long))) {
++		pr_emerg("rpc ring not enough\n");
++		spin_unlock_irqrestore(&rpc_lock, flags);
++		return -ENOMEM;
++	}
++
++	rpc->id = fn;
++	rpc->ret = -ENOSYS;
++
++	/* 3 args */
++	rpc->size = 3 * sizeof(long);
++	rpc->data[0] = a0;
++	rpc->data[1] = a1;
++	rpc->data[2] = a2;
++
++	mbedtee_flush_cache(rpc, sizeof(*rpc) + rpc->size);
++
++	phys = mbedtee_virt_to_phys(rpc);
++	rpc_ring_write((void *)&phys, sizeof(phys));
++
++	trigger_sswi();
++
++	spin_unlock_irqrestore(&rpc_lock, flags);
++
++	ret = wait_for_completion_interruptible(&c);
++	if (ret)
++		return ret;
++
++	return rpc->ret;
++}
++EXPORT_SYMBOL(mbedtee_rpc_fastcall);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/shm_pool.c linux-6.9.10/drivers/tee/mbedtee/shm_pool.c
+--- linux-6.9.10-ori/drivers/tee/mbedtee/shm_pool.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/shm_pool.c	2024-11-20 17:11:08.715744791 +0800
+@@ -0,0 +1,86 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2017, EPAM Systems
++ */
++#include <linux/device.h>
++#include <linux/dma-buf.h>
++#include <linux/genalloc.h>
++#include <linux/slab.h>
++
++#include "mbedtee_drv.h"
++
++static int pool_op_alloc(struct tee_shm_pool *pool,
++			 struct tee_shm *shm, size_t size, size_t align)
++{
++	unsigned int order = get_order(size);
++	struct page *page;
++	int rc = 0;
++
++	page = alloc_pages(GFP_KERNEL | __GFP_ZERO, order);
++	if (!page)
++		return -ENOMEM;
++
++	shm->kaddr = page_address(page);
++	shm->paddr = page_to_phys(page);
++	shm->size = PAGE_SIZE << order;
++
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield) {
++		unsigned int nr_pages = 1 << order, i;
++		struct page **pages;
++
++		pages = kcalloc(nr_pages, sizeof(pages), GFP_KERNEL);
++		if (!pages)
++			return -ENOMEM;
++
++		for (i = 0; i < nr_pages; i++) {
++			pages[i] = page;
++			page++;
++		}
++
++		rc = mbedtee_shm_register(shm->ctx, shm, pages, nr_pages,
++					(unsigned long)shm->kaddr);
++		kfree(pages);
++	}
++
++	return rc;
++}
++
++static void pool_op_free(struct tee_shm_pool *pool,
++			 struct tee_shm *shm)
++{
++	if (!(shm->flags & TEE_SHM_PRIV) && clnt->yield)
++		mbedtee_shm_unregister(shm->ctx, shm);
++
++	free_pages((unsigned long)shm->kaddr, get_order(shm->size));
++	shm->kaddr = NULL;
++}
++
++static void pool_op_destroy_pool(struct tee_shm_pool *pool)
++{
++	kfree(pool);
++}
++
++static const struct tee_shm_pool_ops pool_ops = {
++	.alloc = pool_op_alloc,
++	.free = pool_op_free,
++	.destroy_pool = pool_op_destroy_pool,
++};
++
++/**
++ * mbedtee_shm_pool_alloc_pages() - create page-based allocator pool
++ *
++ * This pool is used when MBEDTEE supports dymanic SHM. In this case
++ * command buffers and such are allocated from kernel's own memory.
++ */
++struct tee_shm_pool *mbedtee_shm_pool_alloc_pages(void)
++{
++	struct tee_shm_pool *pool = kzalloc(sizeof(*pool), GFP_KERNEL);
++
++	if (!pool)
++		return ERR_PTR(-ENOMEM);
++
++	pool->ops = &pool_ops;
++
++	return pool;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/shm_pool.h linux-6.9.10/drivers/tee/mbedtee/shm_pool.h
+--- linux-6.9.10-ori/drivers/tee/mbedtee/shm_pool.h	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/shm_pool.h	2024-11-20 17:11:08.715744791 +0800
+@@ -0,0 +1,14 @@
++/* SPDX-License-Identifier: GPL-2.0-only */
++/*
++ * Copyright (c) 2015, Linaro Limited
++ * Copyright (c) 2016, EPAM Systems
++ */
++
++#ifndef SHM_POOL_H
++#define SHM_POOL_H
++
++#include <linux/tee_drv.h>
++
++struct tee_shm_pool *mbedtee_shm_pool_alloc_pages(void);
++
++#endif
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/mbedtee/supp.c linux-6.9.10/drivers/tee/mbedtee/supp.c
+--- linux-6.9.10-ori/drivers/tee/mbedtee/supp.c	1970-01-01 08:00:00.000000000 +0800
++++ linux-6.9.10/drivers/tee/mbedtee/supp.c	2024-11-20 17:11:08.715744791 +0800
+@@ -0,0 +1,210 @@
++// SPDX-License-Identifier: GPL-2.0-only
++/*
++ * Copyright (c) 2015, Linaro Limited
++ */
++#include <linux/device.h>
++#include <linux/slab.h>
++#include <linux/uaccess.h>
++#include <linux/highmem.h>
++#include <asm/cacheflush.h>
++
++#include "mbedtee_drv.h"
++
++struct mbedtee_supp_req {
++	int ret;
++	u32 func;
++
++	struct list_head node;
++
++	struct tee_shm *shm;
++	void *data;
++	size_t size;
++
++	struct completion c;
++};
++
++void mbedtee_supp_init(struct mbedtee_supp *supp)
++{
++	memset(supp, 0, sizeof(*supp));
++	mutex_init(&supp->mutex);
++	init_completion(&supp->reqs_c);
++	INIT_LIST_HEAD(&supp->reqs);
++}
++
++void mbedtee_supp_uninit(struct mbedtee_supp *supp)
++{
++	mutex_destroy(&supp->mutex);
++}
++
++void mbedtee_supp_release(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *r, *n;
++
++	mutex_lock(&supp->mutex);
++
++	list_for_each_entry_safe(r, n, &supp->reqs, node) {
++		list_del(&r->node);
++		r->ret = -ERESTARTSYS;
++		complete(&r->c);
++	}
++
++	supp->ctx = NULL;
++	supp->req = NULL;
++
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_enqueue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_add_tail(&req->node, &supp->reqs);
++	mutex_unlock(&supp->mutex);
++}
++
++static void supp_dequeue_req(struct mbedtee_supp *supp,
++	struct mbedtee_supp_req *req)
++{
++	mutex_lock(&supp->mutex);
++	list_del(&req->node);
++	mutex_unlock(&supp->mutex);
++}
++
++/*
++ * receive the request from mbedtee,
++ * then push it to mbedtee_supp
++ */
++int mbedtee_supp_handler(struct mbedtee_clnt *clnt,
++	u32 func, void *data, size_t size)
++{
++	int ret = -1;
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = kzalloc(sizeof(*req), GFP_KERNEL);
++
++	if (req == NULL)
++		return -ENOMEM;
++
++	init_completion(&req->c);
++	req->func = func;
++	req->data = data;
++	req->size = size;
++
++	supp_enqueue_req(supp, req);
++
++	/* wakeup the mbedtee_supp daemon to handle this request */
++	complete(&supp->reqs_c);
++
++	if (wait_for_completion_interruptible(&req->c)) {
++		req->ret = -ERESTARTSYS;
++		supp_dequeue_req(supp, req);
++	}
++
++	ret = req->ret;
++	kfree(req);
++	return ret;
++}
++
++static struct mbedtee_supp_req *supp_pop_req(struct mbedtee_supp *supp)
++{
++	struct mbedtee_supp_req *req;
++
++	mutex_lock(&supp->mutex);
++
++	/*
++	 * last request not finishs
++	 */
++	if (supp->req != NULL) {
++		req = ERR_PTR(-EINVAL);
++		goto out;
++	}
++
++	req = list_first_entry_or_null(&supp->reqs,
++			struct mbedtee_supp_req, node);
++
++	if (req) {
++		list_del(&req->node);
++		supp->req = req;
++	}
++
++out:
++	mutex_unlock(&supp->mutex);
++	return req;
++}
++
++/*
++ * receive request for mbedtee_supp
++ */
++int mbedtee_supp_recv(struct tee_context *ctx,
++	u32 *func, u32 *num_params, struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = NULL;
++	struct mbedtee_context_data *d = ctx->data;
++	struct tee_shm *shm = param->u.memref.shm;
++
++	if (*num_params != 1)
++		return -EINVAL;
++
++	if ((tee_param_is_memref(param) != true) ||
++		(param->u.memref.shm == NULL))
++		return -EINVAL;
++
++	d->is_supp_ctx = true;
++
++	tee_shm_put(shm);
++
++	while (true) {
++		req = supp_pop_req(supp);
++		if (IS_ERR(req))
++			return PTR_ERR(req);
++
++		if (req != NULL)
++			break;
++
++		if (wait_for_completion_interruptible(&supp->reqs_c))
++			return -ERESTARTSYS;
++	}
++
++	if (req->size > param->u.memref.size)
++		return -EOVERFLOW;
++
++	*func = req->func;
++	req->shm = shm;
++
++	memcpy(shm->kaddr, req->data, req->size);
++	param->u.memref.size = req->size;
++
++	return 0;
++}
++
++/*
++ * mbedtee_supp send result to mbedtee_supp_handler()
++ */
++int mbedtee_supp_send(struct tee_context *ctx, u32 ret, u32 num_params,
++		    struct tee_param *param)
++{
++	struct tee_device *teedev = ctx->teedev;
++	struct mbedtee_clnt *clnt = tee_get_drvdata(teedev);
++	struct mbedtee_supp *supp = &clnt->supp;
++	struct mbedtee_supp_req *req = supp->req;
++
++	if (IS_ERR_OR_NULL(req))
++		return PTR_ERR(req);
++
++	if (req->size < param->u.memref.size)
++		ret = -EOVERFLOW;
++
++	req->ret = ret;
++	memcpy(req->data, req->shm->kaddr, param->u.memref.size);
++
++	mutex_lock(&supp->mutex);
++	supp->req = NULL;
++	mutex_unlock(&supp->mutex);
++
++	/* wakeup mbedtee_supp_handler() */
++	complete(&req->c);
++
++	return 0;
++}
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tee/tee_core.c linux-6.9.10/drivers/tee/tee_core.c
+--- linux-6.9.10-ori/drivers/tee/tee_core.c	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/drivers/tee/tee_core.c	2024-11-20 17:45:56.171779555 +0800
+@@ -578,8 +578,10 @@ static int tee_ioctl_invoke(struct tee_c
+ 			return -ENOMEM;
+ 		uparams = uarg->params;
+ 		rc = params_from_user(ctx, params, arg.num_params, uparams);
+-		if (rc)
++		if (rc) {
++			pr_emerg("rc %d\n", rc);
+ 			goto out;
++		}
+ 	}
+ 
+ 	rc = ctx->teedev->desc->ops->invoke_func(ctx, &arg, params);
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/drivers/tty/serial/amba-pl011.c linux-6.9.10/drivers/tty/serial/amba-pl011.c
+--- linux-6.9.10-ori/drivers/tty/serial/amba-pl011.c	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/drivers/tty/serial/amba-pl011.c	2024-11-20 17:11:08.716744791 +0800
+@@ -2575,6 +2575,51 @@ static int pl011_early_read(struct conso
+ #define pl011_early_read NULL
+ #endif
+ 
++static __init void __pl011_early_port_setup(struct uart_port *p)
++{
++	int brd_i = 0;
++	int brd_f = 0;
++	int baud = 115200, divisor = 16;
++
++	p->uartclk = 24000000;
++
++	/*
++	 * Disable all
++	 */
++	iowrite32(0, p->membase + UART011_CR);
++
++	/* mask/clear all interrupt */
++	iowrite32(0, p->membase + UART011_IMSC);
++	iowrite32(UART011_OEIC | UART011_BEIC | UART011_PEIC |
++				UART011_FEIC | UART011_RTIC | UART011_RXIC,
++			p->membase + UART011_ICR);
++
++	/* Baud rate divisor
++	 *	BAUDDIV = (FUARTCLK/ {16 * Baud rate})
++	 *  fractional part, m = integer((x * 64) + 0.5)
++	 */
++	brd_i = p->uartclk * 64 / (baud * divisor);
++	brd_f = brd_i & 0x3F;
++	brd_i >>= 6;
++	iowrite32(brd_i, p->membase + UART011_IBRD);
++	iowrite32(brd_f, p->membase + UART011_FBRD);
++
++	/*
++	 * 8-bit data, 1-bit stop, none-parity, with FIFO
++	 */
++	iowrite32(UART01x_LCRH_WLEN_8 | UART01x_LCRH_FEN,
++				p->membase + UART011_LCRH);
++	iowrite32(UART011_IFLS_RX4_8 | UART011_IFLS_TX4_8,
++				p->membase + UART011_IFLS);
++
++	/*
++	 * Enable UART - TX only
++	 */
++	iowrite32(UART01x_CR_UARTEN | UART011_CR_TXE,
++				p->membase + UART011_CR);
++	iowrite32(UART011_TXIM, p->membase + UART011_IMSC);
++}
++
+ /*
+  * On non-ACPI systems, earlycon is enabled by specifying
+  * "earlycon=pl011,<address>" on the kernel command line.
+@@ -2593,6 +2638,8 @@ static int __init pl011_early_console_se
+ 	if (!device->port.membase)
+ 		return -ENODEV;
+ 
++	__pl011_early_port_setup(&device->port);
++
+ 	device->con->write = pl011_early_write;
+ 	device->con->read = pl011_early_read;
+ 
+diff -uprN '--exclude=.*' '--exclude=GNU*' linux-6.9.10-ori/include/uapi/linux/tee.h linux-6.9.10/include/uapi/linux/tee.h
+--- linux-6.9.10-ori/include/uapi/linux/tee.h	2024-07-18 19:22:56.000000000 +0800
++++ linux-6.9.10/include/uapi/linux/tee.h	2024-11-20 17:11:08.718744791 +0800
+@@ -57,6 +57,8 @@
+ #define TEE_IMPL_ID_OPTEE	1
+ #define TEE_IMPL_ID_AMDTEE	2
+ 
++#define TEE_IMPL_ID_MBEDTEE	8
++
+ /*
+  * OP-TEE specific capabilities
+  */
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/Makefile buildroot/Makefile
--- buildroot-ori/Makefile	2025-06-16 15:08:01.200128214 +0800
+++ buildroot/Makefile	2025-06-15 21:00:46.993449288 +0800
@@ -535,6 +535,7 @@ include $(sort $(wildcard package/*/*.mk
 
 include boot/common.mk
 include linux/linux.mk
+include tee/common.mk
 include fs/common.mk
 
 # If using a br2-external tree, the BR2_EXTERNAL_$(NAME)_PATH variables
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/package/busybox/inittab buildroot/package/busybox/inittab
--- buildroot-ori/package/busybox/inittab	2025-06-16 15:08:01.589392720 +0800
+++ buildroot/package/busybox/inittab	2025-06-15 21:00:46.995450331 +0800
@@ -29,7 +29,7 @@ null::sysinit:/bin/ln -sf /proc/self/fd/
 ::sysinit:/etc/init.d/rcS
 
 # Put a getty on the serial port
-#ttyS0::respawn:/sbin/getty -L ttyS0 115200 vt100 # GENERIC_SERIAL
+console::respawn:-/bin/sh
 
 # Stuff to do for the 3-finger salute
 #::ctrlaltdel:/sbin/reboot
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/package/pkg-autotools.mk buildroot/package/pkg-autotools.mk
--- buildroot-ori/package/pkg-autotools.mk	2025-06-16 15:08:02.466983816 +0800
+++ buildroot/package/pkg-autotools.mk	2025-06-15 21:00:46.996450853 +0800
@@ -200,6 +200,7 @@ else
 # because it often relies on host tools which may or may not be
 # installed.
 define $(2)_CONFIGURE_CMDS
+	@cd $$($$(PKG)_SRCDIR) && find . -exec touch -c -t 202010010000 --time=mtime '{}' +
 	(cd $$($$(PKG)_SRCDIR) && rm -rf config.cache; \
 	$$(HOST_CONFIGURE_OPTS) \
 	$$($$(PKG)_CONF_ENV) \
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/package/pkg-generic.mk buildroot/package/pkg-generic.mk
--- buildroot-ori/package/pkg-generic.mk	2025-06-16 15:08:02.467984485 +0800
+++ buildroot/package/pkg-generic.mk	2025-06-15 21:00:46.997451374 +0800
@@ -215,6 +215,7 @@ $(BUILD_DIR)/%/.stamp_extracted:
 	$(Q)chmod -R +rw $(@D)
 	$(foreach hook,$($(PKG)_POST_EXTRACT_HOOKS),$(call $(hook))$(sep))
 	@$(call step_end,extract)
+	@find $(@D) -exec touch -c -t 202010010000 --time=mtime '{}' +
 	$(Q)touch $@
 
 # Rsync the source directory if the <pkg>_OVERRIDE_SRCDIR feature is
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/common.mk buildroot/tee/common.mk
--- buildroot-ori/tee/common.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/common.mk	2025-05-31 23:12:46.397382555 +0800
@@ -0,0 +1 @@
+include $(sort $(wildcard tee/*/*.mk))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/Config.in buildroot/tee/Config.in
--- buildroot-ori/tee/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/Config.in	2025-05-31 23:12:46.397382555 +0800
@@ -0,0 +1,8 @@
+menu "TEE"
+
+source "tee/mbedtee/Config.in"
+
+source "tee/linux/Config.in"
+
+endmenu
+
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/armv7a_ca5_linux_config buildroot/tee/linux/armv7a_ca5_linux_config
--- buildroot-ori/tee/linux/armv7a_ca5_linux_config	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/armv7a_ca5_linux_config	2025-05-31 23:12:46.398383055 +0800
@@ -0,0 +1,1945 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/arm 6.9.10 Kernel Configuration
+#
+CONFIG_CC_VERSION_TEXT="arm-none-linux-gnueabihf-gcc (Arm GNU Toolchain 13.2.rel1 (Build arm-13.7)) 13.2.1 20231009"
+CONFIG_CC_IS_GCC=y
+CONFIG_GCC_VERSION=130201
+CONFIG_CLANG_VERSION=0
+CONFIG_AS_IS_GNU=y
+CONFIG_AS_VERSION=24100
+CONFIG_LD_IS_BFD=y
+CONFIG_LD_VERSION=24100
+CONFIG_LLD_VERSION=0
+CONFIG_CC_CAN_LINK=y
+CONFIG_CC_CAN_LINK_STATIC=y
+CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
+CONFIG_CC_HAS_ASM_GOTO_TIED_OUTPUT=y
+CONFIG_GCC_ASM_GOTO_OUTPUT_WORKAROUND=y
+CONFIG_CC_HAS_ASM_INLINE=y
+CONFIG_CC_HAS_NO_PROFILE_FN_ATTR=y
+CONFIG_PAHOLE_VERSION=0
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_TABLE_SORT=y
+CONFIG_THREAD_INFO_IN_TASK=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+# CONFIG_COMPILE_TEST is not set
+# CONFIG_WERROR is not set
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_BUILD_SALT=""
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_XZ=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_HAVE_KERNEL_LZ4=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_XZ is not set
+# CONFIG_KERNEL_LZO is not set
+# CONFIG_KERNEL_LZ4 is not set
+CONFIG_DEFAULT_INIT=""
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_WATCH_QUEUE is not set
+# CONFIG_CROSS_MEMORY_ATTACH is not set
+# CONFIG_USELIB is not set
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_IRQ_SHOW_LEVEL=y
+CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK=y
+CONFIG_GENERIC_IRQ_MIGRATION=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+CONFIG_IRQ_DOMAIN_HIERARCHY=y
+CONFIG_GENERIC_IRQ_IPI=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+# CONFIG_GENERIC_IRQ_DEBUGFS is not set
+# end of IRQ subsystem
+
+CONFIG_GENERIC_IRQ_MULTI_HANDLER=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_CONTEXT_TRACKING=y
+CONFIG_CONTEXT_TRACKING_IDLE=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+# CONFIG_NO_HZ_IDLE is not set
+CONFIG_NO_HZ_FULL=y
+CONFIG_CONTEXT_TRACKING_USER=y
+# CONFIG_CONTEXT_TRACKING_USER_FORCE is not set
+# CONFIG_NO_HZ is not set
+CONFIG_HIGH_RES_TIMERS=y
+# end of Timers subsystem
+
+CONFIG_HAVE_EBPF_JIT=y
+
+#
+# BPF subsystem
+#
+# CONFIG_BPF_SYSCALL is not set
+# end of BPF subsystem
+
+CONFIG_PREEMPT_BUILD=y
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_PREEMPT_COUNT=y
+CONFIG_PREEMPTION=y
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_VIRT_CPU_ACCOUNTING=y
+CONFIG_VIRT_CPU_ACCOUNTING_GEN=y
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_PSI is not set
+# end of CPU/Task time and stats accounting
+
+CONFIG_CPU_ISOLATION=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+CONFIG_PREEMPT_RCU=y
+# CONFIG_RCU_EXPERT is not set
+CONFIG_TREE_SRCU=y
+CONFIG_NEED_SRCU_NMI_SAFE=y
+CONFIG_RCU_STALL_COMMON=y
+CONFIG_RCU_NEED_SEGCBLIST=y
+CONFIG_RCU_NOCB_CPU=y
+# CONFIG_RCU_NOCB_CPU_DEFAULT_ALL is not set
+# CONFIG_RCU_LAZY is not set
+# end of RCU Subsystem
+
+CONFIG_IKCONFIG=y
+# CONFIG_IKCONFIG_PROC is not set
+# CONFIG_IKHEADERS is not set
+CONFIG_LOG_BUF_SHIFT=16
+CONFIG_LOG_CPU_MAX_BUF_SHIFT=12
+# CONFIG_PRINTK_INDEX is not set
+CONFIG_GENERIC_SCHED_CLOCK=y
+
+#
+# Scheduler features
+#
+# end of Scheduler features
+
+CONFIG_CC_IMPLICIT_FALLTHROUGH="-Wimplicit-fallthrough=5"
+CONFIG_GCC10_NO_ARRAY_BOUNDS=y
+CONFIG_CC_NO_ARRAY_BOUNDS=y
+CONFIG_GCC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CGROUPS=y
+# CONFIG_CGROUP_FAVOR_DYNMODS is not set
+# CONFIG_MEMCG is not set
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+CONFIG_CFS_BANDWIDTH=y
+CONFIG_RT_GROUP_SCHED=y
+# CONFIG_CGROUP_PIDS is not set
+# CONFIG_CGROUP_RDMA is not set
+# CONFIG_CGROUP_FREEZER is not set
+# CONFIG_CPUSETS is not set
+# CONFIG_CGROUP_DEVICE is not set
+# CONFIG_CGROUP_CPUACCT is not set
+# CONFIG_CGROUP_MISC is not set
+# CONFIG_CGROUP_DEBUG is not set
+# CONFIG_NAMESPACES is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+# CONFIG_SCHED_AUTOGROUP is not set
+# CONFIG_RELAY is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE="${BR_BINARIES_DIR}/rootfs.cpio"
+CONFIG_INITRAMFS_FORCE=y
+CONFIG_INITRAMFS_ROOT_UID=0
+CONFIG_INITRAMFS_ROOT_GID=0
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+# CONFIG_RD_LZ4 is not set
+# CONFIG_RD_ZSTD is not set
+CONFIG_INITRAMFS_COMPRESSION_GZIP=y
+# CONFIG_INITRAMFS_COMPRESSION_NONE is not set
+# CONFIG_BOOT_CONFIG is not set
+CONFIG_INITRAMFS_PRESERVE_MTIME=y
+CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_LD_ORPHAN_WARN=y
+CONFIG_LD_ORPHAN_WARN_LEVEL="warn"
+CONFIG_SYSCTL=y
+CONFIG_HAVE_UID16=y
+CONFIG_EXPERT=y
+CONFIG_UID16=y
+CONFIG_MULTIUSER=y
+# CONFIG_SGETMASK_SYSCALL is not set
+CONFIG_SYSFS_SYSCALL=y
+# CONFIG_FHANDLE is not set
+CONFIG_POSIX_TIMERS=y
+CONFIG_PRINTK=y
+# CONFIG_BUG is not set
+CONFIG_ELF_CORE=y
+# CONFIG_BASE_FULL is not set
+CONFIG_FUTEX=y
+CONFIG_FUTEX_PI=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+# CONFIG_SHMEM is not set
+# CONFIG_AIO is not set
+# CONFIG_IO_URING is not set
+# CONFIG_ADVISE_SYSCALLS is not set
+CONFIG_MEMBARRIER=y
+# CONFIG_KCMP is not set
+# CONFIG_RSEQ is not set
+CONFIG_CACHESTAT_SYSCALL=y
+# CONFIG_PC104 is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_SELFTEST is not set
+CONFIG_KALLSYMS_ALL=y
+CONFIG_KALLSYMS_BASE_RELATIVE=y
+CONFIG_ARCH_HAS_MEMBARRIER_SYNC_CORE=y
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PERF_USE_VMALLOC=y
+
+#
+# Kernel Performance Events And Counters
+#
+# CONFIG_PERF_EVENTS is not set
+# end of Kernel Performance Events And Counters
+
+# CONFIG_PROFILING is not set
+
+#
+# Kexec and crash features
+#
+# end of Kexec and crash features
+# end of General setup
+
+CONFIG_ARM=y
+CONFIG_ARM_HAS_GROUP_RELOCS=y
+CONFIG_SYS_SUPPORTS_APM_EMULATION=y
+CONFIG_HAVE_PROC_CPU=y
+CONFIG_NO_IOPORT_MAP=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_ARCH_SUPPORTS_UPROBES=y
+CONFIG_ARM_PATCH_PHYS_VIRT=y
+CONFIG_PGTABLE_LEVELS=2
+
+#
+# System Type
+#
+CONFIG_MMU=y
+CONFIG_ARCH_MMAP_RND_BITS_MIN=8
+CONFIG_ARCH_MMAP_RND_BITS_MAX=16
+CONFIG_ARCH_MULTIPLATFORM=y
+
+#
+# Platform selection
+#
+
+#
+# CPU Core family selection
+#
+# CONFIG_ARCH_MULTI_V6 is not set
+CONFIG_ARCH_MULTI_V7=y
+CONFIG_ARCH_MULTI_V6_V7=y
+# end of Platform selection
+
+# CONFIG_ARCH_VIRT is not set
+# CONFIG_ARCH_AIROHA is not set
+# CONFIG_ARCH_RDA is not set
+# CONFIG_ARCH_SUNPLUS is not set
+# CONFIG_ARCH_UNIPHIER is not set
+# CONFIG_ARCH_ACTIONS is not set
+# CONFIG_ARCH_ALPINE is not set
+# CONFIG_ARCH_ARTPEC is not set
+# CONFIG_ARCH_ASPEED is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_ARCH_BCM is not set
+# CONFIG_ARCH_BERLIN is not set
+# CONFIG_ARCH_DIGICOLOR is not set
+# CONFIG_ARCH_DOVE is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_HIGHBANK is not set
+# CONFIG_ARCH_HISI is not set
+# CONFIG_ARCH_HPE is not set
+# CONFIG_ARCH_MXC is not set
+# CONFIG_ARCH_KEYSTONE is not set
+# CONFIG_ARCH_MEDIATEK is not set
+# CONFIG_ARCH_MESON is not set
+# CONFIG_ARCH_MILBEAUT is not set
+# CONFIG_ARCH_MMP is not set
+# CONFIG_ARCH_MSTARV7 is not set
+# CONFIG_ARCH_MVEBU is not set
+# CONFIG_ARCH_NPCM is not set
+
+#
+# TI OMAP/AM/DM/DRA Family
+#
+# CONFIG_ARCH_OMAP3 is not set
+# CONFIG_ARCH_OMAP4 is not set
+# CONFIG_SOC_OMAP5 is not set
+# CONFIG_SOC_AM33XX is not set
+# CONFIG_SOC_AM43XX is not set
+# CONFIG_SOC_DRA7XX is not set
+# end of TI OMAP/AM/DM/DRA Family
+
+# CONFIG_ARCH_QCOM is not set
+# CONFIG_ARCH_REALTEK is not set
+# CONFIG_ARCH_ROCKCHIP is not set
+# CONFIG_ARCH_S5PV210 is not set
+# CONFIG_ARCH_RENESAS is not set
+# CONFIG_ARCH_INTEL_SOCFPGA is not set
+# CONFIG_PLAT_SPEAR is not set
+# CONFIG_ARCH_STI is not set
+# CONFIG_ARCH_STM32 is not set
+# CONFIG_ARCH_SUNXI is not set
+# CONFIG_ARCH_TEGRA is not set
+# CONFIG_ARCH_U8500 is not set
+# CONFIG_ARCH_REALVIEW is not set
+CONFIG_ARCH_VEXPRESS=y
+CONFIG_ARCH_VEXPRESS_CORTEX_A5_A9_ERRATA=y
+# CONFIG_ARCH_VEXPRESS_SPC is not set
+# CONFIG_ARCH_WM8850 is not set
+# CONFIG_ARCH_ZYNQ is not set
+CONFIG_PLAT_VERSATILE=y
+
+#
+# Processor Type
+#
+CONFIG_CPU_V7=y
+CONFIG_CPU_THUMB_CAPABLE=y
+CONFIG_CPU_32v6K=y
+CONFIG_CPU_32v7=y
+CONFIG_CPU_ABRT_EV7=y
+CONFIG_CPU_PABRT_V7=y
+CONFIG_CPU_CACHE_V7=y
+CONFIG_CPU_CACHE_VIPT=y
+CONFIG_CPU_COPY_V6=y
+CONFIG_CPU_TLB_V7=y
+CONFIG_CPU_HAS_ASID=y
+CONFIG_CPU_CP15=y
+CONFIG_CPU_CP15_MMU=y
+
+#
+# Processor Features
+#
+# CONFIG_ARM_LPAE is not set
+CONFIG_ARM_THUMB=y
+# CONFIG_ARM_THUMBEE is not set
+CONFIG_ARM_VIRT_EXT=y
+CONFIG_SWP_EMULATE=y
+CONFIG_CPU_LITTLE_ENDIAN=y
+# CONFIG_CPU_BIG_ENDIAN is not set
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_ICACHE_MISMATCH_WORKAROUND is not set
+# CONFIG_CPU_BPREDICT_DISABLE is not set
+CONFIG_CPU_SPECTRE=y
+# CONFIG_HARDEN_BRANCH_PREDICTOR is not set
+CONFIG_HARDEN_BRANCH_HISTORY=y
+# CONFIG_KUSER_HELPERS is not set
+# CONFIG_VDSO is not set
+CONFIG_MIGHT_HAVE_CACHE_L2X0=y
+# CONFIG_CACHE_L2X0 is not set
+CONFIG_ARM_L1_CACHE_SHIFT_6=y
+CONFIG_ARM_L1_CACHE_SHIFT=6
+CONFIG_ARM_DMA_MEM_BUFFERABLE=y
+CONFIG_DEBUG_ALIGN_RODATA=y
+# CONFIG_ARM_ERRATA_430973 is not set
+CONFIG_ARM_ERRATA_643719=y
+CONFIG_ARM_ERRATA_720789=y
+# CONFIG_ARM_ERRATA_754322 is not set
+# CONFIG_ARM_ERRATA_754327 is not set
+# CONFIG_ARM_ERRATA_764369 is not set
+# CONFIG_ARM_ERRATA_764319 is not set
+# CONFIG_ARM_ERRATA_775420 is not set
+# CONFIG_ARM_ERRATA_798181 is not set
+CONFIG_ARM_ERRATA_773022=y
+# CONFIG_ARM_ERRATA_818325_852422 is not set
+# CONFIG_ARM_ERRATA_821420 is not set
+# CONFIG_ARM_ERRATA_825619 is not set
+# CONFIG_ARM_ERRATA_857271 is not set
+# CONFIG_ARM_ERRATA_852421 is not set
+# CONFIG_ARM_ERRATA_852423 is not set
+# CONFIG_ARM_ERRATA_857272 is not set
+# end of System Type
+
+#
+# Bus support
+#
+# CONFIG_ARM_ERRATA_814220 is not set
+# end of Bus support
+
+#
+# Kernel Features
+#
+CONFIG_HAVE_SMP=y
+CONFIG_SMP=y
+CONFIG_SMP_ON_UP=y
+CONFIG_CURRENT_POINTER_IN_TPIDRURO=y
+CONFIG_IRQSTACKS=y
+CONFIG_ARM_CPU_TOPOLOGY=y
+CONFIG_SCHED_MC=y
+# CONFIG_SCHED_SMT is not set
+CONFIG_HAVE_ARM_SCU=y
+# CONFIG_HAVE_ARM_ARCH_TIMER is not set
+CONFIG_HAVE_ARM_TWD=y
+# CONFIG_MCPM is not set
+# CONFIG_BIG_LITTLE is not set
+CONFIG_VMSPLIT_3G=y
+# CONFIG_VMSPLIT_3G_OPT is not set
+# CONFIG_VMSPLIT_2G is not set
+# CONFIG_VMSPLIT_1G is not set
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_NR_CPUS=8
+CONFIG_HOTPLUG_CPU=y
+CONFIG_ARM_PSCI=y
+CONFIG_HZ_FIXED=0
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_200 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+# CONFIG_HZ_500 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_SCHED_HRTICK=y
+# CONFIG_THUMB2_KERNEL is not set
+CONFIG_ARM_PATCH_IDIV=y
+CONFIG_AEABI=y
+# CONFIG_OABI_COMPAT is not set
+CONFIG_ARCH_SELECT_MEMORY_MODEL=y
+CONFIG_ARCH_FLATMEM_ENABLE=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_HIGHMEM=y
+CONFIG_HIGHPTE=y
+CONFIG_CPU_SW_DOMAIN_PAN=y
+CONFIG_ARCH_FORCE_MAX_ORDER=10
+CONFIG_ALIGNMENT_TRAP=y
+# CONFIG_UACCESS_WITH_MEMCPY is not set
+# CONFIG_PARAVIRT is not set
+# CONFIG_PARAVIRT_TIME_ACCOUNTING is not set
+# CONFIG_XEN is not set
+CONFIG_CC_HAVE_STACKPROTECTOR_TLS=y
+# end of Kernel Features
+
+#
+# Boot options
+#
+CONFIG_USE_OF=y
+CONFIG_ARCH_WANT_FLAT_DTB_INSTALL=y
+CONFIG_ATAGS=y
+# CONFIG_DEPRECATED_PARAM_STRUCT is not set
+CONFIG_ZBOOT_ROM_TEXT=0
+CONFIG_ZBOOT_ROM_BSS=0
+# CONFIG_ARM_APPENDED_DTB is not set
+CONFIG_CMDLINE="console=ttyAMA0,115200n8 root=/dev/ram0 rootwait earlycon=pl011,mmio32,0x1c090000"
+# CONFIG_CMDLINE_FROM_BOOTLOADER is not set
+# CONFIG_CMDLINE_EXTEND is not set
+CONFIG_CMDLINE_FORCE=y
+CONFIG_ARCH_SUPPORTS_CRASH_DUMP=y
+CONFIG_AUTO_ZRELADDR=y
+# CONFIG_EFI is not set
+# end of Boot options
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_GOV_ATTR_SET=y
+CONFIG_CPU_FREQ_GOV_COMMON=y
+CONFIG_CPU_FREQ_STAT=y
+CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_GOV_POWERSAVE is not set
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_GOV_SCHEDUTIL is not set
+
+#
+# CPU frequency scaling drivers
+#
+# CONFIG_CPUFREQ_DT is not set
+# CONFIG_CPUFREQ_DT_PLATDEV is not set
+# end of CPU Frequency scaling
+
+#
+# CPU Idle
+#
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_MULTIPLE_DRIVERS=y
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_CPU_IDLE_GOV_TEO is not set
+CONFIG_DT_IDLE_STATES=y
+
+#
+# ARM CPU Idle Drivers
+#
+CONFIG_ARM_CPUIDLE=y
+# CONFIG_ARM_PSCI_CPUIDLE is not set
+# CONFIG_ARM_HIGHBANK_CPUIDLE is not set
+# end of ARM CPU Idle Drivers
+# end of CPU Idle
+# end of CPU Power Management
+
+#
+# Floating point emulation
+#
+
+#
+# At least one emulation must be selected
+#
+CONFIG_VFP=y
+CONFIG_VFPv3=y
+CONFIG_NEON=y
+CONFIG_KERNEL_MODE_NEON=y
+# end of Floating point emulation
+
+#
+# Power management options
+#
+# CONFIG_SUSPEND is not set
+# CONFIG_PM is not set
+# CONFIG_APM_EMULATION is not set
+CONFIG_CPU_PM=y
+# CONFIG_ENERGY_MODEL is not set
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_ARM_CPU_SUSPEND=y
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+# end of Power management options
+
+CONFIG_AS_VFP_VMRS_FPINST=y
+CONFIG_CPU_MITIGATIONS=y
+
+#
+# General architecture-dependent options
+#
+CONFIG_HOTPLUG_CORE_SYNC=y
+CONFIG_HOTPLUG_CORE_SYNC_DEAD=y
+CONFIG_JUMP_LABEL=y
+# CONFIG_STATIC_KEYS_SELFTEST is not set
+CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
+CONFIG_ARCH_USE_BUILTIN_BSWAP=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_OPTPROBES=y
+CONFIG_ARCH_CORRECT_STACKTRACE_ON_KRETPROBE=y
+CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y
+CONFIG_HAVE_NMI=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_ARCH_HAS_FORTIFY_SOURCE=y
+CONFIG_ARCH_HAS_KEEPINITRD=y
+CONFIG_ARCH_HAS_SET_MEMORY=y
+CONFIG_ARCH_HAS_CPU_FINALIZE_INIT=y
+CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y
+CONFIG_ARCH_32BIT_OFF_T=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_RSEQ=y
+CONFIG_HAVE_PERF_REGS=y
+CONFIG_HAVE_PERF_USER_STACK_DUMP=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_MMU_LAZY_TLB_REFCOUNT=y
+CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
+CONFIG_ARCH_WANT_IPC_PARSE_VERSION=y
+CONFIG_HAVE_ARCH_SECCOMP=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+# CONFIG_SECCOMP is not set
+CONFIG_HAVE_STACKPROTECTOR=y
+# CONFIG_STACKPROTECTOR is not set
+CONFIG_LTO_NONE=y
+CONFIG_HAVE_CONTEXT_TRACKING_USER=y
+CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
+CONFIG_MODULES_USE_ELF_REL=y
+CONFIG_HAVE_IRQ_EXIT_ON_IRQ_STACK=y
+CONFIG_HAVE_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_ARCH_HAS_ELF_RANDOMIZE=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_HAVE_EXIT_THREAD=y
+CONFIG_ARCH_MMAP_RND_BITS=8
+CONFIG_HAVE_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_64KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_256KB=y
+CONFIG_PAGE_SHIFT=12
+CONFIG_ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT=y
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_OLD_SIGSUSPEND3=y
+CONFIG_OLD_SIGACTION=y
+CONFIG_COMPAT_32BIT_TIME=y
+CONFIG_HAVE_ARCH_VMAP_STACK=y
+CONFIG_VMAP_STACK=y
+CONFIG_ARCH_OPTIONAL_KERNEL_RWX=y
+CONFIG_ARCH_OPTIONAL_KERNEL_RWX_DEFAULT=y
+CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y
+CONFIG_STRICT_KERNEL_RWX=y
+CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y
+# CONFIG_LOCK_EVENT_COUNTS is not set
+CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y
+CONFIG_HAVE_ARCH_PFN_VALID=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y
+# end of GCOV-based kernel profiling
+
+CONFIG_HAVE_GCC_PLUGINS=y
+# CONFIG_GCC_PLUGINS is not set
+CONFIG_FUNCTION_ALIGNMENT=0
+# end of General architecture-dependent options
+
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=1
+# CONFIG_MODULES is not set
+# CONFIG_BLOCK is not set
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_LOCK_SPIN_ON_OWNER=y
+CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE=y
+
+#
+# Executable file formats
+#
+CONFIG_BINFMT_ELF=y
+# CONFIG_BINFMT_ELF_FDPIC is not set
+CONFIG_ELFCORE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_BINFMT_SCRIPT=y
+CONFIG_ARCH_HAS_BINFMT_FLAT=y
+# CONFIG_BINFMT_FLAT is not set
+CONFIG_BINFMT_FLAT_ARGVP_ENVP_ON_STACK=y
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+# end of Executable file formats
+
+#
+# Memory Management options
+#
+
+#
+# Slab allocator options
+#
+CONFIG_SLUB=y
+# CONFIG_SLUB_TINY is not set
+CONFIG_SLAB_MERGE_DEFAULT=y
+# CONFIG_SLAB_FREELIST_RANDOM is not set
+# CONFIG_SLAB_FREELIST_HARDENED is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_SLUB_CPU_PARTIAL=y
+# CONFIG_RANDOM_KMALLOC_CACHES is not set
+# end of Slab allocator options
+
+# CONFIG_SHUFFLE_PAGE_ALLOCATOR is not set
+CONFIG_COMPAT_BRK=y
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_FLATMEM_MANUAL=y
+# CONFIG_SPARSEMEM_MANUAL is not set
+CONFIG_FLATMEM=y
+CONFIG_ARCH_KEEP_MEMBLOCK=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_COMPACTION=y
+CONFIG_COMPACT_UNEVICTABLE_DEFAULT=1
+# CONFIG_PAGE_REPORTING is not set
+CONFIG_MIGRATION=y
+CONFIG_PCP_BATCH_SCALE_MAX=5
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_ARCH_WANT_GENERAL_HUGETLB=y
+# CONFIG_CMA is not set
+CONFIG_GENERIC_EARLY_IOREMAP=y
+# CONFIG_IDLE_PAGE_TRACKING is not set
+CONFIG_ARCH_HAS_CPU_CACHE_ALIASING=y
+CONFIG_ARCH_HAS_CURRENT_STACK_POINTER=y
+# CONFIG_VM_EVENT_COUNTERS is not set
+# CONFIG_PERCPU_STATS is not set
+# CONFIG_GUP_TEST is not set
+# CONFIG_DMAPOOL_TEST is not set
+CONFIG_KMAP_LOCAL=y
+CONFIG_KMAP_LOCAL_NON_LINEAR_PTE_ARRAY=y
+# CONFIG_MEMFD_CREATE is not set
+# CONFIG_USERFAULTFD is not set
+# CONFIG_LRU_GEN is not set
+CONFIG_ARCH_SUPPORTS_PER_VMA_LOCK=y
+CONFIG_PER_VMA_LOCK=y
+CONFIG_LOCK_MM_AND_FIND_VMA=y
+
+#
+# Data Access Monitoring
+#
+# CONFIG_DAMON is not set
+# end of Data Access Monitoring
+# end of Memory Management options
+
+# CONFIG_NET is not set
+
+#
+# Device Drivers
+#
+CONFIG_ARM_AMBA=y
+CONFIG_HAVE_PCI=y
+CONFIG_GENERIC_PCI_IOMAP=y
+# CONFIG_PCI is not set
+# CONFIG_PCCARD is not set
+
+#
+# Generic Driver Options
+#
+# CONFIG_UEVENT_HELPER is not set
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+# CONFIG_DEVTMPFS_SAFE is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+
+#
+# Firmware loader
+#
+# CONFIG_FW_LOADER is not set
+# end of Firmware loader
+
+# CONFIG_ALLOW_DEV_COREDUMP is not set
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_DEBUG_TEST_DRIVER_REMOVE is not set
+CONFIG_GENERIC_CPU_AUTOPROBE=y
+CONFIG_GENERIC_CPU_VULNERABILITIES=y
+CONFIG_SOC_BUS=y
+CONFIG_REGMAP=y
+CONFIG_REGMAP_MMIO=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_DMA_FENCE_TRACE is not set
+CONFIG_GENERIC_ARCH_TOPOLOGY=y
+# CONFIG_FW_DEVLINK_SYNC_STATE_TIMEOUT is not set
+# end of Generic Driver Options
+
+#
+# Bus devices
+#
+CONFIG_VEXPRESS_CONFIG=y
+# CONFIG_MHI_BUS is not set
+# CONFIG_MHI_BUS_EP is not set
+# end of Bus devices
+
+#
+# Cache Drivers
+#
+# end of Cache Drivers
+
+#
+# Firmware Drivers
+#
+
+#
+# ARM System Control and Management Interface Protocol
+#
+# CONFIG_ARM_SCMI_PROTOCOL is not set
+# end of ARM System Control and Management Interface Protocol
+
+# CONFIG_FIRMWARE_MEMMAP is not set
+# CONFIG_TRUSTED_FOUNDATIONS is not set
+# CONFIG_GOOGLE_FIRMWARE is not set
+CONFIG_ARM_PSCI_FW=y
+# CONFIG_ARM_PSCI_CHECKER is not set
+
+#
+# Qualcomm firmware drivers
+#
+# end of Qualcomm firmware drivers
+
+CONFIG_HAVE_ARM_SMCCC=y
+CONFIG_HAVE_ARM_SMCCC_DISCOVERY=y
+CONFIG_ARM_SMCCC_SOC_ID=y
+
+#
+# Tegra firmware driver
+#
+# end of Tegra firmware driver
+# end of Firmware Drivers
+
+# CONFIG_GNSS is not set
+# CONFIG_MTD is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+# CONFIG_OF_UNITTEST is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_KOBJ=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_RESERVED_MEM=y
+# CONFIG_OF_OVERLAY is not set
+CONFIG_ARCH_MIGHT_HAVE_PC_PARPORT=y
+# CONFIG_PARPORT is not set
+
+#
+# NVME Support
+#
+# end of NVME Support
+
+#
+# Misc devices
+#
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_SRAM is not set
+# CONFIG_XILINX_SDFEC is not set
+# CONFIG_OPEN_DICE is not set
+# CONFIG_VCPU_STALL_DETECTOR is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_93CX6 is not set
+# end of EEPROM support
+
+#
+# Texas Instruments shared transport line discipline
+#
+# end of Texas Instruments shared transport line discipline
+
+#
+# Altera FPGA firmware download module (requires I2C)
+#
+# CONFIG_ECHO is not set
+# CONFIG_PVPANIC is not set
+# end of Misc devices
+
+#
+# SCSI device support
+#
+# end of SCSI device support
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+# CONFIG_INPUT_MATRIXKMAP is not set
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
+# CONFIG_INPUT_EVDEV is not set
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+# CONFIG_INPUT_KEYBOARD is not set
+# CONFIG_INPUT_MOUSE is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+# CONFIG_INPUT_TOUCHSCREEN is not set
+# CONFIG_INPUT_MISC is not set
+# CONFIG_RMI4_CORE is not set
+
+#
+# Hardware I/O ports
+#
+# CONFIG_SERIO is not set
+# CONFIG_GAMEPORT is not set
+# end of Hardware I/O ports
+# end of Input device support
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+# CONFIG_VT_HW_CONSOLE_BINDING is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_LEGACY_PTYS is not set
+CONFIG_LEGACY_TIOCSTI=y
+# CONFIG_LDISC_AUTOLOAD is not set
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_EARLYCON=y
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_AMBA_PL010 is not set
+CONFIG_SERIAL_AMBA_PL011=y
+CONFIG_SERIAL_AMBA_PL011_CONSOLE=y
+# CONFIG_SERIAL_EARLYCON_SEMIHOST is not set
+# CONFIG_SERIAL_UARTLITE is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_SIFIVE is not set
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_SERIAL_ARC is not set
+# CONFIG_SERIAL_FSL_LPUART is not set
+# CONFIG_SERIAL_FSL_LINFLEXUART is not set
+# CONFIG_SERIAL_CONEXANT_DIGICOLOR is not set
+# CONFIG_SERIAL_ST_ASC is not set
+# CONFIG_SERIAL_SPRD is not set
+# end of Serial drivers
+
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_NULL_TTY is not set
+# CONFIG_HVC_DCC is not set
+# CONFIG_SERIAL_DEV_BUS is not set
+# CONFIG_TTY_PRINTK is not set
+# CONFIG_VIRTIO_CONSOLE is not set
+# CONFIG_IPMI_HANDLER is not set
+CONFIG_HW_RANDOM=y
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+# CONFIG_HW_RANDOM_BA431 is not set
+# CONFIG_HW_RANDOM_CCTRNG is not set
+# CONFIG_HW_RANDOM_XIPHERA is not set
+CONFIG_HW_RANDOM_ARM_SMCCC_TRNG=y
+CONFIG_DEVMEM=y
+CONFIG_DEVPORT=y
+# CONFIG_TCG_TPM is not set
+# CONFIG_XILLYBUS is not set
+# end of Character devices
+
+#
+# I2C support
+#
+# CONFIG_I2C is not set
+# end of I2C support
+
+# CONFIG_I3C is not set
+# CONFIG_SPI is not set
+# CONFIG_SPMI is not set
+# CONFIG_HSI is not set
+# CONFIG_PPS is not set
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK_OPTIONAL=y
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# end of PTP clock support
+
+# CONFIG_PINCTRL is not set
+CONFIG_GPIOLIB=y
+CONFIG_GPIOLIB_FASTPATH_LIMIT=512
+CONFIG_OF_GPIO=y
+# CONFIG_DEBUG_GPIO is not set
+# CONFIG_GPIO_SYSFS is not set
+CONFIG_GPIO_CDEV=y
+CONFIG_GPIO_CDEV_V1=y
+CONFIG_GPIO_GENERIC=y
+
+#
+# Memory mapped GPIO drivers
+#
+# CONFIG_GPIO_74XX_MMIO is not set
+# CONFIG_GPIO_ALTERA is not set
+# CONFIG_GPIO_CADENCE is not set
+# CONFIG_GPIO_DWAPB is not set
+# CONFIG_GPIO_FTGPIO010 is not set
+CONFIG_GPIO_GENERIC_PLATFORM=y
+# CONFIG_GPIO_GRGPIO is not set
+# CONFIG_GPIO_HLWD is not set
+# CONFIG_GPIO_LOGICVC is not set
+# CONFIG_GPIO_MB86S7X is not set
+# CONFIG_GPIO_MPC8XXX is not set
+# CONFIG_GPIO_PL061 is not set
+# CONFIG_GPIO_SIFIVE is not set
+# CONFIG_GPIO_SYSCON is not set
+# CONFIG_GPIO_XILINX is not set
+# CONFIG_GPIO_ZEVIO is not set
+# CONFIG_GPIO_AMD_FCH is not set
+# end of Memory mapped GPIO drivers
+
+#
+# MFD GPIO expanders
+#
+# CONFIG_HTC_EGPIO is not set
+# end of MFD GPIO expanders
+
+#
+# Virtual GPIO drivers
+#
+# CONFIG_GPIO_AGGREGATOR is not set
+# CONFIG_GPIO_LATCH is not set
+# CONFIG_GPIO_MOCKUP is not set
+# CONFIG_GPIO_SIM is not set
+# end of Virtual GPIO drivers
+
+# CONFIG_W1 is not set
+CONFIG_POWER_RESET=y
+# CONFIG_POWER_RESET_BRCMKONA is not set
+# CONFIG_POWER_RESET_GPIO is not set
+# CONFIG_POWER_RESET_GPIO_RESTART is not set
+# CONFIG_POWER_RESET_LTC2952 is not set
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_RESET_VERSATILE is not set
+CONFIG_POWER_RESET_VEXPRESS=y
+# CONFIG_POWER_RESET_SYSCON is not set
+# CONFIG_POWER_RESET_SYSCON_POWEROFF is not set
+# CONFIG_SYSCON_REBOOT_MODE is not set
+# CONFIG_NVMEM_REBOOT_MODE is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_SAMSUNG_SDI is not set
+# CONFIG_BATTERY_BQ27XXX is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_LT3651 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_HWMON is not set
+# CONFIG_THERMAL is not set
+# CONFIG_WATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+CONFIG_MFD_CORE=y
+# CONFIG_MFD_ATMEL_FLEXCOM is not set
+# CONFIG_MFD_ATMEL_HLCDC is not set
+# CONFIG_MFD_MADERA is not set
+# CONFIG_MFD_HI6421_PMIC is not set
+# CONFIG_MFD_KEMPLD is not set
+# CONFIG_MFD_MT6397 is not set
+# CONFIG_MFD_PM8XXX is not set
+# CONFIG_MFD_SM501 is not set
+CONFIG_MFD_SYSCON=y
+# CONFIG_MFD_TQMX86 is not set
+CONFIG_MFD_VEXPRESS_SYSREG=y
+# end of Multifunction device drivers
+
+# CONFIG_REGULATOR is not set
+# CONFIG_RC_CORE is not set
+
+#
+# CEC support
+#
+# CONFIG_MEDIA_CEC_SUPPORT is not set
+# end of CEC support
+
+# CONFIG_MEDIA_SUPPORT is not set
+
+#
+# Graphics support
+#
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_DRM is not set
+# CONFIG_DRM_DEBUG_MODESET_LOCK is not set
+
+#
+# Frame buffer Devices
+#
+# CONFIG_FB is not set
+# end of Frame buffer Devices
+
+#
+# Backlight & LCD device support
+#
+# CONFIG_LCD_CLASS_DEVICE is not set
+# CONFIG_BACKLIGHT_CLASS_DEVICE is not set
+# end of Backlight & LCD device support
+
+#
+# Console display driver support
+#
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_DUMMY_CONSOLE_COLUMNS=80
+CONFIG_DUMMY_CONSOLE_ROWS=30
+# end of Console display driver support
+# end of Graphics support
+
+# CONFIG_SOUND is not set
+CONFIG_HID_SUPPORT=y
+# CONFIG_HID is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+# CONFIG_USB_SUPPORT is not set
+# CONFIG_MMC is not set
+# CONFIG_MEMSTICK is not set
+# CONFIG_NEW_LEDS is not set
+# CONFIG_ACCESSIBILITY is not set
+CONFIG_EDAC_ATOMIC_SCRUB=y
+CONFIG_EDAC_SUPPORT=y
+CONFIG_RTC_LIB=y
+# CONFIG_RTC_CLASS is not set
+# CONFIG_DMADEVICES is not set
+
+#
+# DMABUF options
+#
+# CONFIG_SYNC_FILE is not set
+# CONFIG_DMABUF_MOVE_NOTIFY is not set
+# CONFIG_DMABUF_DEBUG is not set
+# CONFIG_DMABUF_SELFTESTS is not set
+# CONFIG_DMABUF_HEAPS is not set
+# CONFIG_DMABUF_SYSFS_STATS is not set
+# end of DMABUF options
+
+# CONFIG_UIO is not set
+# CONFIG_VFIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+# CONFIG_VIRTIO_MENU is not set
+# CONFIG_VHOST_MENU is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+# end of Microsoft Hyper-V guest support
+
+# CONFIG_GREYBUS is not set
+# CONFIG_COMEDI is not set
+# CONFIG_STAGING is not set
+# CONFIG_GOLDFISH is not set
+# CONFIG_CHROME_PLATFORMS is not set
+# CONFIG_MELLANOX_PLATFORM is not set
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Clock driver for ARM Reference designs
+#
+CONFIG_CLK_ICST=y
+CONFIG_CLK_SP810=y
+# CONFIG_CLK_VEXPRESS_OSC is not set
+# end of Clock driver for ARM Reference designs
+
+# CONFIG_COMMON_CLK_AXI_CLKGEN is not set
+# CONFIG_COMMON_CLK_FIXED_MMIO is not set
+# CONFIG_XILINX_VCU is not set
+# CONFIG_COMMON_CLK_XLNX_CLKWZRD is not set
+# CONFIG_HWSPINLOCK is not set
+
+#
+# Clock Source drivers
+#
+CONFIG_TIMER_OF=y
+CONFIG_TIMER_PROBE=y
+CONFIG_CLKSRC_MMIO=y
+CONFIG_ARM_GLOBAL_TIMER=y
+CONFIG_ARM_GT_INITIAL_PRESCALER_VAL=1
+CONFIG_ARM_TIMER_SP804=y
+CONFIG_CLKSRC_ARM_GLOBAL_TIMER_SCHED_CLOCK=y
+CONFIG_CLKSRC_VERSATILE=y
+# CONFIG_MICROCHIP_PIT64B is not set
+# end of Clock Source drivers
+
+# CONFIG_MAILBOX is not set
+# CONFIG_IOMMU_SUPPORT is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_REMOTEPROC is not set
+# end of Remoteproc drivers
+
+#
+# Rpmsg drivers
+#
+# CONFIG_RPMSG_VIRTIO is not set
+# end of Rpmsg drivers
+
+# CONFIG_SOUNDWIRE is not set
+
+#
+# SOC (System On Chip) specific Drivers
+#
+
+#
+# Amlogic SoC drivers
+#
+# end of Amlogic SoC drivers
+
+#
+# Broadcom SoC drivers
+#
+# end of Broadcom SoC drivers
+
+#
+# NXP/Freescale QorIQ SoC drivers
+#
+# CONFIG_QUICC_ENGINE is not set
+# end of NXP/Freescale QorIQ SoC drivers
+
+#
+# fujitsu SoC drivers
+#
+# end of fujitsu SoC drivers
+
+#
+# i.MX SoC drivers
+#
+# end of i.MX SoC drivers
+
+#
+# Enable LiteX SoC Builder specific drivers
+#
+# CONFIG_LITEX_SOC_CONTROLLER is not set
+# end of Enable LiteX SoC Builder specific drivers
+
+# CONFIG_WPCM450_SOC is not set
+
+#
+# Qualcomm SoC drivers
+#
+# end of Qualcomm SoC drivers
+
+# CONFIG_SOC_TI is not set
+
+#
+# Xilinx SoC drivers
+#
+# end of Xilinx SoC drivers
+# end of SOC (System On Chip) specific Drivers
+
+#
+# PM Domains
+#
+
+#
+# Amlogic PM Domains
+#
+# end of Amlogic PM Domains
+
+#
+# Broadcom PM Domains
+#
+# end of Broadcom PM Domains
+
+#
+# i.MX PM Domains
+#
+# end of i.MX PM Domains
+
+#
+# Qualcomm PM Domains
+#
+# end of Qualcomm PM Domains
+# end of PM Domains
+
+# CONFIG_PM_DEVFREQ is not set
+# CONFIG_EXTCON is not set
+# CONFIG_MEMORY is not set
+# CONFIG_IIO is not set
+# CONFIG_PWM is not set
+
+#
+# IRQ chip support
+#
+CONFIG_IRQCHIP=y
+CONFIG_ARM_GIC=y
+CONFIG_ARM_GIC_MAX_NR=1
+# CONFIG_AL_FIC is not set
+# CONFIG_XILINX_INTC is not set
+# end of IRQ chip support
+
+# CONFIG_IPACK_BUS is not set
+# CONFIG_RESET_CONTROLLER is not set
+
+#
+# PHY Subsystem
+#
+# CONFIG_GENERIC_PHY is not set
+# CONFIG_PHY_CAN_TRANSCEIVER is not set
+
+#
+# PHY drivers for Broadcom platforms
+#
+# CONFIG_BCM_KONA_USB2_PHY is not set
+# end of PHY drivers for Broadcom platforms
+
+# CONFIG_PHY_CADENCE_TORRENT is not set
+# CONFIG_PHY_CADENCE_DPHY is not set
+# CONFIG_PHY_CADENCE_DPHY_RX is not set
+# CONFIG_PHY_CADENCE_SALVO is not set
+# CONFIG_PHY_PXA_28NM_HSIC is not set
+# CONFIG_PHY_PXA_28NM_USB2 is not set
+# CONFIG_PHY_LAN966X_SERDES is not set
+# CONFIG_PHY_OCELOT_SERDES is not set
+# end of PHY Subsystem
+
+# CONFIG_POWERCAP is not set
+# CONFIG_MCB is not set
+# CONFIG_RAS is not set
+
+#
+# Android
+#
+# CONFIG_ANDROID_BINDER_IPC is not set
+# end of Android
+
+# CONFIG_DAX is not set
+# CONFIG_NVMEM is not set
+
+#
+# HW tracing support
+#
+# CONFIG_STM is not set
+# CONFIG_INTEL_TH is not set
+# end of HW tracing support
+
+# CONFIG_FPGA is not set
+# CONFIG_FSI is not set
+CONFIG_TEE=y
+# CONFIG_OPTEE is not set
+CONFIG_MBEDTEE=y
+# CONFIG_SIOX is not set
+# CONFIG_SLIMBUS is not set
+# CONFIG_INTERCONNECT is not set
+# CONFIG_COUNTER is not set
+# CONFIG_PECI is not set
+# CONFIG_HTE is not set
+# end of Device Drivers
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+CONFIG_VALIDATE_FS_PARSER=y
+CONFIG_EXPORTFS=y
+# CONFIG_EXPORTFS_BLOCK_OPS is not set
+CONFIG_FILE_LOCKING=y
+# CONFIG_FS_ENCRYPTION is not set
+# CONFIG_FS_VERITY is not set
+CONFIG_FSNOTIFY=y
+# CONFIG_DNOTIFY is not set
+CONFIG_INOTIFY_USER=y
+CONFIG_FANOTIFY=y
+# CONFIG_QUOTA is not set
+# CONFIG_AUTOFS_FS is not set
+# CONFIG_FUSE_FS is not set
+# CONFIG_OVERLAY_FS is not set
+
+#
+# Caches
+#
+# end of Caches
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+# CONFIG_PROC_CHILDREN is not set
+CONFIG_KERNFS=y
+CONFIG_SYSFS=y
+# CONFIG_CONFIGFS_FS is not set
+# end of Pseudo filesystems
+
+# CONFIG_MISC_FILESYSTEMS is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
+# CONFIG_NLS_ISO8859_1 is not set
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+# CONFIG_NLS_UTF8 is not set
+# CONFIG_UNICODE is not set
+# end of File systems
+
+#
+# Security options
+#
+# CONFIG_KEYS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+# CONFIG_SECURITY is not set
+# CONFIG_SECURITYFS is not set
+# CONFIG_HARDENED_USERCOPY is not set
+# CONFIG_FORTIFY_SOURCE is not set
+# CONFIG_STATIC_USERMODEHELPER is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_LSM="yama,loadpin,safesetid,integrity,selinux,smack,tomoyo,apparmor"
+
+#
+# Kernel hardening options
+#
+
+#
+# Memory initialization
+#
+CONFIG_CC_HAS_AUTO_VAR_INIT_PATTERN=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO_BARE=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO=y
+CONFIG_INIT_STACK_NONE=y
+# CONFIG_INIT_STACK_ALL_PATTERN is not set
+# CONFIG_INIT_STACK_ALL_ZERO is not set
+# CONFIG_INIT_ON_ALLOC_DEFAULT_ON is not set
+# CONFIG_INIT_ON_FREE_DEFAULT_ON is not set
+CONFIG_CC_HAS_ZERO_CALL_USED_REGS=y
+# CONFIG_ZERO_CALL_USED_REGS is not set
+# end of Memory initialization
+
+#
+# Hardening of kernel data structures
+#
+# CONFIG_LIST_HARDENED is not set
+# CONFIG_BUG_ON_DATA_CORRUPTION is not set
+# end of Hardening of kernel data structures
+
+CONFIG_RANDSTRUCT_NONE=y
+# end of Kernel hardening options
+# end of Security options
+
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+# CONFIG_CRYPTO_MANAGER is not set
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+# CONFIG_CRYPTO_CRYPTD is not set
+# CONFIG_CRYPTO_AUTHENC is not set
+# CONFIG_CRYPTO_TEST is not set
+# end of Crypto core or helper
+
+#
+# Public-key cryptography
+#
+# CONFIG_CRYPTO_RSA is not set
+# CONFIG_CRYPTO_DH is not set
+# CONFIG_CRYPTO_ECDH is not set
+# CONFIG_CRYPTO_ECDSA is not set
+# CONFIG_CRYPTO_ECRDSA is not set
+# CONFIG_CRYPTO_SM2 is not set
+# CONFIG_CRYPTO_CURVE25519 is not set
+# end of Public-key cryptography
+
+#
+# Block ciphers
+#
+# CONFIG_CRYPTO_AES is not set
+# CONFIG_CRYPTO_AES_TI is not set
+# CONFIG_CRYPTO_ARIA is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+# CONFIG_CRYPTO_DES is not set
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_SM4_GENERIC is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+# end of Block ciphers
+
+#
+# Length-preserving ciphers and modes
+#
+# CONFIG_CRYPTO_ADIANTUM is not set
+# CONFIG_CRYPTO_CHACHA20 is not set
+# CONFIG_CRYPTO_CBC is not set
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+# CONFIG_CRYPTO_ECB is not set
+# CONFIG_CRYPTO_HCTR2 is not set
+# CONFIG_CRYPTO_KEYWRAP is not set
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+# end of Length-preserving ciphers and modes
+
+#
+# AEAD (authenticated encryption with associated data) ciphers
+#
+# CONFIG_CRYPTO_AEGIS128 is not set
+# CONFIG_CRYPTO_CHACHA20POLY1305 is not set
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+# CONFIG_CRYPTO_ECHAINIV is not set
+# CONFIG_CRYPTO_ESSIV is not set
+# end of AEAD (authenticated encryption with associated data) ciphers
+
+#
+# Hashes, digests, and MACs
+#
+# CONFIG_CRYPTO_BLAKE2B is not set
+# CONFIG_CRYPTO_CMAC is not set
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_HMAC is not set
+# CONFIG_CRYPTO_MD4 is not set
+# CONFIG_CRYPTO_MD5 is not set
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_POLY1305 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+CONFIG_CRYPTO_SHA1=y
+# CONFIG_CRYPTO_SHA256 is not set
+# CONFIG_CRYPTO_SHA512 is not set
+# CONFIG_CRYPTO_SHA3 is not set
+# CONFIG_CRYPTO_SM3_GENERIC is not set
+# CONFIG_CRYPTO_STREEBOG is not set
+# CONFIG_CRYPTO_VMAC is not set
+# CONFIG_CRYPTO_WP512 is not set
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_XXHASH is not set
+# end of Hashes, digests, and MACs
+
+#
+# CRCs (cyclic redundancy checks)
+#
+# CONFIG_CRYPTO_CRC32C is not set
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_CRCT10DIF is not set
+# end of CRCs (cyclic redundancy checks)
+
+#
+# Compression
+#
+# CONFIG_CRYPTO_DEFLATE is not set
+# CONFIG_CRYPTO_LZO is not set
+# CONFIG_CRYPTO_842 is not set
+# CONFIG_CRYPTO_LZ4 is not set
+# CONFIG_CRYPTO_LZ4HC is not set
+# CONFIG_CRYPTO_ZSTD is not set
+# end of Compression
+
+#
+# Random number generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+# CONFIG_CRYPTO_DRBG_MENU is not set
+# CONFIG_CRYPTO_JITTERENTROPY is not set
+# end of Random number generation
+
+#
+# Userspace interface
+#
+# end of Userspace interface
+
+#
+# Accelerated Cryptographic Algorithms for CPU (arm)
+#
+# CONFIG_CRYPTO_CURVE25519_NEON is not set
+# CONFIG_CRYPTO_GHASH_ARM_CE is not set
+# CONFIG_CRYPTO_NHPOLY1305_NEON is not set
+# CONFIG_CRYPTO_POLY1305_ARM is not set
+# CONFIG_CRYPTO_BLAKE2S_ARM is not set
+# CONFIG_CRYPTO_BLAKE2B_NEON is not set
+# CONFIG_CRYPTO_SHA1_ARM is not set
+# CONFIG_CRYPTO_SHA1_ARM_NEON is not set
+# CONFIG_CRYPTO_SHA1_ARM_CE is not set
+# CONFIG_CRYPTO_SHA2_ARM_CE is not set
+# CONFIG_CRYPTO_SHA256_ARM is not set
+# CONFIG_CRYPTO_SHA512_ARM is not set
+# CONFIG_CRYPTO_AES_ARM is not set
+# CONFIG_CRYPTO_AES_ARM_BS is not set
+# CONFIG_CRYPTO_AES_ARM_CE is not set
+# CONFIG_CRYPTO_CHACHA20_NEON is not set
+# CONFIG_CRYPTO_CRC32_ARM_CE is not set
+# end of Accelerated Cryptographic Algorithms for CPU (arm)
+
+CONFIG_CRYPTO_HW=y
+# CONFIG_CRYPTO_DEV_SAFEXCEL is not set
+# CONFIG_CRYPTO_DEV_CCREE is not set
+# CONFIG_CRYPTO_DEV_AMLOGIC_GXL is not set
+
+#
+# Certificates for signature checking
+#
+# end of Certificates for signature checking
+
+#
+# Library routines
+#
+# CONFIG_PACKING is not set
+CONFIG_BITREVERSE=y
+CONFIG_HAVE_ARCH_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+# CONFIG_CORDIC is not set
+# CONFIG_PRIME_NUMBERS is not set
+CONFIG_RATIONAL=y
+CONFIG_ARCH_USE_CMPXCHG_LOCKREF=y
+
+#
+# Crypto library routines
+#
+CONFIG_CRYPTO_LIB_UTILS=y
+CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
+# CONFIG_CRYPTO_LIB_CHACHA is not set
+# CONFIG_CRYPTO_LIB_CURVE25519 is not set
+CONFIG_CRYPTO_LIB_POLY1305_RSIZE=9
+# CONFIG_CRYPTO_LIB_POLY1305 is not set
+# CONFIG_CRYPTO_LIB_CHACHA20POLY1305 is not set
+CONFIG_CRYPTO_LIB_SHA1=y
+# end of Crypto library routines
+
+# CONFIG_CRC_CCITT is not set
+# CONFIG_CRC16 is not set
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC64_ROCKSOFT is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC64 is not set
+# CONFIG_CRC4 is not set
+# CONFIG_CRC7 is not set
+# CONFIG_LIBCRC32C is not set
+# CONFIG_CRC8 is not set
+# CONFIG_RANDOM32_SELFTEST is not set
+CONFIG_ZLIB_INFLATE=y
+# CONFIG_XZ_DEC is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_DMA_OPS=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_DMA_DECLARE_COHERENT=y
+CONFIG_ARCH_HAS_SETUP_DMA_OPS=y
+CONFIG_ARCH_HAS_TEARDOWN_DMA_OPS=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_DEVICE=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_CPU=y
+CONFIG_DMA_NONCOHERENT_MMAP=y
+CONFIG_ARCH_HAS_DMA_ALLOC=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_DMA_MAP_BENCHMARK is not set
+# CONFIG_FORCE_NR_CPUS is not set
+CONFIG_GLOB=y
+# CONFIG_GLOB_SELFTEST is not set
+# CONFIG_IRQ_POLL is not set
+CONFIG_LIBFDT=y
+CONFIG_ARCH_STACKWALK=y
+CONFIG_STACKDEPOT=y
+CONFIG_STACKDEPOT_MAX_FRAMES=64
+# CONFIG_LWQ_TEST is not set
+# end of Library routines
+
+CONFIG_GENERIC_LIB_DEVMEM_IS_ALLOWED=y
+
+#
+# Kernel hacking
+#
+
+#
+# printk and dmesg options
+#
+CONFIG_PRINTK_TIME=y
+# CONFIG_PRINTK_CALLER is not set
+# CONFIG_STACKTRACE_BUILD_ID is not set
+CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7
+CONFIG_CONSOLE_LOGLEVEL_QUIET=4
+CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_DYNAMIC_DEBUG_CORE is not set
+# CONFIG_SYMBOLIC_ERRNAME is not set
+# end of printk and dmesg options
+
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_MISC is not set
+
+#
+# Compile-time checks and compiler options
+#
+CONFIG_AS_HAS_NON_CONST_ULEB128=y
+CONFIG_DEBUG_INFO_NONE=y
+# CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set
+# CONFIG_DEBUG_INFO_DWARF4 is not set
+# CONFIG_DEBUG_INFO_DWARF5 is not set
+CONFIG_FRAME_WARN=1024
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_HEADERS_INSTALL is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_SECTION_MISMATCH_WARN_ONLY=y
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+CONFIG_FRAME_POINTER=y
+# CONFIG_VMLINUX_MAP is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# end of Compile-time checks and compiler options
+
+#
+# Generic Kernel Debugging Instruments
+#
+# CONFIG_MAGIC_SYSRQ is not set
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_FS_ALLOW_ALL=y
+# CONFIG_DEBUG_FS_DISALLOW_MOUNT is not set
+# CONFIG_DEBUG_FS_ALLOW_NONE is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+CONFIG_ARCH_HAS_UBSAN=y
+# CONFIG_UBSAN is not set
+CONFIG_HAVE_KCSAN_COMPILER=y
+# end of Generic Kernel Debugging Instruments
+
+#
+# Networking Debugging
+#
+# end of Networking Debugging
+
+#
+# Memory Debugging
+#
+# CONFIG_PAGE_EXTENSION is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+CONFIG_SLUB_DEBUG=y
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_PAGE_OWNER is not set
+# CONFIG_PAGE_POISONING is not set
+# CONFIG_DEBUG_RODATA_TEST is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_PER_VMA_LOCK_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SHRINKER_DEBUG is not set
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_SCHED_STACK_END_CHECK is not set
+# CONFIG_DEBUG_VM is not set
+CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y
+# CONFIG_DEBUG_VIRTUAL is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+# CONFIG_DEBUG_KMAP_LOCAL is not set
+# CONFIG_DEBUG_HIGHMEM is not set
+CONFIG_HAVE_ARCH_KASAN=y
+CONFIG_HAVE_ARCH_KASAN_VMALLOC=y
+CONFIG_CC_HAS_KASAN_GENERIC=y
+CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y
+# CONFIG_KASAN is not set
+CONFIG_HAVE_ARCH_KFENCE=y
+# CONFIG_KFENCE is not set
+# end of Memory Debugging
+
+# CONFIG_DEBUG_SHIRQ is not set
+
+#
+# Debug Oops, Lockups and Hangs
+#
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+CONFIG_PANIC_TIMEOUT=0
+# CONFIG_SOFTLOCKUP_DETECTOR is not set
+CONFIG_HAVE_HARDLOCKUP_DETECTOR_BUDDY=y
+# CONFIG_HARDLOCKUP_DETECTOR is not set
+# CONFIG_DETECT_HUNG_TASK is not set
+# CONFIG_WQ_WATCHDOG is not set
+# CONFIG_WQ_CPU_INTENSIVE_REPORT is not set
+# end of Debug Oops, Lockups and Hangs
+
+#
+# Scheduler Debugging
+#
+# CONFIG_SCHED_DEBUG is not set
+# CONFIG_SCHEDSTATS is not set
+# end of Scheduler Debugging
+
+# CONFIG_DEBUG_TIMEKEEPING is not set
+CONFIG_DEBUG_PREEMPT=y
+
+#
+# Lock Debugging (spinlocks, mutexes, etc...)
+#
+CONFIG_LOCK_DEBUGGING_SUPPORT=y
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_WW_MUTEX_SLOWPATH is not set
+# CONFIG_DEBUG_RWSEMS is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+# CONFIG_LOCK_TORTURE_TEST is not set
+# CONFIG_WW_MUTEX_SELFTEST is not set
+# CONFIG_SCF_TORTURE_TEST is not set
+# end of Lock Debugging (spinlocks, mutexes, etc...)
+
+# CONFIG_DEBUG_IRQFLAGS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_WARN_ALL_UNSEEDED_RANDOM is not set
+# CONFIG_DEBUG_KOBJECT is not set
+
+#
+# Debug kernel data structures
+#
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_DEBUG_PLIST is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_MAPLE_TREE is not set
+# end of Debug kernel data structures
+
+#
+# RCU Debugging
+#
+# CONFIG_RCU_SCALE_TEST is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+# CONFIG_RCU_REF_SCALE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=21
+CONFIG_RCU_EXP_CPU_STALL_TIMEOUT=0
+# CONFIG_RCU_CPU_STALL_CPUTIME is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_RCU_EQS_DEBUG is not set
+# end of RCU Debugging
+
+# CONFIG_DEBUG_WQ_FORCE_RR_CPU is not set
+# CONFIG_CPU_HOTPLUG_STATE_CONTROL is not set
+# CONFIG_LATENCYTOP is not set
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_HAVE_BUILDTIME_MCOUNT_SORT=y
+CONFIG_TRACING_SUPPORT=y
+# CONFIG_FTRACE is not set
+# CONFIG_SAMPLES is not set
+# CONFIG_STRICT_DEVMEM is not set
+
+#
+# arm Debugging
+#
+# CONFIG_ARM_PTDUMP_DEBUGFS is not set
+# CONFIG_ARM_DEBUG_WX is not set
+CONFIG_UNWINDER_FRAME_POINTER=y
+# CONFIG_UNWINDER_ARM is not set
+# CONFIG_BACKTRACE_VERBOSE is not set
+# CONFIG_DEBUG_USER is not set
+# CONFIG_DEBUG_LL is not set
+CONFIG_DEBUG_LL_INCLUDE="mach/debug-macro.S"
+CONFIG_UNCOMPRESS_INCLUDE="debug/uncompress.h"
+# CONFIG_PID_IN_CONTEXTIDR is not set
+# CONFIG_CORESIGHT is not set
+# end of arm Debugging
+
+#
+# Kernel Testing and Coverage
+#
+# CONFIG_KUNIT is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+CONFIG_ARCH_HAS_KCOV=y
+CONFIG_CC_HAS_SANCOV_TRACE_PC=y
+# CONFIG_KCOV is not set
+# CONFIG_RUNTIME_TESTING_MENU is not set
+CONFIG_ARCH_USE_MEMTEST=y
+# CONFIG_MEMTEST is not set
+# end of Kernel Testing and Coverage
+
+#
+# Rust hacking
+#
+# end of Rust hacking
+# end of Kernel hacking
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/armv7a_linux_config buildroot/tee/linux/armv7a_linux_config
--- buildroot-ori/tee/linux/armv7a_linux_config	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/armv7a_linux_config	2025-05-31 23:12:46.399383555 +0800
@@ -0,0 +1,1947 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/arm 6.9.10 Kernel Configuration
+#
+CONFIG_CC_VERSION_TEXT="arm-none-linux-gnueabihf-gcc (Arm GNU Toolchain 13.2.rel1 (Build arm-13.7)) 13.2.1 20231009"
+CONFIG_CC_IS_GCC=y
+CONFIG_GCC_VERSION=130201
+CONFIG_CLANG_VERSION=0
+CONFIG_AS_IS_GNU=y
+CONFIG_AS_VERSION=24100
+CONFIG_LD_IS_BFD=y
+CONFIG_LD_VERSION=24100
+CONFIG_LLD_VERSION=0
+CONFIG_CC_CAN_LINK=y
+CONFIG_CC_CAN_LINK_STATIC=y
+CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
+CONFIG_CC_HAS_ASM_GOTO_TIED_OUTPUT=y
+CONFIG_GCC_ASM_GOTO_OUTPUT_WORKAROUND=y
+CONFIG_CC_HAS_ASM_INLINE=y
+CONFIG_CC_HAS_NO_PROFILE_FN_ATTR=y
+CONFIG_PAHOLE_VERSION=0
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_TABLE_SORT=y
+CONFIG_THREAD_INFO_IN_TASK=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+# CONFIG_COMPILE_TEST is not set
+# CONFIG_WERROR is not set
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_BUILD_SALT=""
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_XZ=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_HAVE_KERNEL_LZ4=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_XZ is not set
+# CONFIG_KERNEL_LZO is not set
+# CONFIG_KERNEL_LZ4 is not set
+CONFIG_DEFAULT_INIT=""
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_WATCH_QUEUE is not set
+# CONFIG_CROSS_MEMORY_ATTACH is not set
+# CONFIG_USELIB is not set
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_IRQ_SHOW_LEVEL=y
+CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK=y
+CONFIG_GENERIC_IRQ_MIGRATION=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+CONFIG_IRQ_DOMAIN_HIERARCHY=y
+CONFIG_GENERIC_IRQ_IPI=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+# CONFIG_GENERIC_IRQ_DEBUGFS is not set
+# end of IRQ subsystem
+
+CONFIG_GENERIC_IRQ_MULTI_HANDLER=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_CONTEXT_TRACKING=y
+CONFIG_CONTEXT_TRACKING_IDLE=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+# CONFIG_NO_HZ_IDLE is not set
+CONFIG_NO_HZ_FULL=y
+CONFIG_CONTEXT_TRACKING_USER=y
+# CONFIG_CONTEXT_TRACKING_USER_FORCE is not set
+# CONFIG_NO_HZ is not set
+CONFIG_HIGH_RES_TIMERS=y
+# end of Timers subsystem
+
+CONFIG_HAVE_EBPF_JIT=y
+
+#
+# BPF subsystem
+#
+# CONFIG_BPF_SYSCALL is not set
+# end of BPF subsystem
+
+CONFIG_PREEMPT_BUILD=y
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_PREEMPT_COUNT=y
+CONFIG_PREEMPTION=y
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_VIRT_CPU_ACCOUNTING=y
+CONFIG_VIRT_CPU_ACCOUNTING_GEN=y
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_PSI is not set
+# end of CPU/Task time and stats accounting
+
+CONFIG_CPU_ISOLATION=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+CONFIG_PREEMPT_RCU=y
+# CONFIG_RCU_EXPERT is not set
+CONFIG_TREE_SRCU=y
+CONFIG_NEED_SRCU_NMI_SAFE=y
+CONFIG_RCU_STALL_COMMON=y
+CONFIG_RCU_NEED_SEGCBLIST=y
+CONFIG_RCU_NOCB_CPU=y
+# CONFIG_RCU_NOCB_CPU_DEFAULT_ALL is not set
+# CONFIG_RCU_LAZY is not set
+# end of RCU Subsystem
+
+CONFIG_IKCONFIG=y
+# CONFIG_IKCONFIG_PROC is not set
+# CONFIG_IKHEADERS is not set
+CONFIG_LOG_BUF_SHIFT=16
+CONFIG_LOG_CPU_MAX_BUF_SHIFT=12
+# CONFIG_PRINTK_INDEX is not set
+CONFIG_GENERIC_SCHED_CLOCK=y
+
+#
+# Scheduler features
+#
+# end of Scheduler features
+
+CONFIG_CC_IMPLICIT_FALLTHROUGH="-Wimplicit-fallthrough=5"
+CONFIG_GCC10_NO_ARRAY_BOUNDS=y
+CONFIG_CC_NO_ARRAY_BOUNDS=y
+CONFIG_GCC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CGROUPS=y
+# CONFIG_CGROUP_FAVOR_DYNMODS is not set
+# CONFIG_MEMCG is not set
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+CONFIG_CFS_BANDWIDTH=y
+CONFIG_RT_GROUP_SCHED=y
+# CONFIG_CGROUP_PIDS is not set
+# CONFIG_CGROUP_RDMA is not set
+# CONFIG_CGROUP_FREEZER is not set
+# CONFIG_CPUSETS is not set
+# CONFIG_CGROUP_DEVICE is not set
+# CONFIG_CGROUP_CPUACCT is not set
+# CONFIG_CGROUP_MISC is not set
+# CONFIG_CGROUP_DEBUG is not set
+# CONFIG_NAMESPACES is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+# CONFIG_SCHED_AUTOGROUP is not set
+# CONFIG_RELAY is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE="${BR_BINARIES_DIR}/rootfs.cpio"
+CONFIG_INITRAMFS_FORCE=y
+CONFIG_INITRAMFS_ROOT_UID=0
+CONFIG_INITRAMFS_ROOT_GID=0
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+# CONFIG_RD_LZ4 is not set
+# CONFIG_RD_ZSTD is not set
+CONFIG_INITRAMFS_COMPRESSION_GZIP=y
+# CONFIG_INITRAMFS_COMPRESSION_NONE is not set
+# CONFIG_BOOT_CONFIG is not set
+CONFIG_INITRAMFS_PRESERVE_MTIME=y
+CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_LD_ORPHAN_WARN=y
+CONFIG_LD_ORPHAN_WARN_LEVEL="warn"
+CONFIG_SYSCTL=y
+CONFIG_HAVE_UID16=y
+CONFIG_EXPERT=y
+CONFIG_UID16=y
+CONFIG_MULTIUSER=y
+# CONFIG_SGETMASK_SYSCALL is not set
+CONFIG_SYSFS_SYSCALL=y
+# CONFIG_FHANDLE is not set
+CONFIG_POSIX_TIMERS=y
+CONFIG_PRINTK=y
+# CONFIG_BUG is not set
+CONFIG_ELF_CORE=y
+# CONFIG_BASE_FULL is not set
+CONFIG_FUTEX=y
+CONFIG_FUTEX_PI=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+# CONFIG_SHMEM is not set
+# CONFIG_AIO is not set
+# CONFIG_IO_URING is not set
+# CONFIG_ADVISE_SYSCALLS is not set
+CONFIG_MEMBARRIER=y
+# CONFIG_KCMP is not set
+# CONFIG_RSEQ is not set
+CONFIG_CACHESTAT_SYSCALL=y
+# CONFIG_PC104 is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_SELFTEST is not set
+CONFIG_KALLSYMS_ALL=y
+CONFIG_KALLSYMS_BASE_RELATIVE=y
+CONFIG_ARCH_HAS_MEMBARRIER_SYNC_CORE=y
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PERF_USE_VMALLOC=y
+
+#
+# Kernel Performance Events And Counters
+#
+# CONFIG_PERF_EVENTS is not set
+# end of Kernel Performance Events And Counters
+
+# CONFIG_PROFILING is not set
+
+#
+# Kexec and crash features
+#
+# end of Kexec and crash features
+# end of General setup
+
+CONFIG_ARM=y
+CONFIG_ARM_HAS_GROUP_RELOCS=y
+CONFIG_SYS_SUPPORTS_APM_EMULATION=y
+CONFIG_HAVE_PROC_CPU=y
+CONFIG_NO_IOPORT_MAP=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_ARCH_SUPPORTS_UPROBES=y
+CONFIG_ARM_PATCH_PHYS_VIRT=y
+CONFIG_PGTABLE_LEVELS=2
+
+#
+# System Type
+#
+CONFIG_MMU=y
+CONFIG_ARCH_MMAP_RND_BITS_MIN=8
+CONFIG_ARCH_MMAP_RND_BITS_MAX=16
+CONFIG_ARCH_MULTIPLATFORM=y
+
+#
+# Platform selection
+#
+
+#
+# CPU Core family selection
+#
+# CONFIG_ARCH_MULTI_V6 is not set
+CONFIG_ARCH_MULTI_V7=y
+CONFIG_ARCH_MULTI_V6_V7=y
+# end of Platform selection
+
+# CONFIG_ARCH_VIRT is not set
+# CONFIG_ARCH_AIROHA is not set
+# CONFIG_ARCH_RDA is not set
+# CONFIG_ARCH_SUNPLUS is not set
+# CONFIG_ARCH_UNIPHIER is not set
+# CONFIG_ARCH_ACTIONS is not set
+# CONFIG_ARCH_ALPINE is not set
+# CONFIG_ARCH_ARTPEC is not set
+# CONFIG_ARCH_ASPEED is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_ARCH_BCM is not set
+# CONFIG_ARCH_BERLIN is not set
+# CONFIG_ARCH_DIGICOLOR is not set
+# CONFIG_ARCH_DOVE is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_HIGHBANK is not set
+# CONFIG_ARCH_HISI is not set
+# CONFIG_ARCH_HPE is not set
+# CONFIG_ARCH_MXC is not set
+# CONFIG_ARCH_KEYSTONE is not set
+# CONFIG_ARCH_MEDIATEK is not set
+# CONFIG_ARCH_MESON is not set
+# CONFIG_ARCH_MILBEAUT is not set
+# CONFIG_ARCH_MMP is not set
+# CONFIG_ARCH_MSTARV7 is not set
+# CONFIG_ARCH_MVEBU is not set
+# CONFIG_ARCH_NPCM is not set
+
+#
+# TI OMAP/AM/DM/DRA Family
+#
+# CONFIG_ARCH_OMAP3 is not set
+# CONFIG_ARCH_OMAP4 is not set
+# CONFIG_SOC_OMAP5 is not set
+# CONFIG_SOC_AM33XX is not set
+# CONFIG_SOC_AM43XX is not set
+# CONFIG_SOC_DRA7XX is not set
+# end of TI OMAP/AM/DM/DRA Family
+
+# CONFIG_ARCH_QCOM is not set
+# CONFIG_ARCH_REALTEK is not set
+# CONFIG_ARCH_ROCKCHIP is not set
+# CONFIG_ARCH_S5PV210 is not set
+# CONFIG_ARCH_RENESAS is not set
+# CONFIG_ARCH_INTEL_SOCFPGA is not set
+# CONFIG_PLAT_SPEAR is not set
+# CONFIG_ARCH_STI is not set
+# CONFIG_ARCH_STM32 is not set
+# CONFIG_ARCH_SUNXI is not set
+# CONFIG_ARCH_TEGRA is not set
+# CONFIG_ARCH_U8500 is not set
+# CONFIG_ARCH_REALVIEW is not set
+CONFIG_ARCH_VEXPRESS=y
+CONFIG_ARCH_VEXPRESS_CORTEX_A5_A9_ERRATA=y
+# CONFIG_ARCH_VEXPRESS_SPC is not set
+# CONFIG_ARCH_WM8850 is not set
+# CONFIG_ARCH_ZYNQ is not set
+CONFIG_PLAT_VERSATILE=y
+
+#
+# Processor Type
+#
+CONFIG_CPU_V7=y
+CONFIG_CPU_THUMB_CAPABLE=y
+CONFIG_CPU_32v6K=y
+CONFIG_CPU_32v7=y
+CONFIG_CPU_ABRT_EV7=y
+CONFIG_CPU_PABRT_V7=y
+CONFIG_CPU_CACHE_V7=y
+CONFIG_CPU_CACHE_VIPT=y
+CONFIG_CPU_COPY_V6=y
+CONFIG_CPU_TLB_V7=y
+CONFIG_CPU_HAS_ASID=y
+CONFIG_CPU_CP15=y
+CONFIG_CPU_CP15_MMU=y
+
+#
+# Processor Features
+#
+# CONFIG_ARM_LPAE is not set
+CONFIG_ARM_THUMB=y
+# CONFIG_ARM_THUMBEE is not set
+CONFIG_ARM_VIRT_EXT=y
+CONFIG_SWP_EMULATE=y
+CONFIG_CPU_LITTLE_ENDIAN=y
+# CONFIG_CPU_BIG_ENDIAN is not set
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_ICACHE_MISMATCH_WORKAROUND is not set
+# CONFIG_CPU_BPREDICT_DISABLE is not set
+CONFIG_CPU_SPECTRE=y
+# CONFIG_HARDEN_BRANCH_PREDICTOR is not set
+CONFIG_HARDEN_BRANCH_HISTORY=y
+# CONFIG_KUSER_HELPERS is not set
+# CONFIG_VDSO is not set
+CONFIG_MIGHT_HAVE_CACHE_L2X0=y
+# CONFIG_CACHE_L2X0 is not set
+CONFIG_ARM_L1_CACHE_SHIFT_6=y
+CONFIG_ARM_L1_CACHE_SHIFT=6
+CONFIG_ARM_DMA_MEM_BUFFERABLE=y
+CONFIG_DEBUG_ALIGN_RODATA=y
+# CONFIG_ARM_ERRATA_430973 is not set
+CONFIG_ARM_ERRATA_643719=y
+CONFIG_ARM_ERRATA_720789=y
+# CONFIG_ARM_ERRATA_754322 is not set
+# CONFIG_ARM_ERRATA_754327 is not set
+# CONFIG_ARM_ERRATA_764369 is not set
+# CONFIG_ARM_ERRATA_764319 is not set
+# CONFIG_ARM_ERRATA_775420 is not set
+CONFIG_ARM_ERRATA_798181=y
+CONFIG_ARM_ERRATA_773022=y
+# CONFIG_ARM_ERRATA_818325_852422 is not set
+# CONFIG_ARM_ERRATA_821420 is not set
+# CONFIG_ARM_ERRATA_825619 is not set
+# CONFIG_ARM_ERRATA_857271 is not set
+# CONFIG_ARM_ERRATA_852421 is not set
+# CONFIG_ARM_ERRATA_852423 is not set
+# CONFIG_ARM_ERRATA_857272 is not set
+# end of System Type
+
+#
+# Bus support
+#
+# CONFIG_ARM_ERRATA_814220 is not set
+# end of Bus support
+
+#
+# Kernel Features
+#
+CONFIG_HAVE_SMP=y
+CONFIG_SMP=y
+CONFIG_SMP_ON_UP=y
+CONFIG_CURRENT_POINTER_IN_TPIDRURO=y
+CONFIG_IRQSTACKS=y
+CONFIG_ARM_CPU_TOPOLOGY=y
+CONFIG_SCHED_MC=y
+# CONFIG_SCHED_SMT is not set
+CONFIG_HAVE_ARM_SCU=y
+CONFIG_HAVE_ARM_ARCH_TIMER=y
+CONFIG_HAVE_ARM_TWD=y
+# CONFIG_MCPM is not set
+# CONFIG_BIG_LITTLE is not set
+CONFIG_VMSPLIT_3G=y
+# CONFIG_VMSPLIT_3G_OPT is not set
+# CONFIG_VMSPLIT_2G is not set
+# CONFIG_VMSPLIT_1G is not set
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_NR_CPUS=8
+CONFIG_HOTPLUG_CPU=y
+CONFIG_ARM_PSCI=y
+CONFIG_HZ_FIXED=0
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_200 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+# CONFIG_HZ_500 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_SCHED_HRTICK=y
+# CONFIG_THUMB2_KERNEL is not set
+CONFIG_ARM_PATCH_IDIV=y
+CONFIG_AEABI=y
+# CONFIG_OABI_COMPAT is not set
+CONFIG_ARCH_SELECT_MEMORY_MODEL=y
+CONFIG_ARCH_FLATMEM_ENABLE=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_HIGHMEM=y
+CONFIG_HIGHPTE=y
+CONFIG_CPU_SW_DOMAIN_PAN=y
+CONFIG_ARCH_FORCE_MAX_ORDER=10
+CONFIG_ALIGNMENT_TRAP=y
+# CONFIG_UACCESS_WITH_MEMCPY is not set
+# CONFIG_PARAVIRT is not set
+# CONFIG_PARAVIRT_TIME_ACCOUNTING is not set
+# CONFIG_XEN is not set
+CONFIG_CC_HAVE_STACKPROTECTOR_TLS=y
+# end of Kernel Features
+
+#
+# Boot options
+#
+CONFIG_USE_OF=y
+CONFIG_ARCH_WANT_FLAT_DTB_INSTALL=y
+CONFIG_ATAGS=y
+# CONFIG_DEPRECATED_PARAM_STRUCT is not set
+CONFIG_ZBOOT_ROM_TEXT=0
+CONFIG_ZBOOT_ROM_BSS=0
+# CONFIG_ARM_APPENDED_DTB is not set
+CONFIG_CMDLINE="console=ttyAMA0,115200n8 root=/dev/ram0 rootwait earlycon=pl011,mmio32,0x1c090000"
+# CONFIG_CMDLINE_FROM_BOOTLOADER is not set
+# CONFIG_CMDLINE_EXTEND is not set
+CONFIG_CMDLINE_FORCE=y
+CONFIG_ARCH_SUPPORTS_CRASH_DUMP=y
+CONFIG_AUTO_ZRELADDR=y
+# CONFIG_EFI is not set
+# end of Boot options
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_GOV_ATTR_SET=y
+CONFIG_CPU_FREQ_GOV_COMMON=y
+CONFIG_CPU_FREQ_STAT=y
+CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_GOV_POWERSAVE is not set
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_GOV_SCHEDUTIL is not set
+
+#
+# CPU frequency scaling drivers
+#
+# CONFIG_CPUFREQ_DT is not set
+# CONFIG_CPUFREQ_DT_PLATDEV is not set
+# end of CPU Frequency scaling
+
+#
+# CPU Idle
+#
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_MULTIPLE_DRIVERS=y
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_CPU_IDLE_GOV_TEO is not set
+CONFIG_DT_IDLE_STATES=y
+
+#
+# ARM CPU Idle Drivers
+#
+CONFIG_ARM_CPUIDLE=y
+# CONFIG_ARM_PSCI_CPUIDLE is not set
+# CONFIG_ARM_HIGHBANK_CPUIDLE is not set
+# end of ARM CPU Idle Drivers
+# end of CPU Idle
+# end of CPU Power Management
+
+#
+# Floating point emulation
+#
+
+#
+# At least one emulation must be selected
+#
+CONFIG_VFP=y
+CONFIG_VFPv3=y
+CONFIG_NEON=y
+CONFIG_KERNEL_MODE_NEON=y
+# end of Floating point emulation
+
+#
+# Power management options
+#
+# CONFIG_SUSPEND is not set
+# CONFIG_PM is not set
+# CONFIG_APM_EMULATION is not set
+CONFIG_CPU_PM=y
+# CONFIG_ENERGY_MODEL is not set
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_ARM_CPU_SUSPEND=y
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+# end of Power management options
+
+CONFIG_AS_VFP_VMRS_FPINST=y
+CONFIG_CPU_MITIGATIONS=y
+
+#
+# General architecture-dependent options
+#
+CONFIG_HOTPLUG_CORE_SYNC=y
+CONFIG_HOTPLUG_CORE_SYNC_DEAD=y
+CONFIG_JUMP_LABEL=y
+# CONFIG_STATIC_KEYS_SELFTEST is not set
+CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
+CONFIG_ARCH_USE_BUILTIN_BSWAP=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_OPTPROBES=y
+CONFIG_ARCH_CORRECT_STACKTRACE_ON_KRETPROBE=y
+CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y
+CONFIG_HAVE_NMI=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_ARCH_HAS_FORTIFY_SOURCE=y
+CONFIG_ARCH_HAS_KEEPINITRD=y
+CONFIG_ARCH_HAS_SET_MEMORY=y
+CONFIG_ARCH_HAS_CPU_FINALIZE_INIT=y
+CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y
+CONFIG_ARCH_32BIT_OFF_T=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_RSEQ=y
+CONFIG_HAVE_PERF_REGS=y
+CONFIG_HAVE_PERF_USER_STACK_DUMP=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_MMU_LAZY_TLB_REFCOUNT=y
+CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
+CONFIG_ARCH_WANT_IPC_PARSE_VERSION=y
+CONFIG_HAVE_ARCH_SECCOMP=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+# CONFIG_SECCOMP is not set
+CONFIG_HAVE_STACKPROTECTOR=y
+# CONFIG_STACKPROTECTOR is not set
+CONFIG_LTO_NONE=y
+CONFIG_HAVE_CONTEXT_TRACKING_USER=y
+CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
+CONFIG_MODULES_USE_ELF_REL=y
+CONFIG_HAVE_IRQ_EXIT_ON_IRQ_STACK=y
+CONFIG_HAVE_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_ARCH_HAS_ELF_RANDOMIZE=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_HAVE_EXIT_THREAD=y
+CONFIG_ARCH_MMAP_RND_BITS=8
+CONFIG_HAVE_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_64KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_256KB=y
+CONFIG_PAGE_SHIFT=12
+CONFIG_ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT=y
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_OLD_SIGSUSPEND3=y
+CONFIG_OLD_SIGACTION=y
+CONFIG_COMPAT_32BIT_TIME=y
+CONFIG_HAVE_ARCH_VMAP_STACK=y
+CONFIG_VMAP_STACK=y
+CONFIG_ARCH_OPTIONAL_KERNEL_RWX=y
+CONFIG_ARCH_OPTIONAL_KERNEL_RWX_DEFAULT=y
+CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y
+CONFIG_STRICT_KERNEL_RWX=y
+CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y
+# CONFIG_LOCK_EVENT_COUNTS is not set
+CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y
+CONFIG_HAVE_ARCH_PFN_VALID=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y
+# end of GCOV-based kernel profiling
+
+CONFIG_HAVE_GCC_PLUGINS=y
+# CONFIG_GCC_PLUGINS is not set
+CONFIG_FUNCTION_ALIGNMENT=0
+# end of General architecture-dependent options
+
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=1
+# CONFIG_MODULES is not set
+# CONFIG_BLOCK is not set
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_LOCK_SPIN_ON_OWNER=y
+CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE=y
+
+#
+# Executable file formats
+#
+CONFIG_BINFMT_ELF=y
+# CONFIG_BINFMT_ELF_FDPIC is not set
+CONFIG_ELFCORE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_BINFMT_SCRIPT=y
+CONFIG_ARCH_HAS_BINFMT_FLAT=y
+# CONFIG_BINFMT_FLAT is not set
+CONFIG_BINFMT_FLAT_ARGVP_ENVP_ON_STACK=y
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+# end of Executable file formats
+
+#
+# Memory Management options
+#
+
+#
+# Slab allocator options
+#
+CONFIG_SLUB=y
+# CONFIG_SLUB_TINY is not set
+CONFIG_SLAB_MERGE_DEFAULT=y
+# CONFIG_SLAB_FREELIST_RANDOM is not set
+# CONFIG_SLAB_FREELIST_HARDENED is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_SLUB_CPU_PARTIAL=y
+# CONFIG_RANDOM_KMALLOC_CACHES is not set
+# end of Slab allocator options
+
+# CONFIG_SHUFFLE_PAGE_ALLOCATOR is not set
+CONFIG_COMPAT_BRK=y
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_FLATMEM_MANUAL=y
+# CONFIG_SPARSEMEM_MANUAL is not set
+CONFIG_FLATMEM=y
+CONFIG_ARCH_KEEP_MEMBLOCK=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_COMPACTION=y
+CONFIG_COMPACT_UNEVICTABLE_DEFAULT=1
+# CONFIG_PAGE_REPORTING is not set
+CONFIG_MIGRATION=y
+CONFIG_PCP_BATCH_SCALE_MAX=5
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_ARCH_WANT_GENERAL_HUGETLB=y
+# CONFIG_CMA is not set
+CONFIG_GENERIC_EARLY_IOREMAP=y
+# CONFIG_IDLE_PAGE_TRACKING is not set
+CONFIG_ARCH_HAS_CPU_CACHE_ALIASING=y
+CONFIG_ARCH_HAS_CURRENT_STACK_POINTER=y
+# CONFIG_VM_EVENT_COUNTERS is not set
+# CONFIG_PERCPU_STATS is not set
+# CONFIG_GUP_TEST is not set
+# CONFIG_DMAPOOL_TEST is not set
+CONFIG_KMAP_LOCAL=y
+CONFIG_KMAP_LOCAL_NON_LINEAR_PTE_ARRAY=y
+# CONFIG_MEMFD_CREATE is not set
+# CONFIG_USERFAULTFD is not set
+# CONFIG_LRU_GEN is not set
+CONFIG_ARCH_SUPPORTS_PER_VMA_LOCK=y
+CONFIG_PER_VMA_LOCK=y
+CONFIG_LOCK_MM_AND_FIND_VMA=y
+
+#
+# Data Access Monitoring
+#
+# CONFIG_DAMON is not set
+# end of Data Access Monitoring
+# end of Memory Management options
+
+# CONFIG_NET is not set
+
+#
+# Device Drivers
+#
+CONFIG_ARM_AMBA=y
+CONFIG_HAVE_PCI=y
+CONFIG_GENERIC_PCI_IOMAP=y
+# CONFIG_PCI is not set
+# CONFIG_PCCARD is not set
+
+#
+# Generic Driver Options
+#
+# CONFIG_UEVENT_HELPER is not set
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+# CONFIG_DEVTMPFS_SAFE is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+
+#
+# Firmware loader
+#
+# CONFIG_FW_LOADER is not set
+# end of Firmware loader
+
+# CONFIG_ALLOW_DEV_COREDUMP is not set
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_DEBUG_TEST_DRIVER_REMOVE is not set
+CONFIG_GENERIC_CPU_AUTOPROBE=y
+CONFIG_GENERIC_CPU_VULNERABILITIES=y
+CONFIG_SOC_BUS=y
+CONFIG_REGMAP=y
+CONFIG_REGMAP_MMIO=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_DMA_FENCE_TRACE is not set
+CONFIG_GENERIC_ARCH_TOPOLOGY=y
+# CONFIG_FW_DEVLINK_SYNC_STATE_TIMEOUT is not set
+# end of Generic Driver Options
+
+#
+# Bus devices
+#
+CONFIG_VEXPRESS_CONFIG=y
+# CONFIG_MHI_BUS is not set
+# CONFIG_MHI_BUS_EP is not set
+# end of Bus devices
+
+#
+# Cache Drivers
+#
+# end of Cache Drivers
+
+#
+# Firmware Drivers
+#
+
+#
+# ARM System Control and Management Interface Protocol
+#
+# CONFIG_ARM_SCMI_PROTOCOL is not set
+# end of ARM System Control and Management Interface Protocol
+
+# CONFIG_FIRMWARE_MEMMAP is not set
+# CONFIG_TRUSTED_FOUNDATIONS is not set
+# CONFIG_GOOGLE_FIRMWARE is not set
+CONFIG_ARM_PSCI_FW=y
+# CONFIG_ARM_PSCI_CHECKER is not set
+
+#
+# Qualcomm firmware drivers
+#
+# end of Qualcomm firmware drivers
+
+CONFIG_HAVE_ARM_SMCCC=y
+CONFIG_HAVE_ARM_SMCCC_DISCOVERY=y
+CONFIG_ARM_SMCCC_SOC_ID=y
+
+#
+# Tegra firmware driver
+#
+# end of Tegra firmware driver
+# end of Firmware Drivers
+
+# CONFIG_GNSS is not set
+# CONFIG_MTD is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+# CONFIG_OF_UNITTEST is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_KOBJ=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_RESERVED_MEM=y
+# CONFIG_OF_OVERLAY is not set
+CONFIG_ARCH_MIGHT_HAVE_PC_PARPORT=y
+# CONFIG_PARPORT is not set
+
+#
+# NVME Support
+#
+# end of NVME Support
+
+#
+# Misc devices
+#
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_SRAM is not set
+# CONFIG_XILINX_SDFEC is not set
+# CONFIG_OPEN_DICE is not set
+# CONFIG_VCPU_STALL_DETECTOR is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_93CX6 is not set
+# end of EEPROM support
+
+#
+# Texas Instruments shared transport line discipline
+#
+# end of Texas Instruments shared transport line discipline
+
+#
+# Altera FPGA firmware download module (requires I2C)
+#
+# CONFIG_ECHO is not set
+# CONFIG_PVPANIC is not set
+# end of Misc devices
+
+#
+# SCSI device support
+#
+# end of SCSI device support
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+# CONFIG_INPUT_MATRIXKMAP is not set
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
+# CONFIG_INPUT_EVDEV is not set
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+# CONFIG_INPUT_KEYBOARD is not set
+# CONFIG_INPUT_MOUSE is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+# CONFIG_INPUT_TOUCHSCREEN is not set
+# CONFIG_INPUT_MISC is not set
+# CONFIG_RMI4_CORE is not set
+
+#
+# Hardware I/O ports
+#
+# CONFIG_SERIO is not set
+# CONFIG_GAMEPORT is not set
+# end of Hardware I/O ports
+# end of Input device support
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+# CONFIG_VT_HW_CONSOLE_BINDING is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_LEGACY_PTYS is not set
+CONFIG_LEGACY_TIOCSTI=y
+# CONFIG_LDISC_AUTOLOAD is not set
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_EARLYCON=y
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_AMBA_PL010 is not set
+CONFIG_SERIAL_AMBA_PL011=y
+CONFIG_SERIAL_AMBA_PL011_CONSOLE=y
+# CONFIG_SERIAL_EARLYCON_SEMIHOST is not set
+# CONFIG_SERIAL_UARTLITE is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_SIFIVE is not set
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_SERIAL_ARC is not set
+# CONFIG_SERIAL_FSL_LPUART is not set
+# CONFIG_SERIAL_FSL_LINFLEXUART is not set
+# CONFIG_SERIAL_CONEXANT_DIGICOLOR is not set
+# CONFIG_SERIAL_ST_ASC is not set
+# CONFIG_SERIAL_SPRD is not set
+# end of Serial drivers
+
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_NULL_TTY is not set
+# CONFIG_HVC_DCC is not set
+# CONFIG_SERIAL_DEV_BUS is not set
+# CONFIG_TTY_PRINTK is not set
+# CONFIG_VIRTIO_CONSOLE is not set
+# CONFIG_IPMI_HANDLER is not set
+CONFIG_HW_RANDOM=y
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+# CONFIG_HW_RANDOM_BA431 is not set
+# CONFIG_HW_RANDOM_CCTRNG is not set
+# CONFIG_HW_RANDOM_XIPHERA is not set
+CONFIG_HW_RANDOM_ARM_SMCCC_TRNG=y
+CONFIG_DEVMEM=y
+CONFIG_DEVPORT=y
+# CONFIG_TCG_TPM is not set
+# CONFIG_XILLYBUS is not set
+# end of Character devices
+
+#
+# I2C support
+#
+# CONFIG_I2C is not set
+# end of I2C support
+
+# CONFIG_I3C is not set
+# CONFIG_SPI is not set
+# CONFIG_SPMI is not set
+# CONFIG_HSI is not set
+# CONFIG_PPS is not set
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK_OPTIONAL=y
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# end of PTP clock support
+
+# CONFIG_PINCTRL is not set
+CONFIG_GPIOLIB=y
+CONFIG_GPIOLIB_FASTPATH_LIMIT=512
+CONFIG_OF_GPIO=y
+# CONFIG_DEBUG_GPIO is not set
+# CONFIG_GPIO_SYSFS is not set
+CONFIG_GPIO_CDEV=y
+CONFIG_GPIO_CDEV_V1=y
+CONFIG_GPIO_GENERIC=y
+
+#
+# Memory mapped GPIO drivers
+#
+# CONFIG_GPIO_74XX_MMIO is not set
+# CONFIG_GPIO_ALTERA is not set
+# CONFIG_GPIO_CADENCE is not set
+# CONFIG_GPIO_DWAPB is not set
+# CONFIG_GPIO_FTGPIO010 is not set
+CONFIG_GPIO_GENERIC_PLATFORM=y
+# CONFIG_GPIO_GRGPIO is not set
+# CONFIG_GPIO_HLWD is not set
+# CONFIG_GPIO_LOGICVC is not set
+# CONFIG_GPIO_MB86S7X is not set
+# CONFIG_GPIO_MPC8XXX is not set
+# CONFIG_GPIO_PL061 is not set
+# CONFIG_GPIO_SIFIVE is not set
+# CONFIG_GPIO_SYSCON is not set
+# CONFIG_GPIO_XILINX is not set
+# CONFIG_GPIO_ZEVIO is not set
+# CONFIG_GPIO_AMD_FCH is not set
+# end of Memory mapped GPIO drivers
+
+#
+# MFD GPIO expanders
+#
+# CONFIG_HTC_EGPIO is not set
+# end of MFD GPIO expanders
+
+#
+# Virtual GPIO drivers
+#
+# CONFIG_GPIO_AGGREGATOR is not set
+# CONFIG_GPIO_LATCH is not set
+# CONFIG_GPIO_MOCKUP is not set
+# CONFIG_GPIO_SIM is not set
+# end of Virtual GPIO drivers
+
+# CONFIG_W1 is not set
+CONFIG_POWER_RESET=y
+# CONFIG_POWER_RESET_BRCMKONA is not set
+# CONFIG_POWER_RESET_GPIO is not set
+# CONFIG_POWER_RESET_GPIO_RESTART is not set
+# CONFIG_POWER_RESET_LTC2952 is not set
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_RESET_VERSATILE is not set
+CONFIG_POWER_RESET_VEXPRESS=y
+# CONFIG_POWER_RESET_SYSCON is not set
+# CONFIG_POWER_RESET_SYSCON_POWEROFF is not set
+# CONFIG_SYSCON_REBOOT_MODE is not set
+# CONFIG_NVMEM_REBOOT_MODE is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_SAMSUNG_SDI is not set
+# CONFIG_BATTERY_BQ27XXX is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_LT3651 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_HWMON is not set
+# CONFIG_THERMAL is not set
+# CONFIG_WATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+CONFIG_MFD_CORE=y
+# CONFIG_MFD_ATMEL_FLEXCOM is not set
+# CONFIG_MFD_ATMEL_HLCDC is not set
+# CONFIG_MFD_MADERA is not set
+# CONFIG_MFD_HI6421_PMIC is not set
+# CONFIG_MFD_KEMPLD is not set
+# CONFIG_MFD_MT6397 is not set
+# CONFIG_MFD_PM8XXX is not set
+# CONFIG_MFD_SM501 is not set
+CONFIG_MFD_SYSCON=y
+# CONFIG_MFD_TQMX86 is not set
+CONFIG_MFD_VEXPRESS_SYSREG=y
+# end of Multifunction device drivers
+
+# CONFIG_REGULATOR is not set
+# CONFIG_RC_CORE is not set
+
+#
+# CEC support
+#
+# CONFIG_MEDIA_CEC_SUPPORT is not set
+# end of CEC support
+
+# CONFIG_MEDIA_SUPPORT is not set
+
+#
+# Graphics support
+#
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_DRM is not set
+# CONFIG_DRM_DEBUG_MODESET_LOCK is not set
+
+#
+# Frame buffer Devices
+#
+# CONFIG_FB is not set
+# end of Frame buffer Devices
+
+#
+# Backlight & LCD device support
+#
+# CONFIG_LCD_CLASS_DEVICE is not set
+# CONFIG_BACKLIGHT_CLASS_DEVICE is not set
+# end of Backlight & LCD device support
+
+#
+# Console display driver support
+#
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_DUMMY_CONSOLE_COLUMNS=80
+CONFIG_DUMMY_CONSOLE_ROWS=30
+# end of Console display driver support
+# end of Graphics support
+
+# CONFIG_SOUND is not set
+CONFIG_HID_SUPPORT=y
+# CONFIG_HID is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+# CONFIG_USB_SUPPORT is not set
+# CONFIG_MMC is not set
+# CONFIG_MEMSTICK is not set
+# CONFIG_NEW_LEDS is not set
+# CONFIG_ACCESSIBILITY is not set
+CONFIG_EDAC_ATOMIC_SCRUB=y
+CONFIG_EDAC_SUPPORT=y
+CONFIG_RTC_LIB=y
+# CONFIG_RTC_CLASS is not set
+# CONFIG_DMADEVICES is not set
+
+#
+# DMABUF options
+#
+# CONFIG_SYNC_FILE is not set
+# CONFIG_DMABUF_MOVE_NOTIFY is not set
+# CONFIG_DMABUF_DEBUG is not set
+# CONFIG_DMABUF_SELFTESTS is not set
+# CONFIG_DMABUF_HEAPS is not set
+# CONFIG_DMABUF_SYSFS_STATS is not set
+# end of DMABUF options
+
+# CONFIG_UIO is not set
+# CONFIG_VFIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+# CONFIG_VIRTIO_MENU is not set
+# CONFIG_VHOST_MENU is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+# end of Microsoft Hyper-V guest support
+
+# CONFIG_GREYBUS is not set
+# CONFIG_COMEDI is not set
+# CONFIG_STAGING is not set
+# CONFIG_GOLDFISH is not set
+# CONFIG_CHROME_PLATFORMS is not set
+# CONFIG_MELLANOX_PLATFORM is not set
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Clock driver for ARM Reference designs
+#
+CONFIG_CLK_ICST=y
+# CONFIG_CLK_SP810 is not set
+CONFIG_CLK_VEXPRESS_OSC=y
+# end of Clock driver for ARM Reference designs
+
+# CONFIG_COMMON_CLK_AXI_CLKGEN is not set
+# CONFIG_COMMON_CLK_FIXED_MMIO is not set
+# CONFIG_XILINX_VCU is not set
+# CONFIG_COMMON_CLK_XLNX_CLKWZRD is not set
+# CONFIG_HWSPINLOCK is not set
+
+#
+# Clock Source drivers
+#
+CONFIG_TIMER_OF=y
+CONFIG_TIMER_PROBE=y
+CONFIG_CLKSRC_MMIO=y
+CONFIG_ARM_ARCH_TIMER=y
+CONFIG_ARM_ARCH_TIMER_EVTSTREAM=y
+CONFIG_ARM_GLOBAL_TIMER=y
+CONFIG_ARM_GT_INITIAL_PRESCALER_VAL=1
+CONFIG_ARM_TIMER_SP804=y
+CONFIG_CLKSRC_ARM_GLOBAL_TIMER_SCHED_CLOCK=y
+CONFIG_CLKSRC_VERSATILE=y
+# CONFIG_MICROCHIP_PIT64B is not set
+# end of Clock Source drivers
+
+# CONFIG_MAILBOX is not set
+# CONFIG_IOMMU_SUPPORT is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_REMOTEPROC is not set
+# end of Remoteproc drivers
+
+#
+# Rpmsg drivers
+#
+# CONFIG_RPMSG_VIRTIO is not set
+# end of Rpmsg drivers
+
+# CONFIG_SOUNDWIRE is not set
+
+#
+# SOC (System On Chip) specific Drivers
+#
+
+#
+# Amlogic SoC drivers
+#
+# end of Amlogic SoC drivers
+
+#
+# Broadcom SoC drivers
+#
+# end of Broadcom SoC drivers
+
+#
+# NXP/Freescale QorIQ SoC drivers
+#
+# CONFIG_QUICC_ENGINE is not set
+# end of NXP/Freescale QorIQ SoC drivers
+
+#
+# fujitsu SoC drivers
+#
+# end of fujitsu SoC drivers
+
+#
+# i.MX SoC drivers
+#
+# end of i.MX SoC drivers
+
+#
+# Enable LiteX SoC Builder specific drivers
+#
+# CONFIG_LITEX_SOC_CONTROLLER is not set
+# end of Enable LiteX SoC Builder specific drivers
+
+# CONFIG_WPCM450_SOC is not set
+
+#
+# Qualcomm SoC drivers
+#
+# end of Qualcomm SoC drivers
+
+# CONFIG_SOC_TI is not set
+
+#
+# Xilinx SoC drivers
+#
+# end of Xilinx SoC drivers
+# end of SOC (System On Chip) specific Drivers
+
+#
+# PM Domains
+#
+
+#
+# Amlogic PM Domains
+#
+# end of Amlogic PM Domains
+
+#
+# Broadcom PM Domains
+#
+# end of Broadcom PM Domains
+
+#
+# i.MX PM Domains
+#
+# end of i.MX PM Domains
+
+#
+# Qualcomm PM Domains
+#
+# end of Qualcomm PM Domains
+# end of PM Domains
+
+# CONFIG_PM_DEVFREQ is not set
+# CONFIG_EXTCON is not set
+# CONFIG_MEMORY is not set
+# CONFIG_IIO is not set
+# CONFIG_PWM is not set
+
+#
+# IRQ chip support
+#
+CONFIG_IRQCHIP=y
+CONFIG_ARM_GIC=y
+CONFIG_ARM_GIC_MAX_NR=1
+# CONFIG_AL_FIC is not set
+# CONFIG_XILINX_INTC is not set
+# end of IRQ chip support
+
+# CONFIG_IPACK_BUS is not set
+# CONFIG_RESET_CONTROLLER is not set
+
+#
+# PHY Subsystem
+#
+# CONFIG_GENERIC_PHY is not set
+# CONFIG_PHY_CAN_TRANSCEIVER is not set
+
+#
+# PHY drivers for Broadcom platforms
+#
+# CONFIG_BCM_KONA_USB2_PHY is not set
+# end of PHY drivers for Broadcom platforms
+
+# CONFIG_PHY_CADENCE_TORRENT is not set
+# CONFIG_PHY_CADENCE_DPHY is not set
+# CONFIG_PHY_CADENCE_DPHY_RX is not set
+# CONFIG_PHY_CADENCE_SALVO is not set
+# CONFIG_PHY_PXA_28NM_HSIC is not set
+# CONFIG_PHY_PXA_28NM_USB2 is not set
+# CONFIG_PHY_LAN966X_SERDES is not set
+# CONFIG_PHY_OCELOT_SERDES is not set
+# end of PHY Subsystem
+
+# CONFIG_POWERCAP is not set
+# CONFIG_MCB is not set
+# CONFIG_RAS is not set
+
+#
+# Android
+#
+# CONFIG_ANDROID_BINDER_IPC is not set
+# end of Android
+
+# CONFIG_DAX is not set
+# CONFIG_NVMEM is not set
+
+#
+# HW tracing support
+#
+# CONFIG_STM is not set
+# CONFIG_INTEL_TH is not set
+# end of HW tracing support
+
+# CONFIG_FPGA is not set
+# CONFIG_FSI is not set
+CONFIG_TEE=y
+# CONFIG_OPTEE is not set
+CONFIG_MBEDTEE=y
+# CONFIG_SIOX is not set
+# CONFIG_SLIMBUS is not set
+# CONFIG_INTERCONNECT is not set
+# CONFIG_COUNTER is not set
+# CONFIG_PECI is not set
+# CONFIG_HTE is not set
+# end of Device Drivers
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+CONFIG_VALIDATE_FS_PARSER=y
+CONFIG_EXPORTFS=y
+# CONFIG_EXPORTFS_BLOCK_OPS is not set
+CONFIG_FILE_LOCKING=y
+# CONFIG_FS_ENCRYPTION is not set
+# CONFIG_FS_VERITY is not set
+CONFIG_FSNOTIFY=y
+# CONFIG_DNOTIFY is not set
+CONFIG_INOTIFY_USER=y
+CONFIG_FANOTIFY=y
+# CONFIG_QUOTA is not set
+# CONFIG_AUTOFS_FS is not set
+# CONFIG_FUSE_FS is not set
+# CONFIG_OVERLAY_FS is not set
+
+#
+# Caches
+#
+# end of Caches
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+# CONFIG_PROC_CHILDREN is not set
+CONFIG_KERNFS=y
+CONFIG_SYSFS=y
+# CONFIG_CONFIGFS_FS is not set
+# end of Pseudo filesystems
+
+# CONFIG_MISC_FILESYSTEMS is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
+# CONFIG_NLS_ISO8859_1 is not set
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+# CONFIG_NLS_UTF8 is not set
+# CONFIG_UNICODE is not set
+# end of File systems
+
+#
+# Security options
+#
+# CONFIG_KEYS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+# CONFIG_SECURITY is not set
+# CONFIG_SECURITYFS is not set
+# CONFIG_HARDENED_USERCOPY is not set
+# CONFIG_FORTIFY_SOURCE is not set
+# CONFIG_STATIC_USERMODEHELPER is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_LSM="yama,loadpin,safesetid,integrity,selinux,smack,tomoyo,apparmor"
+
+#
+# Kernel hardening options
+#
+
+#
+# Memory initialization
+#
+CONFIG_CC_HAS_AUTO_VAR_INIT_PATTERN=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO_BARE=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO=y
+CONFIG_INIT_STACK_NONE=y
+# CONFIG_INIT_STACK_ALL_PATTERN is not set
+# CONFIG_INIT_STACK_ALL_ZERO is not set
+# CONFIG_INIT_ON_ALLOC_DEFAULT_ON is not set
+# CONFIG_INIT_ON_FREE_DEFAULT_ON is not set
+CONFIG_CC_HAS_ZERO_CALL_USED_REGS=y
+# CONFIG_ZERO_CALL_USED_REGS is not set
+# end of Memory initialization
+
+#
+# Hardening of kernel data structures
+#
+# CONFIG_LIST_HARDENED is not set
+# CONFIG_BUG_ON_DATA_CORRUPTION is not set
+# end of Hardening of kernel data structures
+
+CONFIG_RANDSTRUCT_NONE=y
+# end of Kernel hardening options
+# end of Security options
+
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+# CONFIG_CRYPTO_MANAGER is not set
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+# CONFIG_CRYPTO_CRYPTD is not set
+# CONFIG_CRYPTO_AUTHENC is not set
+# CONFIG_CRYPTO_TEST is not set
+# end of Crypto core or helper
+
+#
+# Public-key cryptography
+#
+# CONFIG_CRYPTO_RSA is not set
+# CONFIG_CRYPTO_DH is not set
+# CONFIG_CRYPTO_ECDH is not set
+# CONFIG_CRYPTO_ECDSA is not set
+# CONFIG_CRYPTO_ECRDSA is not set
+# CONFIG_CRYPTO_SM2 is not set
+# CONFIG_CRYPTO_CURVE25519 is not set
+# end of Public-key cryptography
+
+#
+# Block ciphers
+#
+# CONFIG_CRYPTO_AES is not set
+# CONFIG_CRYPTO_AES_TI is not set
+# CONFIG_CRYPTO_ARIA is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+# CONFIG_CRYPTO_DES is not set
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_SM4_GENERIC is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+# end of Block ciphers
+
+#
+# Length-preserving ciphers and modes
+#
+# CONFIG_CRYPTO_ADIANTUM is not set
+# CONFIG_CRYPTO_CHACHA20 is not set
+# CONFIG_CRYPTO_CBC is not set
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+# CONFIG_CRYPTO_ECB is not set
+# CONFIG_CRYPTO_HCTR2 is not set
+# CONFIG_CRYPTO_KEYWRAP is not set
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+# end of Length-preserving ciphers and modes
+
+#
+# AEAD (authenticated encryption with associated data) ciphers
+#
+# CONFIG_CRYPTO_AEGIS128 is not set
+# CONFIG_CRYPTO_CHACHA20POLY1305 is not set
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+# CONFIG_CRYPTO_ECHAINIV is not set
+# CONFIG_CRYPTO_ESSIV is not set
+# end of AEAD (authenticated encryption with associated data) ciphers
+
+#
+# Hashes, digests, and MACs
+#
+# CONFIG_CRYPTO_BLAKE2B is not set
+# CONFIG_CRYPTO_CMAC is not set
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_HMAC is not set
+# CONFIG_CRYPTO_MD4 is not set
+# CONFIG_CRYPTO_MD5 is not set
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_POLY1305 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+CONFIG_CRYPTO_SHA1=y
+# CONFIG_CRYPTO_SHA256 is not set
+# CONFIG_CRYPTO_SHA512 is not set
+# CONFIG_CRYPTO_SHA3 is not set
+# CONFIG_CRYPTO_SM3_GENERIC is not set
+# CONFIG_CRYPTO_STREEBOG is not set
+# CONFIG_CRYPTO_VMAC is not set
+# CONFIG_CRYPTO_WP512 is not set
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_XXHASH is not set
+# end of Hashes, digests, and MACs
+
+#
+# CRCs (cyclic redundancy checks)
+#
+# CONFIG_CRYPTO_CRC32C is not set
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_CRCT10DIF is not set
+# end of CRCs (cyclic redundancy checks)
+
+#
+# Compression
+#
+# CONFIG_CRYPTO_DEFLATE is not set
+# CONFIG_CRYPTO_LZO is not set
+# CONFIG_CRYPTO_842 is not set
+# CONFIG_CRYPTO_LZ4 is not set
+# CONFIG_CRYPTO_LZ4HC is not set
+# CONFIG_CRYPTO_ZSTD is not set
+# end of Compression
+
+#
+# Random number generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+# CONFIG_CRYPTO_DRBG_MENU is not set
+# CONFIG_CRYPTO_JITTERENTROPY is not set
+# end of Random number generation
+
+#
+# Userspace interface
+#
+# end of Userspace interface
+
+#
+# Accelerated Cryptographic Algorithms for CPU (arm)
+#
+# CONFIG_CRYPTO_CURVE25519_NEON is not set
+# CONFIG_CRYPTO_GHASH_ARM_CE is not set
+# CONFIG_CRYPTO_NHPOLY1305_NEON is not set
+# CONFIG_CRYPTO_POLY1305_ARM is not set
+# CONFIG_CRYPTO_BLAKE2S_ARM is not set
+# CONFIG_CRYPTO_BLAKE2B_NEON is not set
+# CONFIG_CRYPTO_SHA1_ARM is not set
+# CONFIG_CRYPTO_SHA1_ARM_NEON is not set
+# CONFIG_CRYPTO_SHA1_ARM_CE is not set
+# CONFIG_CRYPTO_SHA2_ARM_CE is not set
+# CONFIG_CRYPTO_SHA256_ARM is not set
+# CONFIG_CRYPTO_SHA512_ARM is not set
+# CONFIG_CRYPTO_AES_ARM is not set
+# CONFIG_CRYPTO_AES_ARM_BS is not set
+# CONFIG_CRYPTO_AES_ARM_CE is not set
+# CONFIG_CRYPTO_CHACHA20_NEON is not set
+# CONFIG_CRYPTO_CRC32_ARM_CE is not set
+# end of Accelerated Cryptographic Algorithms for CPU (arm)
+
+CONFIG_CRYPTO_HW=y
+# CONFIG_CRYPTO_DEV_SAFEXCEL is not set
+# CONFIG_CRYPTO_DEV_CCREE is not set
+# CONFIG_CRYPTO_DEV_AMLOGIC_GXL is not set
+
+#
+# Certificates for signature checking
+#
+# end of Certificates for signature checking
+
+#
+# Library routines
+#
+# CONFIG_PACKING is not set
+CONFIG_BITREVERSE=y
+CONFIG_HAVE_ARCH_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+# CONFIG_CORDIC is not set
+# CONFIG_PRIME_NUMBERS is not set
+CONFIG_RATIONAL=y
+CONFIG_ARCH_USE_CMPXCHG_LOCKREF=y
+
+#
+# Crypto library routines
+#
+CONFIG_CRYPTO_LIB_UTILS=y
+CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
+# CONFIG_CRYPTO_LIB_CHACHA is not set
+# CONFIG_CRYPTO_LIB_CURVE25519 is not set
+CONFIG_CRYPTO_LIB_POLY1305_RSIZE=9
+# CONFIG_CRYPTO_LIB_POLY1305 is not set
+# CONFIG_CRYPTO_LIB_CHACHA20POLY1305 is not set
+CONFIG_CRYPTO_LIB_SHA1=y
+# end of Crypto library routines
+
+# CONFIG_CRC_CCITT is not set
+# CONFIG_CRC16 is not set
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC64_ROCKSOFT is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC64 is not set
+# CONFIG_CRC4 is not set
+# CONFIG_CRC7 is not set
+# CONFIG_LIBCRC32C is not set
+# CONFIG_CRC8 is not set
+# CONFIG_RANDOM32_SELFTEST is not set
+CONFIG_ZLIB_INFLATE=y
+# CONFIG_XZ_DEC is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_DMA_OPS=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_DMA_DECLARE_COHERENT=y
+CONFIG_ARCH_HAS_SETUP_DMA_OPS=y
+CONFIG_ARCH_HAS_TEARDOWN_DMA_OPS=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_DEVICE=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_CPU=y
+CONFIG_DMA_NONCOHERENT_MMAP=y
+CONFIG_ARCH_HAS_DMA_ALLOC=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_DMA_MAP_BENCHMARK is not set
+# CONFIG_FORCE_NR_CPUS is not set
+CONFIG_GLOB=y
+# CONFIG_GLOB_SELFTEST is not set
+# CONFIG_IRQ_POLL is not set
+CONFIG_LIBFDT=y
+CONFIG_ARCH_STACKWALK=y
+CONFIG_STACKDEPOT=y
+CONFIG_STACKDEPOT_MAX_FRAMES=64
+# CONFIG_LWQ_TEST is not set
+# end of Library routines
+
+CONFIG_GENERIC_LIB_DEVMEM_IS_ALLOWED=y
+
+#
+# Kernel hacking
+#
+
+#
+# printk and dmesg options
+#
+CONFIG_PRINTK_TIME=y
+# CONFIG_PRINTK_CALLER is not set
+# CONFIG_STACKTRACE_BUILD_ID is not set
+CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7
+CONFIG_CONSOLE_LOGLEVEL_QUIET=4
+CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_DYNAMIC_DEBUG_CORE is not set
+# CONFIG_SYMBOLIC_ERRNAME is not set
+# end of printk and dmesg options
+
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_MISC is not set
+
+#
+# Compile-time checks and compiler options
+#
+CONFIG_AS_HAS_NON_CONST_ULEB128=y
+CONFIG_DEBUG_INFO_NONE=y
+# CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set
+# CONFIG_DEBUG_INFO_DWARF4 is not set
+# CONFIG_DEBUG_INFO_DWARF5 is not set
+CONFIG_FRAME_WARN=1024
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_HEADERS_INSTALL is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_SECTION_MISMATCH_WARN_ONLY=y
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+CONFIG_FRAME_POINTER=y
+# CONFIG_VMLINUX_MAP is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# end of Compile-time checks and compiler options
+
+#
+# Generic Kernel Debugging Instruments
+#
+# CONFIG_MAGIC_SYSRQ is not set
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_FS_ALLOW_ALL=y
+# CONFIG_DEBUG_FS_DISALLOW_MOUNT is not set
+# CONFIG_DEBUG_FS_ALLOW_NONE is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+CONFIG_ARCH_HAS_UBSAN=y
+# CONFIG_UBSAN is not set
+CONFIG_HAVE_KCSAN_COMPILER=y
+# end of Generic Kernel Debugging Instruments
+
+#
+# Networking Debugging
+#
+# end of Networking Debugging
+
+#
+# Memory Debugging
+#
+# CONFIG_PAGE_EXTENSION is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+CONFIG_SLUB_DEBUG=y
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_PAGE_OWNER is not set
+# CONFIG_PAGE_POISONING is not set
+# CONFIG_DEBUG_RODATA_TEST is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_PER_VMA_LOCK_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SHRINKER_DEBUG is not set
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_SCHED_STACK_END_CHECK is not set
+# CONFIG_DEBUG_VM is not set
+CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y
+# CONFIG_DEBUG_VIRTUAL is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+# CONFIG_DEBUG_KMAP_LOCAL is not set
+# CONFIG_DEBUG_HIGHMEM is not set
+CONFIG_HAVE_ARCH_KASAN=y
+CONFIG_HAVE_ARCH_KASAN_VMALLOC=y
+CONFIG_CC_HAS_KASAN_GENERIC=y
+CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y
+# CONFIG_KASAN is not set
+CONFIG_HAVE_ARCH_KFENCE=y
+# CONFIG_KFENCE is not set
+# end of Memory Debugging
+
+# CONFIG_DEBUG_SHIRQ is not set
+
+#
+# Debug Oops, Lockups and Hangs
+#
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+CONFIG_PANIC_TIMEOUT=0
+# CONFIG_SOFTLOCKUP_DETECTOR is not set
+CONFIG_HAVE_HARDLOCKUP_DETECTOR_BUDDY=y
+# CONFIG_HARDLOCKUP_DETECTOR is not set
+# CONFIG_DETECT_HUNG_TASK is not set
+# CONFIG_WQ_WATCHDOG is not set
+# CONFIG_WQ_CPU_INTENSIVE_REPORT is not set
+# end of Debug Oops, Lockups and Hangs
+
+#
+# Scheduler Debugging
+#
+# CONFIG_SCHED_DEBUG is not set
+# CONFIG_SCHEDSTATS is not set
+# end of Scheduler Debugging
+
+# CONFIG_DEBUG_TIMEKEEPING is not set
+CONFIG_DEBUG_PREEMPT=y
+
+#
+# Lock Debugging (spinlocks, mutexes, etc...)
+#
+CONFIG_LOCK_DEBUGGING_SUPPORT=y
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_WW_MUTEX_SLOWPATH is not set
+# CONFIG_DEBUG_RWSEMS is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+# CONFIG_LOCK_TORTURE_TEST is not set
+# CONFIG_WW_MUTEX_SELFTEST is not set
+# CONFIG_SCF_TORTURE_TEST is not set
+# end of Lock Debugging (spinlocks, mutexes, etc...)
+
+# CONFIG_DEBUG_IRQFLAGS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_WARN_ALL_UNSEEDED_RANDOM is not set
+# CONFIG_DEBUG_KOBJECT is not set
+
+#
+# Debug kernel data structures
+#
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_DEBUG_PLIST is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_MAPLE_TREE is not set
+# end of Debug kernel data structures
+
+#
+# RCU Debugging
+#
+# CONFIG_RCU_SCALE_TEST is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+# CONFIG_RCU_REF_SCALE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=21
+CONFIG_RCU_EXP_CPU_STALL_TIMEOUT=0
+# CONFIG_RCU_CPU_STALL_CPUTIME is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_RCU_EQS_DEBUG is not set
+# end of RCU Debugging
+
+# CONFIG_DEBUG_WQ_FORCE_RR_CPU is not set
+# CONFIG_CPU_HOTPLUG_STATE_CONTROL is not set
+# CONFIG_LATENCYTOP is not set
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_HAVE_BUILDTIME_MCOUNT_SORT=y
+CONFIG_TRACING_SUPPORT=y
+# CONFIG_FTRACE is not set
+# CONFIG_SAMPLES is not set
+# CONFIG_STRICT_DEVMEM is not set
+
+#
+# arm Debugging
+#
+# CONFIG_ARM_PTDUMP_DEBUGFS is not set
+# CONFIG_ARM_DEBUG_WX is not set
+CONFIG_UNWINDER_FRAME_POINTER=y
+# CONFIG_UNWINDER_ARM is not set
+# CONFIG_BACKTRACE_VERBOSE is not set
+# CONFIG_DEBUG_USER is not set
+# CONFIG_DEBUG_LL is not set
+CONFIG_DEBUG_LL_INCLUDE="mach/debug-macro.S"
+CONFIG_UNCOMPRESS_INCLUDE="debug/uncompress.h"
+# CONFIG_PID_IN_CONTEXTIDR is not set
+# CONFIG_CORESIGHT is not set
+# end of arm Debugging
+
+#
+# Kernel Testing and Coverage
+#
+# CONFIG_KUNIT is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+CONFIG_ARCH_HAS_KCOV=y
+CONFIG_CC_HAS_SANCOV_TRACE_PC=y
+# CONFIG_KCOV is not set
+# CONFIG_RUNTIME_TESTING_MENU is not set
+CONFIG_ARCH_USE_MEMTEST=y
+# CONFIG_MEMTEST is not set
+# end of Kernel Testing and Coverage
+
+#
+# Rust hacking
+#
+# end of Rust hacking
+# end of Kernel hacking
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/armv7a_qemu_virt_linux_config buildroot/tee/linux/armv7a_qemu_virt_linux_config
--- buildroot-ori/tee/linux/armv7a_qemu_virt_linux_config	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/armv7a_qemu_virt_linux_config	2025-05-31 23:12:46.401384555 +0800
@@ -0,0 +1,1947 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/arm 6.9.10 Kernel Configuration
+#
+CONFIG_CC_VERSION_TEXT="arm-none-linux-gnueabihf-gcc (Arm GNU Toolchain 13.2.rel1 (Build arm-13.7)) 13.2.1 20231009"
+CONFIG_CC_IS_GCC=y
+CONFIG_GCC_VERSION=130201
+CONFIG_CLANG_VERSION=0
+CONFIG_AS_IS_GNU=y
+CONFIG_AS_VERSION=24100
+CONFIG_LD_IS_BFD=y
+CONFIG_LD_VERSION=24100
+CONFIG_LLD_VERSION=0
+CONFIG_CC_CAN_LINK=y
+CONFIG_CC_CAN_LINK_STATIC=y
+CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
+CONFIG_CC_HAS_ASM_GOTO_TIED_OUTPUT=y
+CONFIG_GCC_ASM_GOTO_OUTPUT_WORKAROUND=y
+CONFIG_CC_HAS_ASM_INLINE=y
+CONFIG_CC_HAS_NO_PROFILE_FN_ATTR=y
+CONFIG_PAHOLE_VERSION=0
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_TABLE_SORT=y
+CONFIG_THREAD_INFO_IN_TASK=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+# CONFIG_COMPILE_TEST is not set
+# CONFIG_WERROR is not set
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_BUILD_SALT=""
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_XZ=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_HAVE_KERNEL_LZ4=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_XZ is not set
+# CONFIG_KERNEL_LZO is not set
+# CONFIG_KERNEL_LZ4 is not set
+CONFIG_DEFAULT_INIT=""
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_WATCH_QUEUE is not set
+# CONFIG_CROSS_MEMORY_ATTACH is not set
+# CONFIG_USELIB is not set
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_IRQ_SHOW_LEVEL=y
+CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK=y
+CONFIG_GENERIC_IRQ_MIGRATION=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+CONFIG_IRQ_DOMAIN_HIERARCHY=y
+CONFIG_GENERIC_IRQ_IPI=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+# CONFIG_GENERIC_IRQ_DEBUGFS is not set
+# end of IRQ subsystem
+
+CONFIG_GENERIC_IRQ_MULTI_HANDLER=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_CONTEXT_TRACKING=y
+CONFIG_CONTEXT_TRACKING_IDLE=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+# CONFIG_NO_HZ_IDLE is not set
+CONFIG_NO_HZ_FULL=y
+CONFIG_CONTEXT_TRACKING_USER=y
+# CONFIG_CONTEXT_TRACKING_USER_FORCE is not set
+# CONFIG_NO_HZ is not set
+CONFIG_HIGH_RES_TIMERS=y
+# end of Timers subsystem
+
+CONFIG_HAVE_EBPF_JIT=y
+
+#
+# BPF subsystem
+#
+# CONFIG_BPF_SYSCALL is not set
+# end of BPF subsystem
+
+CONFIG_PREEMPT_BUILD=y
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_PREEMPT_COUNT=y
+CONFIG_PREEMPTION=y
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_VIRT_CPU_ACCOUNTING=y
+CONFIG_VIRT_CPU_ACCOUNTING_GEN=y
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_PSI is not set
+# end of CPU/Task time and stats accounting
+
+CONFIG_CPU_ISOLATION=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+CONFIG_PREEMPT_RCU=y
+# CONFIG_RCU_EXPERT is not set
+CONFIG_TREE_SRCU=y
+CONFIG_NEED_SRCU_NMI_SAFE=y
+CONFIG_RCU_STALL_COMMON=y
+CONFIG_RCU_NEED_SEGCBLIST=y
+CONFIG_RCU_NOCB_CPU=y
+# CONFIG_RCU_NOCB_CPU_DEFAULT_ALL is not set
+# CONFIG_RCU_LAZY is not set
+# end of RCU Subsystem
+
+CONFIG_IKCONFIG=y
+# CONFIG_IKCONFIG_PROC is not set
+# CONFIG_IKHEADERS is not set
+CONFIG_LOG_BUF_SHIFT=16
+CONFIG_LOG_CPU_MAX_BUF_SHIFT=12
+# CONFIG_PRINTK_INDEX is not set
+CONFIG_GENERIC_SCHED_CLOCK=y
+
+#
+# Scheduler features
+#
+# end of Scheduler features
+
+CONFIG_CC_IMPLICIT_FALLTHROUGH="-Wimplicit-fallthrough=5"
+CONFIG_GCC10_NO_ARRAY_BOUNDS=y
+CONFIG_CC_NO_ARRAY_BOUNDS=y
+CONFIG_GCC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CGROUPS=y
+# CONFIG_CGROUP_FAVOR_DYNMODS is not set
+# CONFIG_MEMCG is not set
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+CONFIG_CFS_BANDWIDTH=y
+CONFIG_RT_GROUP_SCHED=y
+# CONFIG_CGROUP_PIDS is not set
+# CONFIG_CGROUP_RDMA is not set
+# CONFIG_CGROUP_FREEZER is not set
+# CONFIG_CPUSETS is not set
+# CONFIG_CGROUP_DEVICE is not set
+# CONFIG_CGROUP_CPUACCT is not set
+# CONFIG_CGROUP_MISC is not set
+# CONFIG_CGROUP_DEBUG is not set
+# CONFIG_NAMESPACES is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+# CONFIG_SCHED_AUTOGROUP is not set
+# CONFIG_RELAY is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE="${BR_BINARIES_DIR}/rootfs.cpio"
+CONFIG_INITRAMFS_FORCE=y
+CONFIG_INITRAMFS_ROOT_UID=0
+CONFIG_INITRAMFS_ROOT_GID=0
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+# CONFIG_RD_LZ4 is not set
+# CONFIG_RD_ZSTD is not set
+CONFIG_INITRAMFS_COMPRESSION_GZIP=y
+# CONFIG_INITRAMFS_COMPRESSION_NONE is not set
+# CONFIG_BOOT_CONFIG is not set
+CONFIG_INITRAMFS_PRESERVE_MTIME=y
+CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_LD_ORPHAN_WARN=y
+CONFIG_LD_ORPHAN_WARN_LEVEL="warn"
+CONFIG_SYSCTL=y
+CONFIG_HAVE_UID16=y
+CONFIG_EXPERT=y
+CONFIG_UID16=y
+CONFIG_MULTIUSER=y
+# CONFIG_SGETMASK_SYSCALL is not set
+CONFIG_SYSFS_SYSCALL=y
+# CONFIG_FHANDLE is not set
+CONFIG_POSIX_TIMERS=y
+CONFIG_PRINTK=y
+# CONFIG_BUG is not set
+CONFIG_ELF_CORE=y
+# CONFIG_BASE_FULL is not set
+CONFIG_FUTEX=y
+CONFIG_FUTEX_PI=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+# CONFIG_SHMEM is not set
+# CONFIG_AIO is not set
+# CONFIG_IO_URING is not set
+# CONFIG_ADVISE_SYSCALLS is not set
+CONFIG_MEMBARRIER=y
+# CONFIG_KCMP is not set
+# CONFIG_RSEQ is not set
+CONFIG_CACHESTAT_SYSCALL=y
+# CONFIG_PC104 is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_SELFTEST is not set
+CONFIG_KALLSYMS_ALL=y
+CONFIG_KALLSYMS_BASE_RELATIVE=y
+CONFIG_ARCH_HAS_MEMBARRIER_SYNC_CORE=y
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PERF_USE_VMALLOC=y
+
+#
+# Kernel Performance Events And Counters
+#
+# CONFIG_PERF_EVENTS is not set
+# end of Kernel Performance Events And Counters
+
+# CONFIG_PROFILING is not set
+
+#
+# Kexec and crash features
+#
+# end of Kexec and crash features
+# end of General setup
+
+CONFIG_ARM=y
+CONFIG_ARM_HAS_GROUP_RELOCS=y
+CONFIG_SYS_SUPPORTS_APM_EMULATION=y
+CONFIG_HAVE_PROC_CPU=y
+CONFIG_NO_IOPORT_MAP=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_ARCH_SUPPORTS_UPROBES=y
+CONFIG_ARM_PATCH_PHYS_VIRT=y
+CONFIG_PGTABLE_LEVELS=2
+
+#
+# System Type
+#
+CONFIG_MMU=y
+CONFIG_ARCH_MMAP_RND_BITS_MIN=8
+CONFIG_ARCH_MMAP_RND_BITS_MAX=16
+CONFIG_ARCH_MULTIPLATFORM=y
+
+#
+# Platform selection
+#
+
+#
+# CPU Core family selection
+#
+# CONFIG_ARCH_MULTI_V6 is not set
+CONFIG_ARCH_MULTI_V7=y
+CONFIG_ARCH_MULTI_V6_V7=y
+# end of Platform selection
+
+# CONFIG_ARCH_VIRT is not set
+# CONFIG_ARCH_AIROHA is not set
+# CONFIG_ARCH_RDA is not set
+# CONFIG_ARCH_SUNPLUS is not set
+# CONFIG_ARCH_UNIPHIER is not set
+# CONFIG_ARCH_ACTIONS is not set
+# CONFIG_ARCH_ALPINE is not set
+# CONFIG_ARCH_ARTPEC is not set
+# CONFIG_ARCH_ASPEED is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_ARCH_BCM is not set
+# CONFIG_ARCH_BERLIN is not set
+# CONFIG_ARCH_DIGICOLOR is not set
+# CONFIG_ARCH_DOVE is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_HIGHBANK is not set
+# CONFIG_ARCH_HISI is not set
+# CONFIG_ARCH_HPE is not set
+# CONFIG_ARCH_MXC is not set
+# CONFIG_ARCH_KEYSTONE is not set
+# CONFIG_ARCH_MEDIATEK is not set
+# CONFIG_ARCH_MESON is not set
+# CONFIG_ARCH_MILBEAUT is not set
+# CONFIG_ARCH_MMP is not set
+# CONFIG_ARCH_MSTARV7 is not set
+# CONFIG_ARCH_MVEBU is not set
+# CONFIG_ARCH_NPCM is not set
+
+#
+# TI OMAP/AM/DM/DRA Family
+#
+# CONFIG_ARCH_OMAP3 is not set
+# CONFIG_ARCH_OMAP4 is not set
+# CONFIG_SOC_OMAP5 is not set
+# CONFIG_SOC_AM33XX is not set
+# CONFIG_SOC_AM43XX is not set
+# CONFIG_SOC_DRA7XX is not set
+# end of TI OMAP/AM/DM/DRA Family
+
+# CONFIG_ARCH_QCOM is not set
+# CONFIG_ARCH_REALTEK is not set
+# CONFIG_ARCH_ROCKCHIP is not set
+# CONFIG_ARCH_S5PV210 is not set
+# CONFIG_ARCH_RENESAS is not set
+# CONFIG_ARCH_INTEL_SOCFPGA is not set
+# CONFIG_PLAT_SPEAR is not set
+# CONFIG_ARCH_STI is not set
+# CONFIG_ARCH_STM32 is not set
+# CONFIG_ARCH_SUNXI is not set
+# CONFIG_ARCH_TEGRA is not set
+# CONFIG_ARCH_U8500 is not set
+# CONFIG_ARCH_REALVIEW is not set
+CONFIG_ARCH_VEXPRESS=y
+CONFIG_ARCH_VEXPRESS_CORTEX_A5_A9_ERRATA=y
+# CONFIG_ARCH_VEXPRESS_SPC is not set
+# CONFIG_ARCH_WM8850 is not set
+# CONFIG_ARCH_ZYNQ is not set
+CONFIG_PLAT_VERSATILE=y
+
+#
+# Processor Type
+#
+CONFIG_CPU_V7=y
+CONFIG_CPU_THUMB_CAPABLE=y
+CONFIG_CPU_32v6K=y
+CONFIG_CPU_32v7=y
+CONFIG_CPU_ABRT_EV7=y
+CONFIG_CPU_PABRT_V7=y
+CONFIG_CPU_CACHE_V7=y
+CONFIG_CPU_CACHE_VIPT=y
+CONFIG_CPU_COPY_V6=y
+CONFIG_CPU_TLB_V7=y
+CONFIG_CPU_HAS_ASID=y
+CONFIG_CPU_CP15=y
+CONFIG_CPU_CP15_MMU=y
+
+#
+# Processor Features
+#
+# CONFIG_ARM_LPAE is not set
+CONFIG_ARM_THUMB=y
+# CONFIG_ARM_THUMBEE is not set
+CONFIG_ARM_VIRT_EXT=y
+CONFIG_SWP_EMULATE=y
+CONFIG_CPU_LITTLE_ENDIAN=y
+# CONFIG_CPU_BIG_ENDIAN is not set
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_ICACHE_MISMATCH_WORKAROUND is not set
+# CONFIG_CPU_BPREDICT_DISABLE is not set
+CONFIG_CPU_SPECTRE=y
+# CONFIG_HARDEN_BRANCH_PREDICTOR is not set
+CONFIG_HARDEN_BRANCH_HISTORY=y
+# CONFIG_KUSER_HELPERS is not set
+# CONFIG_VDSO is not set
+CONFIG_MIGHT_HAVE_CACHE_L2X0=y
+# CONFIG_CACHE_L2X0 is not set
+CONFIG_ARM_L1_CACHE_SHIFT_6=y
+CONFIG_ARM_L1_CACHE_SHIFT=6
+CONFIG_ARM_DMA_MEM_BUFFERABLE=y
+CONFIG_DEBUG_ALIGN_RODATA=y
+# CONFIG_ARM_ERRATA_430973 is not set
+CONFIG_ARM_ERRATA_643719=y
+CONFIG_ARM_ERRATA_720789=y
+# CONFIG_ARM_ERRATA_754322 is not set
+# CONFIG_ARM_ERRATA_754327 is not set
+# CONFIG_ARM_ERRATA_764369 is not set
+# CONFIG_ARM_ERRATA_764319 is not set
+# CONFIG_ARM_ERRATA_775420 is not set
+CONFIG_ARM_ERRATA_798181=y
+CONFIG_ARM_ERRATA_773022=y
+# CONFIG_ARM_ERRATA_818325_852422 is not set
+# CONFIG_ARM_ERRATA_821420 is not set
+# CONFIG_ARM_ERRATA_825619 is not set
+# CONFIG_ARM_ERRATA_857271 is not set
+# CONFIG_ARM_ERRATA_852421 is not set
+# CONFIG_ARM_ERRATA_852423 is not set
+# CONFIG_ARM_ERRATA_857272 is not set
+# end of System Type
+
+#
+# Bus support
+#
+# CONFIG_ARM_ERRATA_814220 is not set
+# end of Bus support
+
+#
+# Kernel Features
+#
+CONFIG_HAVE_SMP=y
+CONFIG_SMP=y
+CONFIG_SMP_ON_UP=y
+CONFIG_CURRENT_POINTER_IN_TPIDRURO=y
+CONFIG_IRQSTACKS=y
+CONFIG_ARM_CPU_TOPOLOGY=y
+CONFIG_SCHED_MC=y
+# CONFIG_SCHED_SMT is not set
+CONFIG_HAVE_ARM_SCU=y
+CONFIG_HAVE_ARM_ARCH_TIMER=y
+CONFIG_HAVE_ARM_TWD=y
+# CONFIG_MCPM is not set
+# CONFIG_BIG_LITTLE is not set
+CONFIG_VMSPLIT_3G=y
+# CONFIG_VMSPLIT_3G_OPT is not set
+# CONFIG_VMSPLIT_2G is not set
+# CONFIG_VMSPLIT_1G is not set
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_NR_CPUS=8
+CONFIG_HOTPLUG_CPU=y
+CONFIG_ARM_PSCI=y
+CONFIG_HZ_FIXED=0
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_200 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+# CONFIG_HZ_500 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_SCHED_HRTICK=y
+# CONFIG_THUMB2_KERNEL is not set
+CONFIG_ARM_PATCH_IDIV=y
+CONFIG_AEABI=y
+# CONFIG_OABI_COMPAT is not set
+CONFIG_ARCH_SELECT_MEMORY_MODEL=y
+CONFIG_ARCH_FLATMEM_ENABLE=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_HIGHMEM=y
+CONFIG_HIGHPTE=y
+CONFIG_CPU_SW_DOMAIN_PAN=y
+CONFIG_ARCH_FORCE_MAX_ORDER=10
+CONFIG_ALIGNMENT_TRAP=y
+# CONFIG_UACCESS_WITH_MEMCPY is not set
+# CONFIG_PARAVIRT is not set
+# CONFIG_PARAVIRT_TIME_ACCOUNTING is not set
+# CONFIG_XEN is not set
+CONFIG_CC_HAVE_STACKPROTECTOR_TLS=y
+# end of Kernel Features
+
+#
+# Boot options
+#
+CONFIG_USE_OF=y
+CONFIG_ARCH_WANT_FLAT_DTB_INSTALL=y
+CONFIG_ATAGS=y
+# CONFIG_DEPRECATED_PARAM_STRUCT is not set
+CONFIG_ZBOOT_ROM_TEXT=0
+CONFIG_ZBOOT_ROM_BSS=0
+# CONFIG_ARM_APPENDED_DTB is not set
+CONFIG_CMDLINE="console=ttyAMA0,115200n8 root=/dev/ram0 rootwait earlycon=pl011,mmio32,0x09000000"
+# CONFIG_CMDLINE_FROM_BOOTLOADER is not set
+# CONFIG_CMDLINE_EXTEND is not set
+CONFIG_CMDLINE_FORCE=y
+CONFIG_ARCH_SUPPORTS_CRASH_DUMP=y
+CONFIG_AUTO_ZRELADDR=y
+# CONFIG_EFI is not set
+# end of Boot options
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_GOV_ATTR_SET=y
+CONFIG_CPU_FREQ_GOV_COMMON=y
+CONFIG_CPU_FREQ_STAT=y
+CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_GOV_POWERSAVE is not set
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_GOV_SCHEDUTIL is not set
+
+#
+# CPU frequency scaling drivers
+#
+# CONFIG_CPUFREQ_DT is not set
+# CONFIG_CPUFREQ_DT_PLATDEV is not set
+# end of CPU Frequency scaling
+
+#
+# CPU Idle
+#
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_MULTIPLE_DRIVERS=y
+CONFIG_CPU_IDLE_GOV_LADDER=y
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_CPU_IDLE_GOV_TEO is not set
+CONFIG_DT_IDLE_STATES=y
+
+#
+# ARM CPU Idle Drivers
+#
+CONFIG_ARM_CPUIDLE=y
+# CONFIG_ARM_PSCI_CPUIDLE is not set
+# CONFIG_ARM_HIGHBANK_CPUIDLE is not set
+# end of ARM CPU Idle Drivers
+# end of CPU Idle
+# end of CPU Power Management
+
+#
+# Floating point emulation
+#
+
+#
+# At least one emulation must be selected
+#
+CONFIG_VFP=y
+CONFIG_VFPv3=y
+CONFIG_NEON=y
+CONFIG_KERNEL_MODE_NEON=y
+# end of Floating point emulation
+
+#
+# Power management options
+#
+# CONFIG_SUSPEND is not set
+# CONFIG_PM is not set
+# CONFIG_APM_EMULATION is not set
+CONFIG_CPU_PM=y
+# CONFIG_ENERGY_MODEL is not set
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_ARM_CPU_SUSPEND=y
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+# end of Power management options
+
+CONFIG_AS_VFP_VMRS_FPINST=y
+CONFIG_CPU_MITIGATIONS=y
+
+#
+# General architecture-dependent options
+#
+CONFIG_HOTPLUG_CORE_SYNC=y
+CONFIG_HOTPLUG_CORE_SYNC_DEAD=y
+CONFIG_JUMP_LABEL=y
+# CONFIG_STATIC_KEYS_SELFTEST is not set
+CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
+CONFIG_ARCH_USE_BUILTIN_BSWAP=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_OPTPROBES=y
+CONFIG_ARCH_CORRECT_STACKTRACE_ON_KRETPROBE=y
+CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y
+CONFIG_HAVE_NMI=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_ARCH_HAS_FORTIFY_SOURCE=y
+CONFIG_ARCH_HAS_KEEPINITRD=y
+CONFIG_ARCH_HAS_SET_MEMORY=y
+CONFIG_ARCH_HAS_CPU_FINALIZE_INIT=y
+CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y
+CONFIG_ARCH_32BIT_OFF_T=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_RSEQ=y
+CONFIG_HAVE_PERF_REGS=y
+CONFIG_HAVE_PERF_USER_STACK_DUMP=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_MMU_LAZY_TLB_REFCOUNT=y
+CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
+CONFIG_ARCH_WANT_IPC_PARSE_VERSION=y
+CONFIG_HAVE_ARCH_SECCOMP=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+# CONFIG_SECCOMP is not set
+CONFIG_HAVE_STACKPROTECTOR=y
+# CONFIG_STACKPROTECTOR is not set
+CONFIG_LTO_NONE=y
+CONFIG_HAVE_CONTEXT_TRACKING_USER=y
+CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
+CONFIG_MODULES_USE_ELF_REL=y
+CONFIG_HAVE_IRQ_EXIT_ON_IRQ_STACK=y
+CONFIG_HAVE_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_ARCH_HAS_ELF_RANDOMIZE=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_HAVE_EXIT_THREAD=y
+CONFIG_ARCH_MMAP_RND_BITS=8
+CONFIG_HAVE_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_64KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_256KB=y
+CONFIG_PAGE_SHIFT=12
+CONFIG_ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT=y
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_OLD_SIGSUSPEND3=y
+CONFIG_OLD_SIGACTION=y
+CONFIG_COMPAT_32BIT_TIME=y
+CONFIG_HAVE_ARCH_VMAP_STACK=y
+CONFIG_VMAP_STACK=y
+CONFIG_ARCH_OPTIONAL_KERNEL_RWX=y
+CONFIG_ARCH_OPTIONAL_KERNEL_RWX_DEFAULT=y
+CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y
+CONFIG_STRICT_KERNEL_RWX=y
+CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y
+# CONFIG_LOCK_EVENT_COUNTS is not set
+CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y
+CONFIG_HAVE_ARCH_PFN_VALID=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y
+# end of GCOV-based kernel profiling
+
+CONFIG_HAVE_GCC_PLUGINS=y
+# CONFIG_GCC_PLUGINS is not set
+CONFIG_FUNCTION_ALIGNMENT=0
+# end of General architecture-dependent options
+
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=1
+# CONFIG_MODULES is not set
+# CONFIG_BLOCK is not set
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_LOCK_SPIN_ON_OWNER=y
+CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE=y
+
+#
+# Executable file formats
+#
+CONFIG_BINFMT_ELF=y
+# CONFIG_BINFMT_ELF_FDPIC is not set
+CONFIG_ELFCORE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_BINFMT_SCRIPT=y
+CONFIG_ARCH_HAS_BINFMT_FLAT=y
+# CONFIG_BINFMT_FLAT is not set
+CONFIG_BINFMT_FLAT_ARGVP_ENVP_ON_STACK=y
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+# end of Executable file formats
+
+#
+# Memory Management options
+#
+
+#
+# Slab allocator options
+#
+CONFIG_SLUB=y
+# CONFIG_SLUB_TINY is not set
+CONFIG_SLAB_MERGE_DEFAULT=y
+# CONFIG_SLAB_FREELIST_RANDOM is not set
+# CONFIG_SLAB_FREELIST_HARDENED is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_SLUB_CPU_PARTIAL=y
+# CONFIG_RANDOM_KMALLOC_CACHES is not set
+# end of Slab allocator options
+
+# CONFIG_SHUFFLE_PAGE_ALLOCATOR is not set
+CONFIG_COMPAT_BRK=y
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_FLATMEM_MANUAL=y
+# CONFIG_SPARSEMEM_MANUAL is not set
+CONFIG_FLATMEM=y
+CONFIG_ARCH_KEEP_MEMBLOCK=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_COMPACTION=y
+CONFIG_COMPACT_UNEVICTABLE_DEFAULT=1
+# CONFIG_PAGE_REPORTING is not set
+CONFIG_MIGRATION=y
+CONFIG_PCP_BATCH_SCALE_MAX=5
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_ARCH_WANT_GENERAL_HUGETLB=y
+# CONFIG_CMA is not set
+CONFIG_GENERIC_EARLY_IOREMAP=y
+# CONFIG_IDLE_PAGE_TRACKING is not set
+CONFIG_ARCH_HAS_CPU_CACHE_ALIASING=y
+CONFIG_ARCH_HAS_CURRENT_STACK_POINTER=y
+# CONFIG_VM_EVENT_COUNTERS is not set
+# CONFIG_PERCPU_STATS is not set
+# CONFIG_GUP_TEST is not set
+# CONFIG_DMAPOOL_TEST is not set
+CONFIG_KMAP_LOCAL=y
+CONFIG_KMAP_LOCAL_NON_LINEAR_PTE_ARRAY=y
+# CONFIG_MEMFD_CREATE is not set
+# CONFIG_USERFAULTFD is not set
+# CONFIG_LRU_GEN is not set
+CONFIG_ARCH_SUPPORTS_PER_VMA_LOCK=y
+CONFIG_PER_VMA_LOCK=y
+CONFIG_LOCK_MM_AND_FIND_VMA=y
+
+#
+# Data Access Monitoring
+#
+# CONFIG_DAMON is not set
+# end of Data Access Monitoring
+# end of Memory Management options
+
+# CONFIG_NET is not set
+
+#
+# Device Drivers
+#
+CONFIG_ARM_AMBA=y
+CONFIG_HAVE_PCI=y
+CONFIG_GENERIC_PCI_IOMAP=y
+# CONFIG_PCI is not set
+# CONFIG_PCCARD is not set
+
+#
+# Generic Driver Options
+#
+# CONFIG_UEVENT_HELPER is not set
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+# CONFIG_DEVTMPFS_SAFE is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+
+#
+# Firmware loader
+#
+# CONFIG_FW_LOADER is not set
+# end of Firmware loader
+
+# CONFIG_ALLOW_DEV_COREDUMP is not set
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_DEBUG_TEST_DRIVER_REMOVE is not set
+CONFIG_GENERIC_CPU_AUTOPROBE=y
+CONFIG_GENERIC_CPU_VULNERABILITIES=y
+CONFIG_SOC_BUS=y
+CONFIG_REGMAP=y
+CONFIG_REGMAP_MMIO=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_DMA_FENCE_TRACE is not set
+CONFIG_GENERIC_ARCH_TOPOLOGY=y
+# CONFIG_FW_DEVLINK_SYNC_STATE_TIMEOUT is not set
+# end of Generic Driver Options
+
+#
+# Bus devices
+#
+CONFIG_VEXPRESS_CONFIG=y
+# CONFIG_MHI_BUS is not set
+# CONFIG_MHI_BUS_EP is not set
+# end of Bus devices
+
+#
+# Cache Drivers
+#
+# end of Cache Drivers
+
+#
+# Firmware Drivers
+#
+
+#
+# ARM System Control and Management Interface Protocol
+#
+# CONFIG_ARM_SCMI_PROTOCOL is not set
+# end of ARM System Control and Management Interface Protocol
+
+# CONFIG_FIRMWARE_MEMMAP is not set
+# CONFIG_TRUSTED_FOUNDATIONS is not set
+# CONFIG_GOOGLE_FIRMWARE is not set
+CONFIG_ARM_PSCI_FW=y
+# CONFIG_ARM_PSCI_CHECKER is not set
+
+#
+# Qualcomm firmware drivers
+#
+# end of Qualcomm firmware drivers
+
+CONFIG_HAVE_ARM_SMCCC=y
+CONFIG_HAVE_ARM_SMCCC_DISCOVERY=y
+CONFIG_ARM_SMCCC_SOC_ID=y
+
+#
+# Tegra firmware driver
+#
+# end of Tegra firmware driver
+# end of Firmware Drivers
+
+# CONFIG_GNSS is not set
+# CONFIG_MTD is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+# CONFIG_OF_UNITTEST is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_KOBJ=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_RESERVED_MEM=y
+# CONFIG_OF_OVERLAY is not set
+CONFIG_ARCH_MIGHT_HAVE_PC_PARPORT=y
+# CONFIG_PARPORT is not set
+
+#
+# NVME Support
+#
+# end of NVME Support
+
+#
+# Misc devices
+#
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_SRAM is not set
+# CONFIG_XILINX_SDFEC is not set
+# CONFIG_OPEN_DICE is not set
+# CONFIG_VCPU_STALL_DETECTOR is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_93CX6 is not set
+# end of EEPROM support
+
+#
+# Texas Instruments shared transport line discipline
+#
+# end of Texas Instruments shared transport line discipline
+
+#
+# Altera FPGA firmware download module (requires I2C)
+#
+# CONFIG_ECHO is not set
+# CONFIG_PVPANIC is not set
+# end of Misc devices
+
+#
+# SCSI device support
+#
+# end of SCSI device support
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+# CONFIG_INPUT_MATRIXKMAP is not set
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
+# CONFIG_INPUT_EVDEV is not set
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+# CONFIG_INPUT_KEYBOARD is not set
+# CONFIG_INPUT_MOUSE is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+# CONFIG_INPUT_TOUCHSCREEN is not set
+# CONFIG_INPUT_MISC is not set
+# CONFIG_RMI4_CORE is not set
+
+#
+# Hardware I/O ports
+#
+# CONFIG_SERIO is not set
+# CONFIG_GAMEPORT is not set
+# end of Hardware I/O ports
+# end of Input device support
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+# CONFIG_VT_HW_CONSOLE_BINDING is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_LEGACY_PTYS is not set
+CONFIG_LEGACY_TIOCSTI=y
+# CONFIG_LDISC_AUTOLOAD is not set
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_EARLYCON=y
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_AMBA_PL010 is not set
+CONFIG_SERIAL_AMBA_PL011=y
+CONFIG_SERIAL_AMBA_PL011_CONSOLE=y
+# CONFIG_SERIAL_EARLYCON_SEMIHOST is not set
+# CONFIG_SERIAL_UARTLITE is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_SIFIVE is not set
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_SERIAL_ARC is not set
+# CONFIG_SERIAL_FSL_LPUART is not set
+# CONFIG_SERIAL_FSL_LINFLEXUART is not set
+# CONFIG_SERIAL_CONEXANT_DIGICOLOR is not set
+# CONFIG_SERIAL_ST_ASC is not set
+# CONFIG_SERIAL_SPRD is not set
+# end of Serial drivers
+
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_NULL_TTY is not set
+# CONFIG_HVC_DCC is not set
+# CONFIG_SERIAL_DEV_BUS is not set
+# CONFIG_TTY_PRINTK is not set
+# CONFIG_VIRTIO_CONSOLE is not set
+# CONFIG_IPMI_HANDLER is not set
+CONFIG_HW_RANDOM=y
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+# CONFIG_HW_RANDOM_BA431 is not set
+# CONFIG_HW_RANDOM_CCTRNG is not set
+# CONFIG_HW_RANDOM_XIPHERA is not set
+CONFIG_HW_RANDOM_ARM_SMCCC_TRNG=y
+CONFIG_DEVMEM=y
+CONFIG_DEVPORT=y
+# CONFIG_TCG_TPM is not set
+# CONFIG_XILLYBUS is not set
+# end of Character devices
+
+#
+# I2C support
+#
+# CONFIG_I2C is not set
+# end of I2C support
+
+# CONFIG_I3C is not set
+# CONFIG_SPI is not set
+# CONFIG_SPMI is not set
+# CONFIG_HSI is not set
+# CONFIG_PPS is not set
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK_OPTIONAL=y
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# end of PTP clock support
+
+# CONFIG_PINCTRL is not set
+CONFIG_GPIOLIB=y
+CONFIG_GPIOLIB_FASTPATH_LIMIT=512
+CONFIG_OF_GPIO=y
+# CONFIG_DEBUG_GPIO is not set
+# CONFIG_GPIO_SYSFS is not set
+CONFIG_GPIO_CDEV=y
+CONFIG_GPIO_CDEV_V1=y
+CONFIG_GPIO_GENERIC=y
+
+#
+# Memory mapped GPIO drivers
+#
+# CONFIG_GPIO_74XX_MMIO is not set
+# CONFIG_GPIO_ALTERA is not set
+# CONFIG_GPIO_CADENCE is not set
+# CONFIG_GPIO_DWAPB is not set
+# CONFIG_GPIO_FTGPIO010 is not set
+CONFIG_GPIO_GENERIC_PLATFORM=y
+# CONFIG_GPIO_GRGPIO is not set
+# CONFIG_GPIO_HLWD is not set
+# CONFIG_GPIO_LOGICVC is not set
+# CONFIG_GPIO_MB86S7X is not set
+# CONFIG_GPIO_MPC8XXX is not set
+# CONFIG_GPIO_PL061 is not set
+# CONFIG_GPIO_SIFIVE is not set
+# CONFIG_GPIO_SYSCON is not set
+# CONFIG_GPIO_XILINX is not set
+# CONFIG_GPIO_ZEVIO is not set
+# CONFIG_GPIO_AMD_FCH is not set
+# end of Memory mapped GPIO drivers
+
+#
+# MFD GPIO expanders
+#
+# CONFIG_HTC_EGPIO is not set
+# end of MFD GPIO expanders
+
+#
+# Virtual GPIO drivers
+#
+# CONFIG_GPIO_AGGREGATOR is not set
+# CONFIG_GPIO_LATCH is not set
+# CONFIG_GPIO_MOCKUP is not set
+# CONFIG_GPIO_SIM is not set
+# end of Virtual GPIO drivers
+
+# CONFIG_W1 is not set
+CONFIG_POWER_RESET=y
+# CONFIG_POWER_RESET_BRCMKONA is not set
+# CONFIG_POWER_RESET_GPIO is not set
+# CONFIG_POWER_RESET_GPIO_RESTART is not set
+# CONFIG_POWER_RESET_LTC2952 is not set
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_RESET_VERSATILE is not set
+CONFIG_POWER_RESET_VEXPRESS=y
+# CONFIG_POWER_RESET_SYSCON is not set
+# CONFIG_POWER_RESET_SYSCON_POWEROFF is not set
+# CONFIG_SYSCON_REBOOT_MODE is not set
+# CONFIG_NVMEM_REBOOT_MODE is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_SAMSUNG_SDI is not set
+# CONFIG_BATTERY_BQ27XXX is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_LT3651 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_HWMON is not set
+# CONFIG_THERMAL is not set
+# CONFIG_WATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+CONFIG_MFD_CORE=y
+# CONFIG_MFD_ATMEL_FLEXCOM is not set
+# CONFIG_MFD_ATMEL_HLCDC is not set
+# CONFIG_MFD_MADERA is not set
+# CONFIG_MFD_HI6421_PMIC is not set
+# CONFIG_MFD_KEMPLD is not set
+# CONFIG_MFD_MT6397 is not set
+# CONFIG_MFD_PM8XXX is not set
+# CONFIG_MFD_SM501 is not set
+CONFIG_MFD_SYSCON=y
+# CONFIG_MFD_TQMX86 is not set
+CONFIG_MFD_VEXPRESS_SYSREG=y
+# end of Multifunction device drivers
+
+# CONFIG_REGULATOR is not set
+# CONFIG_RC_CORE is not set
+
+#
+# CEC support
+#
+# CONFIG_MEDIA_CEC_SUPPORT is not set
+# end of CEC support
+
+# CONFIG_MEDIA_SUPPORT is not set
+
+#
+# Graphics support
+#
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_DRM is not set
+# CONFIG_DRM_DEBUG_MODESET_LOCK is not set
+
+#
+# Frame buffer Devices
+#
+# CONFIG_FB is not set
+# end of Frame buffer Devices
+
+#
+# Backlight & LCD device support
+#
+# CONFIG_LCD_CLASS_DEVICE is not set
+# CONFIG_BACKLIGHT_CLASS_DEVICE is not set
+# end of Backlight & LCD device support
+
+#
+# Console display driver support
+#
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_DUMMY_CONSOLE_COLUMNS=80
+CONFIG_DUMMY_CONSOLE_ROWS=30
+# end of Console display driver support
+# end of Graphics support
+
+# CONFIG_SOUND is not set
+CONFIG_HID_SUPPORT=y
+# CONFIG_HID is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+# CONFIG_USB_SUPPORT is not set
+# CONFIG_MMC is not set
+# CONFIG_MEMSTICK is not set
+# CONFIG_NEW_LEDS is not set
+# CONFIG_ACCESSIBILITY is not set
+CONFIG_EDAC_ATOMIC_SCRUB=y
+CONFIG_EDAC_SUPPORT=y
+CONFIG_RTC_LIB=y
+# CONFIG_RTC_CLASS is not set
+# CONFIG_DMADEVICES is not set
+
+#
+# DMABUF options
+#
+# CONFIG_SYNC_FILE is not set
+# CONFIG_DMABUF_MOVE_NOTIFY is not set
+# CONFIG_DMABUF_DEBUG is not set
+# CONFIG_DMABUF_SELFTESTS is not set
+# CONFIG_DMABUF_HEAPS is not set
+# CONFIG_DMABUF_SYSFS_STATS is not set
+# end of DMABUF options
+
+# CONFIG_UIO is not set
+# CONFIG_VFIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+# CONFIG_VIRTIO_MENU is not set
+# CONFIG_VHOST_MENU is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+# end of Microsoft Hyper-V guest support
+
+# CONFIG_GREYBUS is not set
+# CONFIG_COMEDI is not set
+# CONFIG_STAGING is not set
+# CONFIG_GOLDFISH is not set
+# CONFIG_CHROME_PLATFORMS is not set
+# CONFIG_MELLANOX_PLATFORM is not set
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Clock driver for ARM Reference designs
+#
+CONFIG_CLK_ICST=y
+# CONFIG_CLK_SP810 is not set
+CONFIG_CLK_VEXPRESS_OSC=y
+# end of Clock driver for ARM Reference designs
+
+# CONFIG_COMMON_CLK_AXI_CLKGEN is not set
+# CONFIG_COMMON_CLK_FIXED_MMIO is not set
+# CONFIG_XILINX_VCU is not set
+# CONFIG_COMMON_CLK_XLNX_CLKWZRD is not set
+# CONFIG_HWSPINLOCK is not set
+
+#
+# Clock Source drivers
+#
+CONFIG_TIMER_OF=y
+CONFIG_TIMER_PROBE=y
+CONFIG_CLKSRC_MMIO=y
+CONFIG_ARM_ARCH_TIMER=y
+CONFIG_ARM_ARCH_TIMER_EVTSTREAM=y
+CONFIG_ARM_GLOBAL_TIMER=y
+CONFIG_ARM_GT_INITIAL_PRESCALER_VAL=1
+CONFIG_ARM_TIMER_SP804=y
+CONFIG_CLKSRC_ARM_GLOBAL_TIMER_SCHED_CLOCK=y
+CONFIG_CLKSRC_VERSATILE=y
+# CONFIG_MICROCHIP_PIT64B is not set
+# end of Clock Source drivers
+
+# CONFIG_MAILBOX is not set
+# CONFIG_IOMMU_SUPPORT is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_REMOTEPROC is not set
+# end of Remoteproc drivers
+
+#
+# Rpmsg drivers
+#
+# CONFIG_RPMSG_VIRTIO is not set
+# end of Rpmsg drivers
+
+# CONFIG_SOUNDWIRE is not set
+
+#
+# SOC (System On Chip) specific Drivers
+#
+
+#
+# Amlogic SoC drivers
+#
+# end of Amlogic SoC drivers
+
+#
+# Broadcom SoC drivers
+#
+# end of Broadcom SoC drivers
+
+#
+# NXP/Freescale QorIQ SoC drivers
+#
+# CONFIG_QUICC_ENGINE is not set
+# end of NXP/Freescale QorIQ SoC drivers
+
+#
+# fujitsu SoC drivers
+#
+# end of fujitsu SoC drivers
+
+#
+# i.MX SoC drivers
+#
+# end of i.MX SoC drivers
+
+#
+# Enable LiteX SoC Builder specific drivers
+#
+# CONFIG_LITEX_SOC_CONTROLLER is not set
+# end of Enable LiteX SoC Builder specific drivers
+
+# CONFIG_WPCM450_SOC is not set
+
+#
+# Qualcomm SoC drivers
+#
+# end of Qualcomm SoC drivers
+
+# CONFIG_SOC_TI is not set
+
+#
+# Xilinx SoC drivers
+#
+# end of Xilinx SoC drivers
+# end of SOC (System On Chip) specific Drivers
+
+#
+# PM Domains
+#
+
+#
+# Amlogic PM Domains
+#
+# end of Amlogic PM Domains
+
+#
+# Broadcom PM Domains
+#
+# end of Broadcom PM Domains
+
+#
+# i.MX PM Domains
+#
+# end of i.MX PM Domains
+
+#
+# Qualcomm PM Domains
+#
+# end of Qualcomm PM Domains
+# end of PM Domains
+
+# CONFIG_PM_DEVFREQ is not set
+# CONFIG_EXTCON is not set
+# CONFIG_MEMORY is not set
+# CONFIG_IIO is not set
+# CONFIG_PWM is not set
+
+#
+# IRQ chip support
+#
+CONFIG_IRQCHIP=y
+CONFIG_ARM_GIC=y
+CONFIG_ARM_GIC_MAX_NR=1
+# CONFIG_AL_FIC is not set
+# CONFIG_XILINX_INTC is not set
+# end of IRQ chip support
+
+# CONFIG_IPACK_BUS is not set
+# CONFIG_RESET_CONTROLLER is not set
+
+#
+# PHY Subsystem
+#
+# CONFIG_GENERIC_PHY is not set
+# CONFIG_PHY_CAN_TRANSCEIVER is not set
+
+#
+# PHY drivers for Broadcom platforms
+#
+# CONFIG_BCM_KONA_USB2_PHY is not set
+# end of PHY drivers for Broadcom platforms
+
+# CONFIG_PHY_CADENCE_TORRENT is not set
+# CONFIG_PHY_CADENCE_DPHY is not set
+# CONFIG_PHY_CADENCE_DPHY_RX is not set
+# CONFIG_PHY_CADENCE_SALVO is not set
+# CONFIG_PHY_PXA_28NM_HSIC is not set
+# CONFIG_PHY_PXA_28NM_USB2 is not set
+# CONFIG_PHY_LAN966X_SERDES is not set
+# CONFIG_PHY_OCELOT_SERDES is not set
+# end of PHY Subsystem
+
+# CONFIG_POWERCAP is not set
+# CONFIG_MCB is not set
+# CONFIG_RAS is not set
+
+#
+# Android
+#
+# CONFIG_ANDROID_BINDER_IPC is not set
+# end of Android
+
+# CONFIG_DAX is not set
+# CONFIG_NVMEM is not set
+
+#
+# HW tracing support
+#
+# CONFIG_STM is not set
+# CONFIG_INTEL_TH is not set
+# end of HW tracing support
+
+# CONFIG_FPGA is not set
+# CONFIG_FSI is not set
+CONFIG_TEE=y
+# CONFIG_OPTEE is not set
+CONFIG_MBEDTEE=y
+# CONFIG_SIOX is not set
+# CONFIG_SLIMBUS is not set
+# CONFIG_INTERCONNECT is not set
+# CONFIG_COUNTER is not set
+# CONFIG_PECI is not set
+# CONFIG_HTE is not set
+# end of Device Drivers
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+CONFIG_VALIDATE_FS_PARSER=y
+CONFIG_EXPORTFS=y
+# CONFIG_EXPORTFS_BLOCK_OPS is not set
+CONFIG_FILE_LOCKING=y
+# CONFIG_FS_ENCRYPTION is not set
+# CONFIG_FS_VERITY is not set
+CONFIG_FSNOTIFY=y
+# CONFIG_DNOTIFY is not set
+CONFIG_INOTIFY_USER=y
+CONFIG_FANOTIFY=y
+# CONFIG_QUOTA is not set
+# CONFIG_AUTOFS_FS is not set
+# CONFIG_FUSE_FS is not set
+# CONFIG_OVERLAY_FS is not set
+
+#
+# Caches
+#
+# end of Caches
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+# CONFIG_PROC_CHILDREN is not set
+CONFIG_KERNFS=y
+CONFIG_SYSFS=y
+# CONFIG_CONFIGFS_FS is not set
+# end of Pseudo filesystems
+
+# CONFIG_MISC_FILESYSTEMS is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
+# CONFIG_NLS_ISO8859_1 is not set
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+# CONFIG_NLS_UTF8 is not set
+# CONFIG_UNICODE is not set
+# end of File systems
+
+#
+# Security options
+#
+# CONFIG_KEYS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+# CONFIG_SECURITY is not set
+# CONFIG_SECURITYFS is not set
+# CONFIG_HARDENED_USERCOPY is not set
+# CONFIG_FORTIFY_SOURCE is not set
+# CONFIG_STATIC_USERMODEHELPER is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_LSM="yama,loadpin,safesetid,integrity,selinux,smack,tomoyo,apparmor"
+
+#
+# Kernel hardening options
+#
+
+#
+# Memory initialization
+#
+CONFIG_CC_HAS_AUTO_VAR_INIT_PATTERN=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO_BARE=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO=y
+CONFIG_INIT_STACK_NONE=y
+# CONFIG_INIT_STACK_ALL_PATTERN is not set
+# CONFIG_INIT_STACK_ALL_ZERO is not set
+# CONFIG_INIT_ON_ALLOC_DEFAULT_ON is not set
+# CONFIG_INIT_ON_FREE_DEFAULT_ON is not set
+CONFIG_CC_HAS_ZERO_CALL_USED_REGS=y
+# CONFIG_ZERO_CALL_USED_REGS is not set
+# end of Memory initialization
+
+#
+# Hardening of kernel data structures
+#
+# CONFIG_LIST_HARDENED is not set
+# CONFIG_BUG_ON_DATA_CORRUPTION is not set
+# end of Hardening of kernel data structures
+
+CONFIG_RANDSTRUCT_NONE=y
+# end of Kernel hardening options
+# end of Security options
+
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+# CONFIG_CRYPTO_MANAGER is not set
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+# CONFIG_CRYPTO_CRYPTD is not set
+# CONFIG_CRYPTO_AUTHENC is not set
+# CONFIG_CRYPTO_TEST is not set
+# end of Crypto core or helper
+
+#
+# Public-key cryptography
+#
+# CONFIG_CRYPTO_RSA is not set
+# CONFIG_CRYPTO_DH is not set
+# CONFIG_CRYPTO_ECDH is not set
+# CONFIG_CRYPTO_ECDSA is not set
+# CONFIG_CRYPTO_ECRDSA is not set
+# CONFIG_CRYPTO_SM2 is not set
+# CONFIG_CRYPTO_CURVE25519 is not set
+# end of Public-key cryptography
+
+#
+# Block ciphers
+#
+# CONFIG_CRYPTO_AES is not set
+# CONFIG_CRYPTO_AES_TI is not set
+# CONFIG_CRYPTO_ARIA is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+# CONFIG_CRYPTO_DES is not set
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_SM4_GENERIC is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+# end of Block ciphers
+
+#
+# Length-preserving ciphers and modes
+#
+# CONFIG_CRYPTO_ADIANTUM is not set
+# CONFIG_CRYPTO_CHACHA20 is not set
+# CONFIG_CRYPTO_CBC is not set
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+# CONFIG_CRYPTO_ECB is not set
+# CONFIG_CRYPTO_HCTR2 is not set
+# CONFIG_CRYPTO_KEYWRAP is not set
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+# end of Length-preserving ciphers and modes
+
+#
+# AEAD (authenticated encryption with associated data) ciphers
+#
+# CONFIG_CRYPTO_AEGIS128 is not set
+# CONFIG_CRYPTO_CHACHA20POLY1305 is not set
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+# CONFIG_CRYPTO_ECHAINIV is not set
+# CONFIG_CRYPTO_ESSIV is not set
+# end of AEAD (authenticated encryption with associated data) ciphers
+
+#
+# Hashes, digests, and MACs
+#
+# CONFIG_CRYPTO_BLAKE2B is not set
+# CONFIG_CRYPTO_CMAC is not set
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_HMAC is not set
+# CONFIG_CRYPTO_MD4 is not set
+# CONFIG_CRYPTO_MD5 is not set
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_POLY1305 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+CONFIG_CRYPTO_SHA1=y
+# CONFIG_CRYPTO_SHA256 is not set
+# CONFIG_CRYPTO_SHA512 is not set
+# CONFIG_CRYPTO_SHA3 is not set
+# CONFIG_CRYPTO_SM3_GENERIC is not set
+# CONFIG_CRYPTO_STREEBOG is not set
+# CONFIG_CRYPTO_VMAC is not set
+# CONFIG_CRYPTO_WP512 is not set
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_XXHASH is not set
+# end of Hashes, digests, and MACs
+
+#
+# CRCs (cyclic redundancy checks)
+#
+# CONFIG_CRYPTO_CRC32C is not set
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_CRCT10DIF is not set
+# end of CRCs (cyclic redundancy checks)
+
+#
+# Compression
+#
+# CONFIG_CRYPTO_DEFLATE is not set
+# CONFIG_CRYPTO_LZO is not set
+# CONFIG_CRYPTO_842 is not set
+# CONFIG_CRYPTO_LZ4 is not set
+# CONFIG_CRYPTO_LZ4HC is not set
+# CONFIG_CRYPTO_ZSTD is not set
+# end of Compression
+
+#
+# Random number generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+# CONFIG_CRYPTO_DRBG_MENU is not set
+# CONFIG_CRYPTO_JITTERENTROPY is not set
+# end of Random number generation
+
+#
+# Userspace interface
+#
+# end of Userspace interface
+
+#
+# Accelerated Cryptographic Algorithms for CPU (arm)
+#
+# CONFIG_CRYPTO_CURVE25519_NEON is not set
+# CONFIG_CRYPTO_GHASH_ARM_CE is not set
+# CONFIG_CRYPTO_NHPOLY1305_NEON is not set
+# CONFIG_CRYPTO_POLY1305_ARM is not set
+# CONFIG_CRYPTO_BLAKE2S_ARM is not set
+# CONFIG_CRYPTO_BLAKE2B_NEON is not set
+# CONFIG_CRYPTO_SHA1_ARM is not set
+# CONFIG_CRYPTO_SHA1_ARM_NEON is not set
+# CONFIG_CRYPTO_SHA1_ARM_CE is not set
+# CONFIG_CRYPTO_SHA2_ARM_CE is not set
+# CONFIG_CRYPTO_SHA256_ARM is not set
+# CONFIG_CRYPTO_SHA512_ARM is not set
+# CONFIG_CRYPTO_AES_ARM is not set
+# CONFIG_CRYPTO_AES_ARM_BS is not set
+# CONFIG_CRYPTO_AES_ARM_CE is not set
+# CONFIG_CRYPTO_CHACHA20_NEON is not set
+# CONFIG_CRYPTO_CRC32_ARM_CE is not set
+# end of Accelerated Cryptographic Algorithms for CPU (arm)
+
+CONFIG_CRYPTO_HW=y
+# CONFIG_CRYPTO_DEV_SAFEXCEL is not set
+# CONFIG_CRYPTO_DEV_CCREE is not set
+# CONFIG_CRYPTO_DEV_AMLOGIC_GXL is not set
+
+#
+# Certificates for signature checking
+#
+# end of Certificates for signature checking
+
+#
+# Library routines
+#
+# CONFIG_PACKING is not set
+CONFIG_BITREVERSE=y
+CONFIG_HAVE_ARCH_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+# CONFIG_CORDIC is not set
+# CONFIG_PRIME_NUMBERS is not set
+CONFIG_RATIONAL=y
+CONFIG_ARCH_USE_CMPXCHG_LOCKREF=y
+
+#
+# Crypto library routines
+#
+CONFIG_CRYPTO_LIB_UTILS=y
+CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
+# CONFIG_CRYPTO_LIB_CHACHA is not set
+# CONFIG_CRYPTO_LIB_CURVE25519 is not set
+CONFIG_CRYPTO_LIB_POLY1305_RSIZE=9
+# CONFIG_CRYPTO_LIB_POLY1305 is not set
+# CONFIG_CRYPTO_LIB_CHACHA20POLY1305 is not set
+CONFIG_CRYPTO_LIB_SHA1=y
+# end of Crypto library routines
+
+# CONFIG_CRC_CCITT is not set
+# CONFIG_CRC16 is not set
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC64_ROCKSOFT is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC64 is not set
+# CONFIG_CRC4 is not set
+# CONFIG_CRC7 is not set
+# CONFIG_LIBCRC32C is not set
+# CONFIG_CRC8 is not set
+# CONFIG_RANDOM32_SELFTEST is not set
+CONFIG_ZLIB_INFLATE=y
+# CONFIG_XZ_DEC is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_DMA_OPS=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_DMA_DECLARE_COHERENT=y
+CONFIG_ARCH_HAS_SETUP_DMA_OPS=y
+CONFIG_ARCH_HAS_TEARDOWN_DMA_OPS=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_DEVICE=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_CPU=y
+CONFIG_DMA_NONCOHERENT_MMAP=y
+CONFIG_ARCH_HAS_DMA_ALLOC=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_DMA_MAP_BENCHMARK is not set
+# CONFIG_FORCE_NR_CPUS is not set
+CONFIG_GLOB=y
+# CONFIG_GLOB_SELFTEST is not set
+# CONFIG_IRQ_POLL is not set
+CONFIG_LIBFDT=y
+CONFIG_ARCH_STACKWALK=y
+CONFIG_STACKDEPOT=y
+CONFIG_STACKDEPOT_MAX_FRAMES=64
+# CONFIG_LWQ_TEST is not set
+# end of Library routines
+
+CONFIG_GENERIC_LIB_DEVMEM_IS_ALLOWED=y
+
+#
+# Kernel hacking
+#
+
+#
+# printk and dmesg options
+#
+CONFIG_PRINTK_TIME=y
+# CONFIG_PRINTK_CALLER is not set
+# CONFIG_STACKTRACE_BUILD_ID is not set
+CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7
+CONFIG_CONSOLE_LOGLEVEL_QUIET=4
+CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_DYNAMIC_DEBUG_CORE is not set
+# CONFIG_SYMBOLIC_ERRNAME is not set
+# end of printk and dmesg options
+
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_MISC is not set
+
+#
+# Compile-time checks and compiler options
+#
+CONFIG_AS_HAS_NON_CONST_ULEB128=y
+CONFIG_DEBUG_INFO_NONE=y
+# CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set
+# CONFIG_DEBUG_INFO_DWARF4 is not set
+# CONFIG_DEBUG_INFO_DWARF5 is not set
+CONFIG_FRAME_WARN=1024
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_HEADERS_INSTALL is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_SECTION_MISMATCH_WARN_ONLY=y
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+CONFIG_FRAME_POINTER=y
+# CONFIG_VMLINUX_MAP is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# end of Compile-time checks and compiler options
+
+#
+# Generic Kernel Debugging Instruments
+#
+# CONFIG_MAGIC_SYSRQ is not set
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_FS_ALLOW_ALL=y
+# CONFIG_DEBUG_FS_DISALLOW_MOUNT is not set
+# CONFIG_DEBUG_FS_ALLOW_NONE is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+CONFIG_ARCH_HAS_UBSAN=y
+# CONFIG_UBSAN is not set
+CONFIG_HAVE_KCSAN_COMPILER=y
+# end of Generic Kernel Debugging Instruments
+
+#
+# Networking Debugging
+#
+# end of Networking Debugging
+
+#
+# Memory Debugging
+#
+# CONFIG_PAGE_EXTENSION is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+CONFIG_SLUB_DEBUG=y
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_PAGE_OWNER is not set
+# CONFIG_PAGE_POISONING is not set
+# CONFIG_DEBUG_RODATA_TEST is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_PER_VMA_LOCK_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SHRINKER_DEBUG is not set
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_SCHED_STACK_END_CHECK is not set
+# CONFIG_DEBUG_VM is not set
+CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y
+# CONFIG_DEBUG_VIRTUAL is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+# CONFIG_DEBUG_KMAP_LOCAL is not set
+# CONFIG_DEBUG_HIGHMEM is not set
+CONFIG_HAVE_ARCH_KASAN=y
+CONFIG_HAVE_ARCH_KASAN_VMALLOC=y
+CONFIG_CC_HAS_KASAN_GENERIC=y
+CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y
+# CONFIG_KASAN is not set
+CONFIG_HAVE_ARCH_KFENCE=y
+# CONFIG_KFENCE is not set
+# end of Memory Debugging
+
+# CONFIG_DEBUG_SHIRQ is not set
+
+#
+# Debug Oops, Lockups and Hangs
+#
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+CONFIG_PANIC_TIMEOUT=0
+# CONFIG_SOFTLOCKUP_DETECTOR is not set
+CONFIG_HAVE_HARDLOCKUP_DETECTOR_BUDDY=y
+# CONFIG_HARDLOCKUP_DETECTOR is not set
+# CONFIG_DETECT_HUNG_TASK is not set
+# CONFIG_WQ_WATCHDOG is not set
+# CONFIG_WQ_CPU_INTENSIVE_REPORT is not set
+# end of Debug Oops, Lockups and Hangs
+
+#
+# Scheduler Debugging
+#
+# CONFIG_SCHED_DEBUG is not set
+# CONFIG_SCHEDSTATS is not set
+# end of Scheduler Debugging
+
+# CONFIG_DEBUG_TIMEKEEPING is not set
+CONFIG_DEBUG_PREEMPT=y
+
+#
+# Lock Debugging (spinlocks, mutexes, etc...)
+#
+CONFIG_LOCK_DEBUGGING_SUPPORT=y
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_WW_MUTEX_SLOWPATH is not set
+# CONFIG_DEBUG_RWSEMS is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+# CONFIG_LOCK_TORTURE_TEST is not set
+# CONFIG_WW_MUTEX_SELFTEST is not set
+# CONFIG_SCF_TORTURE_TEST is not set
+# end of Lock Debugging (spinlocks, mutexes, etc...)
+
+# CONFIG_DEBUG_IRQFLAGS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_WARN_ALL_UNSEEDED_RANDOM is not set
+# CONFIG_DEBUG_KOBJECT is not set
+
+#
+# Debug kernel data structures
+#
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_DEBUG_PLIST is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_MAPLE_TREE is not set
+# end of Debug kernel data structures
+
+#
+# RCU Debugging
+#
+# CONFIG_RCU_SCALE_TEST is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+# CONFIG_RCU_REF_SCALE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=21
+CONFIG_RCU_EXP_CPU_STALL_TIMEOUT=0
+# CONFIG_RCU_CPU_STALL_CPUTIME is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_RCU_EQS_DEBUG is not set
+# end of RCU Debugging
+
+# CONFIG_DEBUG_WQ_FORCE_RR_CPU is not set
+# CONFIG_CPU_HOTPLUG_STATE_CONTROL is not set
+# CONFIG_LATENCYTOP is not set
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_HAVE_BUILDTIME_MCOUNT_SORT=y
+CONFIG_TRACING_SUPPORT=y
+# CONFIG_FTRACE is not set
+# CONFIG_SAMPLES is not set
+# CONFIG_STRICT_DEVMEM is not set
+
+#
+# arm Debugging
+#
+# CONFIG_ARM_PTDUMP_DEBUGFS is not set
+# CONFIG_ARM_DEBUG_WX is not set
+CONFIG_UNWINDER_FRAME_POINTER=y
+# CONFIG_UNWINDER_ARM is not set
+# CONFIG_BACKTRACE_VERBOSE is not set
+# CONFIG_DEBUG_USER is not set
+# CONFIG_DEBUG_LL is not set
+CONFIG_DEBUG_LL_INCLUDE="mach/debug-macro.S"
+CONFIG_UNCOMPRESS_INCLUDE="debug/uncompress.h"
+# CONFIG_PID_IN_CONTEXTIDR is not set
+# CONFIG_CORESIGHT is not set
+# end of arm Debugging
+
+#
+# Kernel Testing and Coverage
+#
+# CONFIG_KUNIT is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+CONFIG_ARCH_HAS_KCOV=y
+CONFIG_CC_HAS_SANCOV_TRACE_PC=y
+# CONFIG_KCOV is not set
+# CONFIG_RUNTIME_TESTING_MENU is not set
+CONFIG_ARCH_USE_MEMTEST=y
+# CONFIG_MEMTEST is not set
+# end of Kernel Testing and Coverage
+
+#
+# Rust hacking
+#
+# end of Rust hacking
+# end of Kernel hacking
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/armv8a_linux_config buildroot/tee/linux/armv8a_linux_config
--- buildroot-ori/tee/linux/armv8a_linux_config	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/armv8a_linux_config	2025-05-31 23:12:46.402385055 +0800
@@ -0,0 +1,1954 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/arm64 6.9.10 Kernel Configuration
+#
+CONFIG_CC_VERSION_TEXT="aarch64-none-linux-gnu-gcc (Arm GNU Toolchain 13.2.rel1 (Build arm-13.7)) 13.2.1 20231009"
+CONFIG_CC_IS_GCC=y
+CONFIG_GCC_VERSION=130201
+CONFIG_CLANG_VERSION=0
+CONFIG_AS_IS_GNU=y
+CONFIG_AS_VERSION=24100
+CONFIG_LD_IS_BFD=y
+CONFIG_LD_VERSION=24100
+CONFIG_LLD_VERSION=0
+CONFIG_CC_CAN_LINK=y
+CONFIG_CC_CAN_LINK_STATIC=y
+CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
+CONFIG_CC_HAS_ASM_GOTO_TIED_OUTPUT=y
+CONFIG_GCC_ASM_GOTO_OUTPUT_WORKAROUND=y
+CONFIG_CC_HAS_ASM_INLINE=y
+CONFIG_CC_HAS_NO_PROFILE_FN_ATTR=y
+CONFIG_PAHOLE_VERSION=0
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_TABLE_SORT=y
+CONFIG_THREAD_INFO_IN_TASK=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+# CONFIG_COMPILE_TEST is not set
+# CONFIG_WERROR is not set
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_BUILD_SALT=""
+CONFIG_DEFAULT_INIT=""
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_WATCH_QUEUE is not set
+# CONFIG_CROSS_MEMORY_ATTACH is not set
+# CONFIG_USELIB is not set
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_IRQ_SHOW_LEVEL=y
+CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK=y
+CONFIG_GENERIC_IRQ_MIGRATION=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+CONFIG_IRQ_DOMAIN_HIERARCHY=y
+CONFIG_GENERIC_IRQ_IPI=y
+CONFIG_GENERIC_MSI_IRQ=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+# CONFIG_GENERIC_IRQ_DEBUGFS is not set
+# end of IRQ subsystem
+
+CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_HAVE_POSIX_CPU_TIMERS_TASK_WORK=y
+CONFIG_POSIX_CPU_TIMERS_TASK_WORK=y
+CONFIG_CONTEXT_TRACKING=y
+CONFIG_CONTEXT_TRACKING_IDLE=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+CONFIG_NO_HZ_IDLE=y
+# CONFIG_NO_HZ_FULL is not set
+# CONFIG_NO_HZ is not set
+CONFIG_HIGH_RES_TIMERS=y
+# end of Timers subsystem
+
+CONFIG_HAVE_EBPF_JIT=y
+CONFIG_ARCH_WANT_DEFAULT_BPF_JIT=y
+
+#
+# BPF subsystem
+#
+# CONFIG_BPF_SYSCALL is not set
+# end of BPF subsystem
+
+CONFIG_PREEMPT_BUILD=y
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_PREEMPT_COUNT=y
+CONFIG_PREEMPTION=y
+# CONFIG_PREEMPT_DYNAMIC is not set
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_TICK_CPU_ACCOUNTING=y
+# CONFIG_VIRT_CPU_ACCOUNTING_GEN is not set
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_PSI is not set
+# end of CPU/Task time and stats accounting
+
+CONFIG_CPU_ISOLATION=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+CONFIG_PREEMPT_RCU=y
+# CONFIG_RCU_EXPERT is not set
+CONFIG_TREE_SRCU=y
+CONFIG_RCU_STALL_COMMON=y
+CONFIG_RCU_NEED_SEGCBLIST=y
+# end of RCU Subsystem
+
+CONFIG_IKCONFIG=y
+# CONFIG_IKCONFIG_PROC is not set
+# CONFIG_IKHEADERS is not set
+CONFIG_LOG_BUF_SHIFT=16
+CONFIG_LOG_CPU_MAX_BUF_SHIFT=12
+# CONFIG_PRINTK_INDEX is not set
+CONFIG_GENERIC_SCHED_CLOCK=y
+
+#
+# Scheduler features
+#
+# end of Scheduler features
+
+CONFIG_ARCH_SUPPORTS_NUMA_BALANCING=y
+CONFIG_ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH=y
+CONFIG_CC_HAS_INT128=y
+CONFIG_CC_IMPLICIT_FALLTHROUGH="-Wimplicit-fallthrough=5"
+CONFIG_GCC10_NO_ARRAY_BOUNDS=y
+CONFIG_CC_NO_ARRAY_BOUNDS=y
+CONFIG_GCC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CC_NO_STRINGOP_OVERFLOW=y
+CONFIG_ARCH_SUPPORTS_INT128=y
+CONFIG_CGROUPS=y
+# CONFIG_CGROUP_FAVOR_DYNMODS is not set
+# CONFIG_MEMCG is not set
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+CONFIG_CFS_BANDWIDTH=y
+CONFIG_RT_GROUP_SCHED=y
+# CONFIG_CGROUP_PIDS is not set
+# CONFIG_CGROUP_RDMA is not set
+# CONFIG_CGROUP_FREEZER is not set
+# CONFIG_CPUSETS is not set
+# CONFIG_CGROUP_DEVICE is not set
+# CONFIG_CGROUP_CPUACCT is not set
+# CONFIG_CGROUP_MISC is not set
+# CONFIG_CGROUP_DEBUG is not set
+# CONFIG_NAMESPACES is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+# CONFIG_SCHED_AUTOGROUP is not set
+# CONFIG_RELAY is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE="${BR_BINARIES_DIR}/rootfs.cpio"
+CONFIG_INITRAMFS_FORCE=y
+CONFIG_INITRAMFS_ROOT_UID=0
+CONFIG_INITRAMFS_ROOT_GID=0
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+# CONFIG_RD_LZ4 is not set
+# CONFIG_RD_ZSTD is not set
+CONFIG_INITRAMFS_COMPRESSION_GZIP=y
+# CONFIG_INITRAMFS_COMPRESSION_NONE is not set
+# CONFIG_BOOT_CONFIG is not set
+CONFIG_INITRAMFS_PRESERVE_MTIME=y
+CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_LD_ORPHAN_WARN=y
+CONFIG_LD_ORPHAN_WARN_LEVEL="warn"
+CONFIG_SYSCTL=y
+CONFIG_SYSCTL_EXCEPTION_TRACE=y
+CONFIG_EXPERT=y
+CONFIG_MULTIUSER=y
+# CONFIG_SGETMASK_SYSCALL is not set
+CONFIG_SYSFS_SYSCALL=y
+# CONFIG_FHANDLE is not set
+CONFIG_POSIX_TIMERS=y
+CONFIG_PRINTK=y
+# CONFIG_BUG is not set
+CONFIG_ELF_CORE=y
+# CONFIG_BASE_FULL is not set
+CONFIG_FUTEX=y
+CONFIG_FUTEX_PI=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+# CONFIG_SHMEM is not set
+# CONFIG_AIO is not set
+# CONFIG_IO_URING is not set
+# CONFIG_ADVISE_SYSCALLS is not set
+CONFIG_MEMBARRIER=y
+# CONFIG_KCMP is not set
+# CONFIG_RSEQ is not set
+CONFIG_CACHESTAT_SYSCALL=y
+# CONFIG_PC104 is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_SELFTEST is not set
+CONFIG_KALLSYMS_ALL=y
+CONFIG_KALLSYMS_BASE_RELATIVE=y
+CONFIG_ARCH_HAS_MEMBARRIER_SYNC_CORE=y
+CONFIG_HAVE_PERF_EVENTS=y
+
+#
+# Kernel Performance Events And Counters
+#
+# CONFIG_PERF_EVENTS is not set
+# end of Kernel Performance Events And Counters
+
+# CONFIG_PROFILING is not set
+
+#
+# Kexec and crash features
+#
+# CONFIG_KEXEC_FILE is not set
+# end of Kexec and crash features
+# end of General setup
+
+CONFIG_ARM64=y
+CONFIG_GCC_SUPPORTS_DYNAMIC_FTRACE_WITH_ARGS=y
+CONFIG_64BIT=y
+CONFIG_MMU=y
+CONFIG_ARM64_CONT_PTE_SHIFT=4
+CONFIG_ARM64_CONT_PMD_SHIFT=4
+CONFIG_ARCH_MMAP_RND_BITS_MIN=18
+CONFIG_ARCH_MMAP_RND_BITS_MAX=24
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MIN=11
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MAX=16
+CONFIG_NO_IOPORT_MAP=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_ILLEGAL_POINTER_VALUE=0xdead000000000000
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CSUM=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_SMP=y
+CONFIG_KERNEL_MODE_NEON=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_PGTABLE_LEVELS=3
+CONFIG_ARCH_SUPPORTS_UPROBES=y
+CONFIG_ARCH_PROC_KCORE_TEXT=y
+CONFIG_BUILTIN_RETURN_ADDRESS_STRIPS_PAC=y
+
+#
+# Platform selection
+#
+# CONFIG_ARCH_ACTIONS is not set
+# CONFIG_ARCH_SUNXI is not set
+# CONFIG_ARCH_ALPINE is not set
+# CONFIG_ARCH_APPLE is not set
+# CONFIG_ARCH_BCM is not set
+# CONFIG_ARCH_BERLIN is not set
+# CONFIG_ARCH_BITMAIN is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_SPARX5 is not set
+# CONFIG_ARCH_K3 is not set
+# CONFIG_ARCH_LG1K is not set
+# CONFIG_ARCH_HISI is not set
+# CONFIG_ARCH_KEEMBAY is not set
+# CONFIG_ARCH_MEDIATEK is not set
+# CONFIG_ARCH_MESON is not set
+# CONFIG_ARCH_MVEBU is not set
+# CONFIG_ARCH_NXP is not set
+# CONFIG_ARCH_MA35 is not set
+# CONFIG_ARCH_NPCM is not set
+# CONFIG_ARCH_PENSANDO is not set
+# CONFIG_ARCH_QCOM is not set
+# CONFIG_ARCH_REALTEK is not set
+# CONFIG_ARCH_RENESAS is not set
+# CONFIG_ARCH_ROCKCHIP is not set
+# CONFIG_ARCH_SEATTLE is not set
+# CONFIG_ARCH_INTEL_SOCFPGA is not set
+# CONFIG_ARCH_STM32 is not set
+# CONFIG_ARCH_SYNQUACER is not set
+# CONFIG_ARCH_TEGRA is not set
+# CONFIG_ARCH_SPRD is not set
+# CONFIG_ARCH_THUNDER is not set
+# CONFIG_ARCH_THUNDER2 is not set
+# CONFIG_ARCH_UNIPHIER is not set
+# CONFIG_ARCH_VEXPRESS is not set
+# CONFIG_ARCH_VISCONTI is not set
+# CONFIG_ARCH_XGENE is not set
+# CONFIG_ARCH_ZYNQMP is not set
+# end of Platform selection
+
+#
+# Kernel Features
+#
+
+#
+# ARM errata workarounds via the alternatives framework
+#
+CONFIG_AMPERE_ERRATUM_AC03_CPU_38=y
+CONFIG_ARM64_WORKAROUND_CLEAN_CACHE=y
+CONFIG_ARM64_ERRATUM_826319=y
+CONFIG_ARM64_ERRATUM_827319=y
+CONFIG_ARM64_ERRATUM_824069=y
+CONFIG_ARM64_ERRATUM_819472=y
+CONFIG_ARM64_ERRATUM_832075=y
+CONFIG_ARM64_ERRATUM_843419=y
+CONFIG_ARM64_LD_HAS_FIX_ERRATUM_843419=y
+CONFIG_ARM64_ERRATUM_1024718=y
+CONFIG_ARM64_WORKAROUND_SPECULATIVE_AT=y
+CONFIG_ARM64_ERRATUM_1165522=y
+CONFIG_ARM64_ERRATUM_1319367=y
+CONFIG_ARM64_ERRATUM_1530923=y
+CONFIG_ARM64_WORKAROUND_REPEAT_TLBI=y
+# CONFIG_ARM64_ERRATUM_2441007 is not set
+CONFIG_ARM64_ERRATUM_1286807=y
+CONFIG_ARM64_ERRATUM_1463225=y
+CONFIG_ARM64_ERRATUM_1542419=y
+CONFIG_ARM64_ERRATUM_1508412=y
+CONFIG_ARM64_ERRATUM_2051678=y
+CONFIG_ARM64_ERRATUM_2077057=y
+CONFIG_ARM64_ERRATUM_2658417=y
+CONFIG_ARM64_WORKAROUND_TSB_FLUSH_FAILURE=y
+CONFIG_ARM64_ERRATUM_2054223=y
+CONFIG_ARM64_ERRATUM_2067961=y
+# CONFIG_ARM64_ERRATUM_2441009 is not set
+CONFIG_ARM64_ERRATUM_2457168=y
+CONFIG_ARM64_ERRATUM_2645198=y
+CONFIG_ARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD=y
+CONFIG_ARM64_ERRATUM_2966298=y
+CONFIG_ARM64_ERRATUM_3117295=y
+CONFIG_CAVIUM_ERRATUM_22375=y
+CONFIG_CAVIUM_ERRATUM_23154=y
+CONFIG_CAVIUM_ERRATUM_27456=y
+CONFIG_CAVIUM_ERRATUM_30115=y
+CONFIG_CAVIUM_TX2_ERRATUM_219=y
+CONFIG_FUJITSU_ERRATUM_010001=y
+CONFIG_HISILICON_ERRATUM_161600802=y
+CONFIG_QCOM_FALKOR_ERRATUM_1003=y
+CONFIG_QCOM_FALKOR_ERRATUM_1009=y
+CONFIG_QCOM_QDF2400_ERRATUM_0065=y
+CONFIG_QCOM_FALKOR_ERRATUM_E1041=y
+CONFIG_NVIDIA_CARMEL_CNP_ERRATUM=y
+CONFIG_ROCKCHIP_ERRATUM_3588001=y
+CONFIG_SOCIONEXT_SYNQUACER_PREITS=y
+# end of ARM errata workarounds via the alternatives framework
+
+CONFIG_ARM64_4K_PAGES=y
+# CONFIG_ARM64_16K_PAGES is not set
+# CONFIG_ARM64_64K_PAGES is not set
+CONFIG_ARM64_VA_BITS_39=y
+# CONFIG_ARM64_VA_BITS_48 is not set
+# CONFIG_ARM64_VA_BITS_52 is not set
+CONFIG_ARM64_VA_BITS=39
+CONFIG_ARM64_PA_BITS_48=y
+CONFIG_ARM64_PA_BITS=48
+# CONFIG_CPU_BIG_ENDIAN is not set
+CONFIG_CPU_LITTLE_ENDIAN=y
+CONFIG_SCHED_MC=y
+# CONFIG_SCHED_CLUSTER is not set
+# CONFIG_SCHED_SMT is not set
+CONFIG_NR_CPUS=16
+CONFIG_HOTPLUG_CPU=y
+# CONFIG_NUMA is not set
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_SCHED_HRTICK=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_CC_HAVE_SHADOW_CALL_STACK=y
+# CONFIG_PARAVIRT is not set
+# CONFIG_PARAVIRT_TIME_ACCOUNTING is not set
+CONFIG_ARCH_SUPPORTS_KEXEC_FILE=y
+CONFIG_ARCH_SUPPORTS_KEXEC_SIG=y
+CONFIG_ARCH_SUPPORTS_KEXEC_IMAGE_VERIFY_SIG=y
+CONFIG_ARCH_DEFAULT_KEXEC_IMAGE_VERIFY_SIG=y
+CONFIG_ARCH_SUPPORTS_CRASH_DUMP=y
+# CONFIG_XEN is not set
+CONFIG_ARCH_FORCE_MAX_ORDER=10
+CONFIG_UNMAP_KERNEL_AT_EL0=y
+CONFIG_MITIGATE_SPECTRE_BRANCH_HISTORY=y
+CONFIG_RODATA_FULL_DEFAULT_ENABLED=y
+# CONFIG_ARM64_SW_TTBR0_PAN is not set
+CONFIG_ARM64_TAGGED_ADDR_ABI=y
+# CONFIG_COMPAT is not set
+
+#
+# ARMv8.1 architectural features
+#
+CONFIG_ARM64_HW_AFDBM=y
+CONFIG_ARM64_PAN=y
+CONFIG_AS_HAS_LSE_ATOMICS=y
+CONFIG_ARM64_LSE_ATOMICS=y
+CONFIG_ARM64_USE_LSE_ATOMICS=y
+# end of ARMv8.1 architectural features
+
+#
+# ARMv8.2 architectural features
+#
+CONFIG_AS_HAS_ARMV8_2=y
+CONFIG_AS_HAS_SHA3=y
+# CONFIG_ARM64_PMEM is not set
+CONFIG_ARM64_RAS_EXTN=y
+CONFIG_ARM64_CNP=y
+# end of ARMv8.2 architectural features
+
+#
+# ARMv8.3 architectural features
+#
+# CONFIG_ARM64_PTR_AUTH is not set
+CONFIG_CC_HAS_BRANCH_PROT_PAC_RET=y
+CONFIG_CC_HAS_SIGN_RETURN_ADDRESS=y
+CONFIG_AS_HAS_ARMV8_3=y
+CONFIG_AS_HAS_CFI_NEGATE_RA_STATE=y
+CONFIG_AS_HAS_LDAPR=y
+# end of ARMv8.3 architectural features
+
+#
+# ARMv8.4 architectural features
+#
+CONFIG_ARM64_AMU_EXTN=y
+CONFIG_AS_HAS_ARMV8_4=y
+CONFIG_ARM64_TLB_RANGE=y
+# end of ARMv8.4 architectural features
+
+#
+# ARMv8.5 architectural features
+#
+CONFIG_AS_HAS_ARMV8_5=y
+CONFIG_ARM64_BTI=y
+CONFIG_CC_HAS_BRANCH_PROT_PAC_RET_BTI=y
+CONFIG_ARM64_E0PD=y
+CONFIG_ARM64_AS_HAS_MTE=y
+CONFIG_ARM64_MTE=y
+# end of ARMv8.5 architectural features
+
+#
+# ARMv8.7 architectural features
+#
+CONFIG_ARM64_EPAN=y
+# end of ARMv8.7 architectural features
+
+CONFIG_ARM64_SVE=y
+CONFIG_ARM64_SME=y
+# CONFIG_ARM64_PSEUDO_NMI is not set
+CONFIG_RELOCATABLE=y
+# CONFIG_RANDOMIZE_BASE is not set
+CONFIG_CC_HAVE_STACKPROTECTOR_SYSREG=y
+# end of Kernel Features
+
+#
+# Boot options
+#
+CONFIG_CMDLINE="console=ttyAMA0,115200n8 root=/dev/ram0 rootwait earlycon=pl011,mmio32,0x1c090000"
+# CONFIG_CMDLINE_FROM_BOOTLOADER is not set
+CONFIG_CMDLINE_FORCE=y
+# CONFIG_EFI is not set
+# end of Boot options
+
+#
+# Power management options
+#
+# CONFIG_SUSPEND is not set
+# CONFIG_PM is not set
+CONFIG_CPU_PM=y
+# CONFIG_ENERGY_MODEL is not set
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+# end of Power management options
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Idle
+#
+CONFIG_CPU_IDLE=y
+# CONFIG_CPU_IDLE_GOV_LADDER is not set
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_CPU_IDLE_GOV_TEO is not set
+
+#
+# ARM CPU Idle Drivers
+#
+# CONFIG_ARM_PSCI_CPUIDLE is not set
+# end of ARM CPU Idle Drivers
+# end of CPU Idle
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_GOV_ATTR_SET=y
+CONFIG_CPU_FREQ_GOV_COMMON=y
+CONFIG_CPU_FREQ_STAT=y
+CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_GOV_POWERSAVE is not set
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_GOV_SCHEDUTIL is not set
+
+#
+# CPU frequency scaling drivers
+#
+# CONFIG_CPUFREQ_DT is not set
+# CONFIG_CPUFREQ_DT_PLATDEV is not set
+# end of CPU Frequency scaling
+# end of CPU Power Management
+
+# CONFIG_VIRTUALIZATION is not set
+CONFIG_CPU_MITIGATIONS=y
+
+#
+# General architecture-dependent options
+#
+CONFIG_ARCH_HAS_SUBPAGE_FAULTS=y
+CONFIG_HOTPLUG_CORE_SYNC=y
+CONFIG_HOTPLUG_CORE_SYNC_DEAD=y
+CONFIG_JUMP_LABEL=y
+# CONFIG_STATIC_KEYS_SELFTEST is not set
+CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
+CONFIG_HAVE_IOREMAP_PROT=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_ARCH_CORRECT_STACKTRACE_ON_KRETPROBE=y
+CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y
+CONFIG_HAVE_NMI=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_TRACE_IRQFLAGS_NMI_SUPPORT=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_ARCH_HAS_FORTIFY_SOURCE=y
+CONFIG_ARCH_HAS_KEEPINITRD=y
+CONFIG_ARCH_HAS_SET_MEMORY=y
+CONFIG_ARCH_HAS_SET_DIRECT_MAP=y
+CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y
+CONFIG_ARCH_WANTS_NO_INSTR=y
+CONFIG_HAVE_ASM_MODVERSIONS=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_RSEQ=y
+CONFIG_HAVE_RUST=y
+CONFIG_HAVE_FUNCTION_ARG_ACCESS_API=y
+CONFIG_HAVE_PERF_REGS=y
+CONFIG_HAVE_PERF_USER_STACK_DUMP=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_HAVE_ARCH_JUMP_LABEL_RELATIVE=y
+CONFIG_MMU_GATHER_TABLE_FREE=y
+CONFIG_MMU_GATHER_RCU_TABLE_FREE=y
+CONFIG_MMU_LAZY_TLB_REFCOUNT=y
+CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
+CONFIG_ARCH_HAS_NMI_SAFE_THIS_CPU_OPS=y
+CONFIG_HAVE_ALIGNED_STRUCT_PAGE=y
+CONFIG_HAVE_CMPXCHG_LOCAL=y
+CONFIG_HAVE_CMPXCHG_DOUBLE=y
+CONFIG_HAVE_ARCH_SECCOMP=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+# CONFIG_SECCOMP is not set
+CONFIG_HAVE_ARCH_STACKLEAK=y
+CONFIG_HAVE_STACKPROTECTOR=y
+# CONFIG_STACKPROTECTOR is not set
+CONFIG_ARCH_SUPPORTS_SHADOW_CALL_STACK=y
+# CONFIG_SHADOW_CALL_STACK is not set
+CONFIG_ARCH_SUPPORTS_LTO_CLANG=y
+CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN=y
+CONFIG_LTO_NONE=y
+CONFIG_ARCH_SUPPORTS_CFI_CLANG=y
+CONFIG_HAVE_CONTEXT_TRACKING_USER=y
+CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOVE_PUD=y
+CONFIG_HAVE_MOVE_PMD=y
+CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE=y
+CONFIG_HAVE_ARCH_HUGE_VMAP=y
+CONFIG_HAVE_ARCH_HUGE_VMALLOC=y
+CONFIG_ARCH_WANT_HUGE_PMD_SHARE=y
+CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
+CONFIG_MODULES_USE_ELF_RELA=y
+CONFIG_HAVE_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_ARCH_HAS_ELF_RANDOMIZE=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_ARCH_MMAP_RND_BITS=18
+CONFIG_HAVE_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_64KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_256KB=y
+CONFIG_PAGE_SHIFT=12
+CONFIG_ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT=y
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_COMPAT_32BIT_TIME=y
+CONFIG_HAVE_ARCH_VMAP_STACK=y
+CONFIG_VMAP_STACK=y
+CONFIG_HAVE_ARCH_RANDOMIZE_KSTACK_OFFSET=y
+CONFIG_RANDOMIZE_KSTACK_OFFSET=y
+# CONFIG_RANDOMIZE_KSTACK_OFFSET_DEFAULT is not set
+CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y
+CONFIG_STRICT_KERNEL_RWX=y
+CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y
+CONFIG_HAVE_ARCH_COMPILER_H=y
+CONFIG_HAVE_ARCH_PREL32_RELOCATIONS=y
+# CONFIG_LOCK_EVENT_COUNTS is not set
+CONFIG_ARCH_HAS_RELR=y
+CONFIG_HAVE_PREEMPT_DYNAMIC=y
+CONFIG_HAVE_PREEMPT_DYNAMIC_KEY=y
+CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y
+CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
+CONFIG_ARCH_SUPPORTS_PAGE_TABLE_CHECK=y
+CONFIG_ARCH_HAVE_TRACE_MMIO_ACCESS=y
+CONFIG_ARCH_HAS_HW_PTE_YOUNG=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y
+# end of GCOV-based kernel profiling
+
+CONFIG_HAVE_GCC_PLUGINS=y
+# CONFIG_GCC_PLUGINS is not set
+CONFIG_FUNCTION_ALIGNMENT_4B=y
+CONFIG_FUNCTION_ALIGNMENT=4
+# end of General architecture-dependent options
+
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=1
+# CONFIG_MODULES is not set
+# CONFIG_BLOCK is not set
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_LOCK_SPIN_ON_OWNER=y
+CONFIG_ARCH_USE_QUEUED_SPINLOCKS=y
+CONFIG_QUEUED_SPINLOCKS=y
+CONFIG_ARCH_USE_QUEUED_RWLOCKS=y
+CONFIG_QUEUED_RWLOCKS=y
+CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE=y
+CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y
+
+#
+# Executable file formats
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_ARCH_BINFMT_ELF_STATE=y
+CONFIG_ARCH_BINFMT_ELF_EXTRA_PHDRS=y
+CONFIG_ARCH_HAVE_ELF_PROT=y
+CONFIG_ARCH_USE_GNU_PROPERTY=y
+CONFIG_ELFCORE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_BINFMT_SCRIPT=y
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+# end of Executable file formats
+
+#
+# Memory Management options
+#
+
+#
+# Slab allocator options
+#
+CONFIG_SLUB=y
+# CONFIG_SLUB_TINY is not set
+CONFIG_SLAB_MERGE_DEFAULT=y
+# CONFIG_SLAB_FREELIST_RANDOM is not set
+# CONFIG_SLAB_FREELIST_HARDENED is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_SLUB_CPU_PARTIAL=y
+# CONFIG_RANDOM_KMALLOC_CACHES is not set
+# end of Slab allocator options
+
+# CONFIG_SHUFFLE_PAGE_ALLOCATOR is not set
+CONFIG_COMPAT_BRK=y
+CONFIG_SPARSEMEM=y
+CONFIG_SPARSEMEM_EXTREME=y
+CONFIG_SPARSEMEM_VMEMMAP_ENABLE=y
+CONFIG_SPARSEMEM_VMEMMAP=y
+CONFIG_HAVE_FAST_GUP=y
+CONFIG_ARCH_KEEP_MEMBLOCK=y
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
+CONFIG_ARCH_ENABLE_MEMORY_HOTREMOVE=y
+# CONFIG_MEMORY_HOTPLUG is not set
+CONFIG_ARCH_MHP_MEMMAP_ON_MEMORY_ENABLE=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK=y
+CONFIG_COMPACTION=y
+CONFIG_COMPACT_UNEVICTABLE_DEFAULT=1
+# CONFIG_PAGE_REPORTING is not set
+CONFIG_MIGRATION=y
+CONFIG_PCP_BATCH_SCALE_MAX=5
+CONFIG_PHYS_ADDR_T_64BIT=y
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_ARCH_SUPPORTS_MEMORY_FAILURE=y
+# CONFIG_MEMORY_FAILURE is not set
+CONFIG_ARCH_WANTS_THP_SWAP=y
+# CONFIG_TRANSPARENT_HUGEPAGE is not set
+# CONFIG_CMA is not set
+CONFIG_GENERIC_EARLY_IOREMAP=y
+# CONFIG_DEFERRED_STRUCT_PAGE_INIT is not set
+# CONFIG_IDLE_PAGE_TRACKING is not set
+CONFIG_ARCH_HAS_CACHE_LINE_SIZE=y
+CONFIG_ARCH_HAS_CURRENT_STACK_POINTER=y
+CONFIG_ARCH_HAS_PTE_DEVMAP=y
+CONFIG_ARCH_HAS_ZONE_DMA_SET=y
+# CONFIG_ZONE_DMA is not set
+# CONFIG_ZONE_DMA32 is not set
+CONFIG_ARCH_USES_HIGH_VMA_FLAGS=y
+CONFIG_ARCH_USES_PG_ARCH_X=y
+# CONFIG_VM_EVENT_COUNTERS is not set
+# CONFIG_PERCPU_STATS is not set
+# CONFIG_GUP_TEST is not set
+# CONFIG_DMAPOOL_TEST is not set
+CONFIG_ARCH_HAS_PTE_SPECIAL=y
+# CONFIG_MEMFD_CREATE is not set
+CONFIG_SECRETMEM=y
+# CONFIG_USERFAULTFD is not set
+# CONFIG_LRU_GEN is not set
+CONFIG_ARCH_SUPPORTS_PER_VMA_LOCK=y
+CONFIG_PER_VMA_LOCK=y
+CONFIG_LOCK_MM_AND_FIND_VMA=y
+
+#
+# Data Access Monitoring
+#
+# CONFIG_DAMON is not set
+# end of Data Access Monitoring
+# end of Memory Management options
+
+# CONFIG_NET is not set
+
+#
+# Device Drivers
+#
+CONFIG_ARM_AMBA=y
+CONFIG_HAVE_PCI=y
+CONFIG_GENERIC_PCI_IOMAP=y
+# CONFIG_PCI is not set
+# CONFIG_PCCARD is not set
+
+#
+# Generic Driver Options
+#
+# CONFIG_UEVENT_HELPER is not set
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+# CONFIG_DEVTMPFS_SAFE is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+
+#
+# Firmware loader
+#
+# CONFIG_FW_LOADER is not set
+# end of Firmware loader
+
+# CONFIG_ALLOW_DEV_COREDUMP is not set
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_DEBUG_TEST_DRIVER_REMOVE is not set
+CONFIG_GENERIC_CPU_DEVICES=y
+CONFIG_GENERIC_CPU_AUTOPROBE=y
+CONFIG_GENERIC_CPU_VULNERABILITIES=y
+CONFIG_SOC_BUS=y
+CONFIG_REGMAP=y
+CONFIG_REGMAP_MMIO=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_DMA_FENCE_TRACE is not set
+CONFIG_GENERIC_ARCH_TOPOLOGY=y
+# CONFIG_FW_DEVLINK_SYNC_STATE_TIMEOUT is not set
+# end of Generic Driver Options
+
+#
+# Bus devices
+#
+CONFIG_VEXPRESS_CONFIG=y
+# CONFIG_MHI_BUS is not set
+# CONFIG_MHI_BUS_EP is not set
+# end of Bus devices
+
+#
+# Cache Drivers
+#
+# end of Cache Drivers
+
+#
+# Firmware Drivers
+#
+
+#
+# ARM System Control and Management Interface Protocol
+#
+# CONFIG_ARM_SCMI_PROTOCOL is not set
+# end of ARM System Control and Management Interface Protocol
+
+# CONFIG_FIRMWARE_MEMMAP is not set
+# CONFIG_ARM_FFA_TRANSPORT is not set
+# CONFIG_GOOGLE_FIRMWARE is not set
+CONFIG_ARM_PSCI_FW=y
+# CONFIG_ARM_PSCI_CHECKER is not set
+
+#
+# Qualcomm firmware drivers
+#
+# end of Qualcomm firmware drivers
+
+CONFIG_HAVE_ARM_SMCCC=y
+CONFIG_HAVE_ARM_SMCCC_DISCOVERY=y
+CONFIG_ARM_SMCCC_SOC_ID=y
+
+#
+# Tegra firmware driver
+#
+# end of Tegra firmware driver
+# end of Firmware Drivers
+
+# CONFIG_GNSS is not set
+# CONFIG_MTD is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+# CONFIG_OF_UNITTEST is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_KOBJ=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_RESERVED_MEM=y
+# CONFIG_OF_OVERLAY is not set
+# CONFIG_PARPORT is not set
+
+#
+# NVME Support
+#
+# end of NVME Support
+
+#
+# Misc devices
+#
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_SRAM is not set
+# CONFIG_XILINX_SDFEC is not set
+# CONFIG_OPEN_DICE is not set
+# CONFIG_VCPU_STALL_DETECTOR is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_93CX6 is not set
+# end of EEPROM support
+
+#
+# Texas Instruments shared transport line discipline
+#
+# end of Texas Instruments shared transport line discipline
+
+#
+# Altera FPGA firmware download module (requires I2C)
+#
+# CONFIG_ECHO is not set
+# CONFIG_PVPANIC is not set
+# end of Misc devices
+
+#
+# SCSI device support
+#
+# end of SCSI device support
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+# CONFIG_INPUT_MATRIXKMAP is not set
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
+# CONFIG_INPUT_EVDEV is not set
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+# CONFIG_INPUT_KEYBOARD is not set
+# CONFIG_INPUT_MOUSE is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+# CONFIG_INPUT_TOUCHSCREEN is not set
+# CONFIG_INPUT_MISC is not set
+# CONFIG_RMI4_CORE is not set
+
+#
+# Hardware I/O ports
+#
+# CONFIG_SERIO is not set
+# CONFIG_GAMEPORT is not set
+# end of Hardware I/O ports
+# end of Input device support
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+# CONFIG_VT_HW_CONSOLE_BINDING is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_LEGACY_PTYS is not set
+CONFIG_LEGACY_TIOCSTI=y
+# CONFIG_LDISC_AUTOLOAD is not set
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_EARLYCON=y
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_AMBA_PL010 is not set
+CONFIG_SERIAL_AMBA_PL011=y
+CONFIG_SERIAL_AMBA_PL011_CONSOLE=y
+# CONFIG_SERIAL_EARLYCON_SEMIHOST is not set
+# CONFIG_SERIAL_UARTLITE is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_SIFIVE is not set
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_SERIAL_ARC is not set
+# CONFIG_SERIAL_FSL_LPUART is not set
+# CONFIG_SERIAL_FSL_LINFLEXUART is not set
+# CONFIG_SERIAL_CONEXANT_DIGICOLOR is not set
+# CONFIG_SERIAL_SPRD is not set
+# end of Serial drivers
+
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_NULL_TTY is not set
+# CONFIG_HVC_DCC is not set
+# CONFIG_SERIAL_DEV_BUS is not set
+# CONFIG_TTY_PRINTK is not set
+# CONFIG_VIRTIO_CONSOLE is not set
+# CONFIG_IPMI_HANDLER is not set
+CONFIG_HW_RANDOM=y
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+# CONFIG_HW_RANDOM_BA431 is not set
+# CONFIG_HW_RANDOM_CCTRNG is not set
+# CONFIG_HW_RANDOM_XIPHERA is not set
+CONFIG_HW_RANDOM_ARM_SMCCC_TRNG=y
+CONFIG_DEVMEM=y
+CONFIG_DEVPORT=y
+# CONFIG_TCG_TPM is not set
+# CONFIG_XILLYBUS is not set
+# end of Character devices
+
+#
+# I2C support
+#
+# CONFIG_I2C is not set
+# end of I2C support
+
+# CONFIG_I3C is not set
+# CONFIG_SPI is not set
+# CONFIG_SPMI is not set
+# CONFIG_HSI is not set
+# CONFIG_PPS is not set
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK_OPTIONAL=y
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# end of PTP clock support
+
+# CONFIG_PINCTRL is not set
+# CONFIG_GPIOLIB is not set
+# CONFIG_W1 is not set
+CONFIG_POWER_RESET=y
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_RESET_VEXPRESS is not set
+# CONFIG_POWER_RESET_XGENE is not set
+# CONFIG_POWER_RESET_SYSCON is not set
+# CONFIG_POWER_RESET_SYSCON_POWEROFF is not set
+# CONFIG_SYSCON_REBOOT_MODE is not set
+# CONFIG_NVMEM_REBOOT_MODE is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_SAMSUNG_SDI is not set
+# CONFIG_BATTERY_BQ27XXX is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_HWMON is not set
+# CONFIG_THERMAL is not set
+# CONFIG_WATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+# CONFIG_MFD_ATMEL_FLEXCOM is not set
+# CONFIG_MFD_ATMEL_HLCDC is not set
+# CONFIG_MFD_MADERA is not set
+# CONFIG_MFD_HI6421_PMIC is not set
+# CONFIG_MFD_KEMPLD is not set
+# CONFIG_MFD_MT6397 is not set
+# CONFIG_MFD_SM501 is not set
+CONFIG_MFD_SYSCON=y
+# CONFIG_MFD_TQMX86 is not set
+# end of Multifunction device drivers
+
+# CONFIG_REGULATOR is not set
+# CONFIG_RC_CORE is not set
+
+#
+# CEC support
+#
+# CONFIG_MEDIA_CEC_SUPPORT is not set
+# end of CEC support
+
+# CONFIG_MEDIA_SUPPORT is not set
+
+#
+# Graphics support
+#
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_DRM is not set
+# CONFIG_DRM_DEBUG_MODESET_LOCK is not set
+
+#
+# Frame buffer Devices
+#
+# CONFIG_FB is not set
+# end of Frame buffer Devices
+
+#
+# Backlight & LCD device support
+#
+# CONFIG_LCD_CLASS_DEVICE is not set
+# CONFIG_BACKLIGHT_CLASS_DEVICE is not set
+# end of Backlight & LCD device support
+
+#
+# Console display driver support
+#
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_DUMMY_CONSOLE_COLUMNS=80
+CONFIG_DUMMY_CONSOLE_ROWS=25
+# end of Console display driver support
+# end of Graphics support
+
+# CONFIG_SOUND is not set
+CONFIG_HID_SUPPORT=y
+# CONFIG_HID is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+# CONFIG_USB_SUPPORT is not set
+# CONFIG_MMC is not set
+# CONFIG_MEMSTICK is not set
+# CONFIG_NEW_LEDS is not set
+# CONFIG_ACCESSIBILITY is not set
+CONFIG_EDAC_SUPPORT=y
+# CONFIG_RTC_CLASS is not set
+# CONFIG_DMADEVICES is not set
+
+#
+# DMABUF options
+#
+# CONFIG_SYNC_FILE is not set
+# CONFIG_DMABUF_MOVE_NOTIFY is not set
+# CONFIG_DMABUF_DEBUG is not set
+# CONFIG_DMABUF_SELFTESTS is not set
+# CONFIG_DMABUF_HEAPS is not set
+# CONFIG_DMABUF_SYSFS_STATS is not set
+# end of DMABUF options
+
+# CONFIG_UIO is not set
+# CONFIG_VFIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+# CONFIG_VIRTIO_MENU is not set
+# CONFIG_VHOST_MENU is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+# end of Microsoft Hyper-V guest support
+
+# CONFIG_GREYBUS is not set
+# CONFIG_COMEDI is not set
+# CONFIG_STAGING is not set
+# CONFIG_GOLDFISH is not set
+# CONFIG_CHROME_PLATFORMS is not set
+# CONFIG_MELLANOX_PLATFORM is not set
+# CONFIG_SURFACE_PLATFORMS is not set
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Clock driver for ARM Reference designs
+#
+# CONFIG_CLK_ICST is not set
+# CONFIG_CLK_SP810 is not set
+# CONFIG_CLK_VEXPRESS_OSC is not set
+# end of Clock driver for ARM Reference designs
+
+# CONFIG_COMMON_CLK_AXI_CLKGEN is not set
+# CONFIG_COMMON_CLK_XGENE is not set
+# CONFIG_COMMON_CLK_FIXED_MMIO is not set
+# CONFIG_XILINX_VCU is not set
+# CONFIG_COMMON_CLK_XLNX_CLKWZRD is not set
+# CONFIG_HWSPINLOCK is not set
+
+#
+# Clock Source drivers
+#
+CONFIG_TIMER_OF=y
+CONFIG_TIMER_PROBE=y
+CONFIG_ARM_ARCH_TIMER=y
+CONFIG_ARM_ARCH_TIMER_EVTSTREAM=y
+CONFIG_ARM_ARCH_TIMER_OOL_WORKAROUND=y
+# CONFIG_FSL_ERRATUM_A008585 is not set
+# CONFIG_HISILICON_ERRATUM_161010101 is not set
+CONFIG_ARM64_ERRATUM_858921=y
+# end of Clock Source drivers
+
+# CONFIG_MAILBOX is not set
+# CONFIG_IOMMU_SUPPORT is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_REMOTEPROC is not set
+# end of Remoteproc drivers
+
+#
+# Rpmsg drivers
+#
+# CONFIG_RPMSG_VIRTIO is not set
+# end of Rpmsg drivers
+
+# CONFIG_SOUNDWIRE is not set
+
+#
+# SOC (System On Chip) specific Drivers
+#
+
+#
+# Amlogic SoC drivers
+#
+# end of Amlogic SoC drivers
+
+#
+# Broadcom SoC drivers
+#
+# end of Broadcom SoC drivers
+
+#
+# NXP/Freescale QorIQ SoC drivers
+#
+# CONFIG_QUICC_ENGINE is not set
+# end of NXP/Freescale QorIQ SoC drivers
+
+#
+# fujitsu SoC drivers
+#
+# end of fujitsu SoC drivers
+
+#
+# i.MX SoC drivers
+#
+# end of i.MX SoC drivers
+
+#
+# Enable LiteX SoC Builder specific drivers
+#
+# CONFIG_LITEX_SOC_CONTROLLER is not set
+# end of Enable LiteX SoC Builder specific drivers
+
+# CONFIG_WPCM450_SOC is not set
+
+#
+# Qualcomm SoC drivers
+#
+# end of Qualcomm SoC drivers
+
+# CONFIG_SOC_TI is not set
+
+#
+# Xilinx SoC drivers
+#
+# end of Xilinx SoC drivers
+# end of SOC (System On Chip) specific Drivers
+
+#
+# PM Domains
+#
+
+#
+# Amlogic PM Domains
+#
+# end of Amlogic PM Domains
+
+#
+# Broadcom PM Domains
+#
+# end of Broadcom PM Domains
+
+#
+# i.MX PM Domains
+#
+# end of i.MX PM Domains
+
+#
+# Qualcomm PM Domains
+#
+# end of Qualcomm PM Domains
+# end of PM Domains
+
+# CONFIG_PM_DEVFREQ is not set
+# CONFIG_EXTCON is not set
+# CONFIG_MEMORY is not set
+# CONFIG_IIO is not set
+# CONFIG_PWM is not set
+
+#
+# IRQ chip support
+#
+CONFIG_IRQCHIP=y
+CONFIG_ARM_GIC=y
+CONFIG_ARM_GIC_MAX_NR=1
+CONFIG_ARM_GIC_V3=y
+CONFIG_ARM_GIC_V3_ITS=y
+# CONFIG_AL_FIC is not set
+# CONFIG_XILINX_INTC is not set
+CONFIG_PARTITION_PERCPU=y
+# end of IRQ chip support
+
+# CONFIG_IPACK_BUS is not set
+# CONFIG_RESET_CONTROLLER is not set
+
+#
+# PHY Subsystem
+#
+# CONFIG_GENERIC_PHY is not set
+# CONFIG_PHY_CAN_TRANSCEIVER is not set
+
+#
+# PHY drivers for Broadcom platforms
+#
+# CONFIG_BCM_KONA_USB2_PHY is not set
+# end of PHY drivers for Broadcom platforms
+
+# CONFIG_PHY_CADENCE_TORRENT is not set
+# CONFIG_PHY_CADENCE_DPHY is not set
+# CONFIG_PHY_CADENCE_DPHY_RX is not set
+# CONFIG_PHY_CADENCE_SALVO is not set
+# CONFIG_PHY_PXA_28NM_HSIC is not set
+# CONFIG_PHY_PXA_28NM_USB2 is not set
+# CONFIG_PHY_LAN966X_SERDES is not set
+# CONFIG_PHY_OCELOT_SERDES is not set
+# end of PHY Subsystem
+
+# CONFIG_POWERCAP is not set
+# CONFIG_MCB is not set
+# CONFIG_RAS is not set
+
+#
+# Android
+#
+# CONFIG_ANDROID_BINDER_IPC is not set
+# end of Android
+
+# CONFIG_DAX is not set
+# CONFIG_NVMEM is not set
+
+#
+# HW tracing support
+#
+# CONFIG_STM is not set
+# CONFIG_INTEL_TH is not set
+# end of HW tracing support
+
+# CONFIG_FPGA is not set
+# CONFIG_FSI is not set
+CONFIG_TEE=y
+# CONFIG_OPTEE is not set
+CONFIG_MBEDTEE=y
+# CONFIG_SIOX is not set
+# CONFIG_SLIMBUS is not set
+# CONFIG_INTERCONNECT is not set
+# CONFIG_COUNTER is not set
+# CONFIG_PECI is not set
+# CONFIG_HTE is not set
+# CONFIG_CDX_BUS is not set
+# end of Device Drivers
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+CONFIG_VALIDATE_FS_PARSER=y
+CONFIG_EXPORTFS=y
+# CONFIG_EXPORTFS_BLOCK_OPS is not set
+CONFIG_FILE_LOCKING=y
+# CONFIG_FS_ENCRYPTION is not set
+# CONFIG_FS_VERITY is not set
+CONFIG_FSNOTIFY=y
+# CONFIG_DNOTIFY is not set
+CONFIG_INOTIFY_USER=y
+CONFIG_FANOTIFY=y
+# CONFIG_QUOTA is not set
+# CONFIG_AUTOFS_FS is not set
+# CONFIG_FUSE_FS is not set
+# CONFIG_OVERLAY_FS is not set
+
+#
+# Caches
+#
+# end of Caches
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+# CONFIG_PROC_KCORE is not set
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+# CONFIG_PROC_CHILDREN is not set
+CONFIG_KERNFS=y
+CONFIG_SYSFS=y
+CONFIG_ARCH_SUPPORTS_HUGETLBFS=y
+# CONFIG_HUGETLBFS is not set
+CONFIG_ARCH_HAS_GIGANTIC_PAGE=y
+# CONFIG_CONFIGFS_FS is not set
+# end of Pseudo filesystems
+
+# CONFIG_MISC_FILESYSTEMS is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
+# CONFIG_NLS_ISO8859_1 is not set
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+# CONFIG_NLS_UTF8 is not set
+# CONFIG_UNICODE is not set
+# end of File systems
+
+#
+# Security options
+#
+# CONFIG_KEYS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+# CONFIG_SECURITY is not set
+# CONFIG_SECURITYFS is not set
+# CONFIG_HARDENED_USERCOPY is not set
+# CONFIG_FORTIFY_SOURCE is not set
+# CONFIG_STATIC_USERMODEHELPER is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_LSM="yama,loadpin,safesetid,integrity,selinux,smack,tomoyo,apparmor"
+
+#
+# Kernel hardening options
+#
+
+#
+# Memory initialization
+#
+CONFIG_CC_HAS_AUTO_VAR_INIT_PATTERN=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO_BARE=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO=y
+CONFIG_INIT_STACK_NONE=y
+# CONFIG_INIT_STACK_ALL_PATTERN is not set
+# CONFIG_INIT_STACK_ALL_ZERO is not set
+# CONFIG_INIT_ON_ALLOC_DEFAULT_ON is not set
+# CONFIG_INIT_ON_FREE_DEFAULT_ON is not set
+CONFIG_CC_HAS_ZERO_CALL_USED_REGS=y
+# CONFIG_ZERO_CALL_USED_REGS is not set
+# end of Memory initialization
+
+#
+# Hardening of kernel data structures
+#
+# CONFIG_LIST_HARDENED is not set
+# CONFIG_BUG_ON_DATA_CORRUPTION is not set
+# end of Hardening of kernel data structures
+
+CONFIG_RANDSTRUCT_NONE=y
+# end of Kernel hardening options
+# end of Security options
+
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+# CONFIG_CRYPTO_MANAGER is not set
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+# CONFIG_CRYPTO_CRYPTD is not set
+# CONFIG_CRYPTO_AUTHENC is not set
+# CONFIG_CRYPTO_TEST is not set
+# end of Crypto core or helper
+
+#
+# Public-key cryptography
+#
+# CONFIG_CRYPTO_RSA is not set
+# CONFIG_CRYPTO_DH is not set
+# CONFIG_CRYPTO_ECDH is not set
+# CONFIG_CRYPTO_ECDSA is not set
+# CONFIG_CRYPTO_ECRDSA is not set
+# CONFIG_CRYPTO_SM2 is not set
+# CONFIG_CRYPTO_CURVE25519 is not set
+# end of Public-key cryptography
+
+#
+# Block ciphers
+#
+# CONFIG_CRYPTO_AES is not set
+# CONFIG_CRYPTO_AES_TI is not set
+# CONFIG_CRYPTO_ARIA is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+# CONFIG_CRYPTO_DES is not set
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_SM4_GENERIC is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+# end of Block ciphers
+
+#
+# Length-preserving ciphers and modes
+#
+# CONFIG_CRYPTO_ADIANTUM is not set
+# CONFIG_CRYPTO_CHACHA20 is not set
+# CONFIG_CRYPTO_CBC is not set
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+# CONFIG_CRYPTO_ECB is not set
+# CONFIG_CRYPTO_HCTR2 is not set
+# CONFIG_CRYPTO_KEYWRAP is not set
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+# end of Length-preserving ciphers and modes
+
+#
+# AEAD (authenticated encryption with associated data) ciphers
+#
+# CONFIG_CRYPTO_AEGIS128 is not set
+# CONFIG_CRYPTO_CHACHA20POLY1305 is not set
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+# CONFIG_CRYPTO_ECHAINIV is not set
+# CONFIG_CRYPTO_ESSIV is not set
+# end of AEAD (authenticated encryption with associated data) ciphers
+
+#
+# Hashes, digests, and MACs
+#
+# CONFIG_CRYPTO_BLAKE2B is not set
+# CONFIG_CRYPTO_CMAC is not set
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_HMAC is not set
+# CONFIG_CRYPTO_MD4 is not set
+# CONFIG_CRYPTO_MD5 is not set
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_POLY1305 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+CONFIG_CRYPTO_SHA1=y
+# CONFIG_CRYPTO_SHA256 is not set
+# CONFIG_CRYPTO_SHA512 is not set
+# CONFIG_CRYPTO_SHA3 is not set
+# CONFIG_CRYPTO_SM3_GENERIC is not set
+# CONFIG_CRYPTO_STREEBOG is not set
+# CONFIG_CRYPTO_VMAC is not set
+# CONFIG_CRYPTO_WP512 is not set
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_XXHASH is not set
+# end of Hashes, digests, and MACs
+
+#
+# CRCs (cyclic redundancy checks)
+#
+# CONFIG_CRYPTO_CRC32C is not set
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_CRCT10DIF is not set
+# end of CRCs (cyclic redundancy checks)
+
+#
+# Compression
+#
+# CONFIG_CRYPTO_DEFLATE is not set
+# CONFIG_CRYPTO_LZO is not set
+# CONFIG_CRYPTO_842 is not set
+# CONFIG_CRYPTO_LZ4 is not set
+# CONFIG_CRYPTO_LZ4HC is not set
+# CONFIG_CRYPTO_ZSTD is not set
+# end of Compression
+
+#
+# Random number generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+# CONFIG_CRYPTO_DRBG_MENU is not set
+# CONFIG_CRYPTO_JITTERENTROPY is not set
+# end of Random number generation
+
+#
+# Userspace interface
+#
+# end of Userspace interface
+
+# CONFIG_CRYPTO_NHPOLY1305_NEON is not set
+# CONFIG_CRYPTO_CHACHA20_NEON is not set
+
+#
+# Accelerated Cryptographic Algorithms for CPU (arm64)
+#
+# CONFIG_CRYPTO_GHASH_ARM64_CE is not set
+# CONFIG_CRYPTO_POLY1305_NEON is not set
+# CONFIG_CRYPTO_SHA1_ARM64_CE is not set
+# CONFIG_CRYPTO_SHA256_ARM64 is not set
+# CONFIG_CRYPTO_SHA2_ARM64_CE is not set
+# CONFIG_CRYPTO_SHA512_ARM64 is not set
+# CONFIG_CRYPTO_SHA512_ARM64_CE is not set
+# CONFIG_CRYPTO_SHA3_ARM64 is not set
+# CONFIG_CRYPTO_SM3_NEON is not set
+# CONFIG_CRYPTO_SM3_ARM64_CE is not set
+# CONFIG_CRYPTO_POLYVAL_ARM64_CE is not set
+# CONFIG_CRYPTO_AES_ARM64 is not set
+# CONFIG_CRYPTO_AES_ARM64_CE is not set
+# CONFIG_CRYPTO_AES_ARM64_CE_BLK is not set
+# CONFIG_CRYPTO_AES_ARM64_NEON_BLK is not set
+# CONFIG_CRYPTO_AES_ARM64_BS is not set
+# CONFIG_CRYPTO_SM4_ARM64_CE is not set
+# CONFIG_CRYPTO_SM4_ARM64_CE_BLK is not set
+# CONFIG_CRYPTO_SM4_ARM64_NEON_BLK is not set
+# CONFIG_CRYPTO_AES_ARM64_CE_CCM is not set
+# CONFIG_CRYPTO_SM4_ARM64_CE_CCM is not set
+# CONFIG_CRYPTO_SM4_ARM64_CE_GCM is not set
+# end of Accelerated Cryptographic Algorithms for CPU (arm64)
+
+CONFIG_CRYPTO_HW=y
+# CONFIG_CRYPTO_DEV_CCP is not set
+# CONFIG_CRYPTO_DEV_SAFEXCEL is not set
+# CONFIG_CRYPTO_DEV_CCREE is not set
+# CONFIG_CRYPTO_DEV_HISI_SEC is not set
+# CONFIG_CRYPTO_DEV_AMLOGIC_GXL is not set
+
+#
+# Certificates for signature checking
+#
+# end of Certificates for signature checking
+
+#
+# Library routines
+#
+# CONFIG_PACKING is not set
+CONFIG_BITREVERSE=y
+CONFIG_HAVE_ARCH_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+# CONFIG_CORDIC is not set
+# CONFIG_PRIME_NUMBERS is not set
+CONFIG_RATIONAL=y
+CONFIG_ARCH_USE_CMPXCHG_LOCKREF=y
+CONFIG_ARCH_HAS_FAST_MULTIPLIER=y
+CONFIG_ARCH_USE_SYM_ANNOTATIONS=y
+# CONFIG_INDIRECT_PIO is not set
+
+#
+# Crypto library routines
+#
+CONFIG_CRYPTO_LIB_UTILS=y
+CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
+# CONFIG_CRYPTO_LIB_CHACHA is not set
+# CONFIG_CRYPTO_LIB_CURVE25519 is not set
+CONFIG_CRYPTO_LIB_POLY1305_RSIZE=9
+# CONFIG_CRYPTO_LIB_POLY1305 is not set
+# CONFIG_CRYPTO_LIB_CHACHA20POLY1305 is not set
+CONFIG_CRYPTO_LIB_SHA1=y
+# end of Crypto library routines
+
+# CONFIG_CRC_CCITT is not set
+# CONFIG_CRC16 is not set
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC64_ROCKSOFT is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC64 is not set
+# CONFIG_CRC4 is not set
+# CONFIG_CRC7 is not set
+# CONFIG_LIBCRC32C is not set
+# CONFIG_CRC8 is not set
+CONFIG_AUDIT_ARCH_COMPAT_GENERIC=y
+# CONFIG_RANDOM32_SELFTEST is not set
+CONFIG_ZLIB_INFLATE=y
+# CONFIG_XZ_DEC is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_NEED_SG_DMA_LENGTH=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_ARCH_DMA_ADDR_T_64BIT=y
+CONFIG_DMA_DECLARE_COHERENT=y
+CONFIG_ARCH_HAS_SETUP_DMA_OPS=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_DEVICE=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_CPU=y
+CONFIG_ARCH_HAS_DMA_PREP_COHERENT=y
+CONFIG_SWIOTLB=y
+# CONFIG_SWIOTLB_DYNAMIC is not set
+CONFIG_DMA_BOUNCE_UNALIGNED_KMALLOC=y
+# CONFIG_DMA_RESTRICTED_POOL is not set
+CONFIG_DMA_NONCOHERENT_MMAP=y
+CONFIG_DMA_COHERENT_POOL=y
+CONFIG_DMA_DIRECT_REMAP=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_DMA_MAP_BENCHMARK is not set
+# CONFIG_FORCE_NR_CPUS is not set
+CONFIG_GLOB=y
+# CONFIG_GLOB_SELFTEST is not set
+# CONFIG_IRQ_POLL is not set
+CONFIG_LIBFDT=y
+CONFIG_HAVE_GENERIC_VDSO=y
+CONFIG_GENERIC_GETTIMEOFDAY=y
+CONFIG_GENERIC_VDSO_TIME_NS=y
+CONFIG_ARCH_STACKWALK=y
+CONFIG_STACKDEPOT=y
+CONFIG_STACKDEPOT_MAX_FRAMES=64
+# CONFIG_LWQ_TEST is not set
+# end of Library routines
+
+CONFIG_GENERIC_IOREMAP=y
+CONFIG_GENERIC_LIB_DEVMEM_IS_ALLOWED=y
+
+#
+# Kernel hacking
+#
+
+#
+# printk and dmesg options
+#
+CONFIG_PRINTK_TIME=y
+# CONFIG_PRINTK_CALLER is not set
+# CONFIG_STACKTRACE_BUILD_ID is not set
+CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7
+CONFIG_CONSOLE_LOGLEVEL_QUIET=4
+CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_DYNAMIC_DEBUG_CORE is not set
+CONFIG_SYMBOLIC_ERRNAME=y
+# end of printk and dmesg options
+
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_MISC is not set
+
+#
+# Compile-time checks and compiler options
+#
+CONFIG_AS_HAS_NON_CONST_ULEB128=y
+CONFIG_DEBUG_INFO_NONE=y
+# CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set
+# CONFIG_DEBUG_INFO_DWARF4 is not set
+# CONFIG_DEBUG_INFO_DWARF5 is not set
+CONFIG_FRAME_WARN=1024
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_HEADERS_INSTALL is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_SECTION_MISMATCH_WARN_ONLY=y
+# CONFIG_DEBUG_FORCE_FUNCTION_ALIGN_64B is not set
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+CONFIG_FRAME_POINTER=y
+# CONFIG_VMLINUX_MAP is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# end of Compile-time checks and compiler options
+
+#
+# Generic Kernel Debugging Instruments
+#
+# CONFIG_MAGIC_SYSRQ is not set
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_FS_ALLOW_ALL=y
+# CONFIG_DEBUG_FS_DISALLOW_MOUNT is not set
+# CONFIG_DEBUG_FS_ALLOW_NONE is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+CONFIG_ARCH_HAS_UBSAN=y
+# CONFIG_UBSAN is not set
+CONFIG_HAVE_ARCH_KCSAN=y
+CONFIG_HAVE_KCSAN_COMPILER=y
+# CONFIG_KCSAN is not set
+# end of Generic Kernel Debugging Instruments
+
+#
+# Networking Debugging
+#
+# end of Networking Debugging
+
+#
+# Memory Debugging
+#
+# CONFIG_PAGE_EXTENSION is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+CONFIG_SLUB_DEBUG=y
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_PAGE_OWNER is not set
+# CONFIG_PAGE_POISONING is not set
+# CONFIG_DEBUG_RODATA_TEST is not set
+CONFIG_ARCH_HAS_DEBUG_WX=y
+# CONFIG_DEBUG_WX is not set
+CONFIG_GENERIC_PTDUMP=y
+# CONFIG_PTDUMP_DEBUGFS is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_PER_VMA_LOCK_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SHRINKER_DEBUG is not set
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_SCHED_STACK_END_CHECK is not set
+CONFIG_ARCH_HAS_DEBUG_VM_PGTABLE=y
+# CONFIG_DEBUG_VM is not set
+# CONFIG_DEBUG_VM_PGTABLE is not set
+CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y
+# CONFIG_DEBUG_VIRTUAL is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+CONFIG_HAVE_ARCH_KASAN=y
+CONFIG_HAVE_ARCH_KASAN_SW_TAGS=y
+CONFIG_HAVE_ARCH_KASAN_HW_TAGS=y
+CONFIG_HAVE_ARCH_KASAN_VMALLOC=y
+CONFIG_CC_HAS_KASAN_GENERIC=y
+CONFIG_CC_HAS_KASAN_SW_TAGS=y
+CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y
+# CONFIG_KASAN is not set
+CONFIG_HAVE_ARCH_KFENCE=y
+# CONFIG_KFENCE is not set
+# end of Memory Debugging
+
+# CONFIG_DEBUG_SHIRQ is not set
+
+#
+# Debug Oops, Lockups and Hangs
+#
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+CONFIG_PANIC_TIMEOUT=0
+# CONFIG_SOFTLOCKUP_DETECTOR is not set
+CONFIG_HAVE_HARDLOCKUP_DETECTOR_BUDDY=y
+# CONFIG_HARDLOCKUP_DETECTOR is not set
+# CONFIG_DETECT_HUNG_TASK is not set
+# CONFIG_WQ_WATCHDOG is not set
+# CONFIG_WQ_CPU_INTENSIVE_REPORT is not set
+# end of Debug Oops, Lockups and Hangs
+
+#
+# Scheduler Debugging
+#
+# CONFIG_SCHED_DEBUG is not set
+# CONFIG_SCHEDSTATS is not set
+# end of Scheduler Debugging
+
+# CONFIG_DEBUG_TIMEKEEPING is not set
+# CONFIG_DEBUG_PREEMPT is not set
+
+#
+# Lock Debugging (spinlocks, mutexes, etc...)
+#
+CONFIG_LOCK_DEBUGGING_SUPPORT=y
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_WW_MUTEX_SLOWPATH is not set
+# CONFIG_DEBUG_RWSEMS is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+# CONFIG_LOCK_TORTURE_TEST is not set
+# CONFIG_WW_MUTEX_SELFTEST is not set
+# CONFIG_SCF_TORTURE_TEST is not set
+# CONFIG_CSD_LOCK_WAIT_DEBUG is not set
+# end of Lock Debugging (spinlocks, mutexes, etc...)
+
+# CONFIG_DEBUG_IRQFLAGS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_WARN_ALL_UNSEEDED_RANDOM is not set
+# CONFIG_DEBUG_KOBJECT is not set
+
+#
+# Debug kernel data structures
+#
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_DEBUG_PLIST is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_MAPLE_TREE is not set
+# end of Debug kernel data structures
+
+#
+# RCU Debugging
+#
+# CONFIG_RCU_SCALE_TEST is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+# CONFIG_RCU_REF_SCALE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=21
+CONFIG_RCU_EXP_CPU_STALL_TIMEOUT=0
+# CONFIG_RCU_CPU_STALL_CPUTIME is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_RCU_EQS_DEBUG is not set
+# end of RCU Debugging
+
+# CONFIG_DEBUG_WQ_FORCE_RR_CPU is not set
+# CONFIG_CPU_HOTPLUG_STATE_CONTROL is not set
+# CONFIG_LATENCYTOP is not set
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_RETVAL=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_ARGS=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_TRACING_SUPPORT=y
+# CONFIG_FTRACE is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_SAMPLE_FTRACE_DIRECT=y
+CONFIG_HAVE_SAMPLE_FTRACE_DIRECT_MULTI=y
+# CONFIG_STRICT_DEVMEM is not set
+
+#
+# arm64 Debugging
+#
+# CONFIG_PID_IN_CONTEXTIDR is not set
+# CONFIG_CORESIGHT is not set
+# end of arm64 Debugging
+
+#
+# Kernel Testing and Coverage
+#
+# CONFIG_KUNIT is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+CONFIG_ARCH_HAS_KCOV=y
+CONFIG_CC_HAS_SANCOV_TRACE_PC=y
+# CONFIG_KCOV is not set
+# CONFIG_RUNTIME_TESTING_MENU is not set
+CONFIG_ARCH_USE_MEMTEST=y
+# CONFIG_MEMTEST is not set
+# end of Kernel Testing and Coverage
+
+#
+# Rust hacking
+#
+# end of Rust hacking
+# end of Kernel hacking
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/armv8a_qemu_virt_linux_config buildroot/tee/linux/armv8a_qemu_virt_linux_config
--- buildroot-ori/tee/linux/armv8a_qemu_virt_linux_config	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/armv8a_qemu_virt_linux_config	2025-05-31 23:12:46.404386055 +0800
@@ -0,0 +1,1954 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/arm64 6.9.10 Kernel Configuration
+#
+CONFIG_CC_VERSION_TEXT="aarch64-none-linux-gnu-gcc (Arm GNU Toolchain 13.2.rel1 (Build arm-13.7)) 13.2.1 20231009"
+CONFIG_CC_IS_GCC=y
+CONFIG_GCC_VERSION=130201
+CONFIG_CLANG_VERSION=0
+CONFIG_AS_IS_GNU=y
+CONFIG_AS_VERSION=24100
+CONFIG_LD_IS_BFD=y
+CONFIG_LD_VERSION=24100
+CONFIG_LLD_VERSION=0
+CONFIG_CC_CAN_LINK=y
+CONFIG_CC_CAN_LINK_STATIC=y
+CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
+CONFIG_CC_HAS_ASM_GOTO_TIED_OUTPUT=y
+CONFIG_GCC_ASM_GOTO_OUTPUT_WORKAROUND=y
+CONFIG_CC_HAS_ASM_INLINE=y
+CONFIG_CC_HAS_NO_PROFILE_FN_ATTR=y
+CONFIG_PAHOLE_VERSION=0
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_TABLE_SORT=y
+CONFIG_THREAD_INFO_IN_TASK=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+# CONFIG_COMPILE_TEST is not set
+# CONFIG_WERROR is not set
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_BUILD_SALT=""
+CONFIG_DEFAULT_INIT=""
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_WATCH_QUEUE is not set
+# CONFIG_CROSS_MEMORY_ATTACH is not set
+# CONFIG_USELIB is not set
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_IRQ_SHOW_LEVEL=y
+CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK=y
+CONFIG_GENERIC_IRQ_MIGRATION=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+CONFIG_IRQ_DOMAIN_HIERARCHY=y
+CONFIG_GENERIC_IRQ_IPI=y
+CONFIG_GENERIC_MSI_IRQ=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+# CONFIG_GENERIC_IRQ_DEBUGFS is not set
+# end of IRQ subsystem
+
+CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_HAVE_POSIX_CPU_TIMERS_TASK_WORK=y
+CONFIG_POSIX_CPU_TIMERS_TASK_WORK=y
+CONFIG_CONTEXT_TRACKING=y
+CONFIG_CONTEXT_TRACKING_IDLE=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+CONFIG_NO_HZ_IDLE=y
+# CONFIG_NO_HZ_FULL is not set
+# CONFIG_NO_HZ is not set
+CONFIG_HIGH_RES_TIMERS=y
+# end of Timers subsystem
+
+CONFIG_HAVE_EBPF_JIT=y
+CONFIG_ARCH_WANT_DEFAULT_BPF_JIT=y
+
+#
+# BPF subsystem
+#
+# CONFIG_BPF_SYSCALL is not set
+# end of BPF subsystem
+
+CONFIG_PREEMPT_BUILD=y
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_PREEMPT_COUNT=y
+CONFIG_PREEMPTION=y
+# CONFIG_PREEMPT_DYNAMIC is not set
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_TICK_CPU_ACCOUNTING=y
+# CONFIG_VIRT_CPU_ACCOUNTING_GEN is not set
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_PSI is not set
+# end of CPU/Task time and stats accounting
+
+CONFIG_CPU_ISOLATION=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+CONFIG_PREEMPT_RCU=y
+# CONFIG_RCU_EXPERT is not set
+CONFIG_TREE_SRCU=y
+CONFIG_RCU_STALL_COMMON=y
+CONFIG_RCU_NEED_SEGCBLIST=y
+# end of RCU Subsystem
+
+CONFIG_IKCONFIG=y
+# CONFIG_IKCONFIG_PROC is not set
+# CONFIG_IKHEADERS is not set
+CONFIG_LOG_BUF_SHIFT=16
+CONFIG_LOG_CPU_MAX_BUF_SHIFT=12
+# CONFIG_PRINTK_INDEX is not set
+CONFIG_GENERIC_SCHED_CLOCK=y
+
+#
+# Scheduler features
+#
+# end of Scheduler features
+
+CONFIG_ARCH_SUPPORTS_NUMA_BALANCING=y
+CONFIG_ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH=y
+CONFIG_CC_HAS_INT128=y
+CONFIG_CC_IMPLICIT_FALLTHROUGH="-Wimplicit-fallthrough=5"
+CONFIG_GCC10_NO_ARRAY_BOUNDS=y
+CONFIG_CC_NO_ARRAY_BOUNDS=y
+CONFIG_GCC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CC_NO_STRINGOP_OVERFLOW=y
+CONFIG_ARCH_SUPPORTS_INT128=y
+CONFIG_CGROUPS=y
+# CONFIG_CGROUP_FAVOR_DYNMODS is not set
+# CONFIG_MEMCG is not set
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+CONFIG_CFS_BANDWIDTH=y
+CONFIG_RT_GROUP_SCHED=y
+# CONFIG_CGROUP_PIDS is not set
+# CONFIG_CGROUP_RDMA is not set
+# CONFIG_CGROUP_FREEZER is not set
+# CONFIG_CPUSETS is not set
+# CONFIG_CGROUP_DEVICE is not set
+# CONFIG_CGROUP_CPUACCT is not set
+# CONFIG_CGROUP_MISC is not set
+# CONFIG_CGROUP_DEBUG is not set
+# CONFIG_NAMESPACES is not set
+# CONFIG_CHECKPOINT_RESTORE is not set
+# CONFIG_SCHED_AUTOGROUP is not set
+# CONFIG_RELAY is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE="${BR_BINARIES_DIR}/rootfs.cpio"
+CONFIG_INITRAMFS_FORCE=y
+CONFIG_INITRAMFS_ROOT_UID=0
+CONFIG_INITRAMFS_ROOT_GID=0
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+# CONFIG_RD_LZ4 is not set
+# CONFIG_RD_ZSTD is not set
+CONFIG_INITRAMFS_COMPRESSION_GZIP=y
+# CONFIG_INITRAMFS_COMPRESSION_NONE is not set
+# CONFIG_BOOT_CONFIG is not set
+CONFIG_INITRAMFS_PRESERVE_MTIME=y
+CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_LD_ORPHAN_WARN=y
+CONFIG_LD_ORPHAN_WARN_LEVEL="warn"
+CONFIG_SYSCTL=y
+CONFIG_SYSCTL_EXCEPTION_TRACE=y
+CONFIG_EXPERT=y
+CONFIG_MULTIUSER=y
+# CONFIG_SGETMASK_SYSCALL is not set
+CONFIG_SYSFS_SYSCALL=y
+# CONFIG_FHANDLE is not set
+CONFIG_POSIX_TIMERS=y
+CONFIG_PRINTK=y
+# CONFIG_BUG is not set
+CONFIG_ELF_CORE=y
+# CONFIG_BASE_FULL is not set
+CONFIG_FUTEX=y
+CONFIG_FUTEX_PI=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+# CONFIG_SHMEM is not set
+# CONFIG_AIO is not set
+# CONFIG_IO_URING is not set
+# CONFIG_ADVISE_SYSCALLS is not set
+CONFIG_MEMBARRIER=y
+# CONFIG_KCMP is not set
+# CONFIG_RSEQ is not set
+CONFIG_CACHESTAT_SYSCALL=y
+# CONFIG_PC104 is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_SELFTEST is not set
+CONFIG_KALLSYMS_ALL=y
+CONFIG_KALLSYMS_BASE_RELATIVE=y
+CONFIG_ARCH_HAS_MEMBARRIER_SYNC_CORE=y
+CONFIG_HAVE_PERF_EVENTS=y
+
+#
+# Kernel Performance Events And Counters
+#
+# CONFIG_PERF_EVENTS is not set
+# end of Kernel Performance Events And Counters
+
+# CONFIG_PROFILING is not set
+
+#
+# Kexec and crash features
+#
+# CONFIG_KEXEC_FILE is not set
+# end of Kexec and crash features
+# end of General setup
+
+CONFIG_ARM64=y
+CONFIG_GCC_SUPPORTS_DYNAMIC_FTRACE_WITH_ARGS=y
+CONFIG_64BIT=y
+CONFIG_MMU=y
+CONFIG_ARM64_CONT_PTE_SHIFT=4
+CONFIG_ARM64_CONT_PMD_SHIFT=4
+CONFIG_ARCH_MMAP_RND_BITS_MIN=18
+CONFIG_ARCH_MMAP_RND_BITS_MAX=24
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MIN=11
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MAX=16
+CONFIG_NO_IOPORT_MAP=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_ILLEGAL_POINTER_VALUE=0xdead000000000000
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CSUM=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_SMP=y
+CONFIG_KERNEL_MODE_NEON=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_PGTABLE_LEVELS=3
+CONFIG_ARCH_SUPPORTS_UPROBES=y
+CONFIG_ARCH_PROC_KCORE_TEXT=y
+CONFIG_BUILTIN_RETURN_ADDRESS_STRIPS_PAC=y
+
+#
+# Platform selection
+#
+# CONFIG_ARCH_ACTIONS is not set
+# CONFIG_ARCH_SUNXI is not set
+# CONFIG_ARCH_ALPINE is not set
+# CONFIG_ARCH_APPLE is not set
+# CONFIG_ARCH_BCM is not set
+# CONFIG_ARCH_BERLIN is not set
+# CONFIG_ARCH_BITMAIN is not set
+# CONFIG_ARCH_EXYNOS is not set
+# CONFIG_ARCH_SPARX5 is not set
+# CONFIG_ARCH_K3 is not set
+# CONFIG_ARCH_LG1K is not set
+# CONFIG_ARCH_HISI is not set
+# CONFIG_ARCH_KEEMBAY is not set
+# CONFIG_ARCH_MEDIATEK is not set
+# CONFIG_ARCH_MESON is not set
+# CONFIG_ARCH_MVEBU is not set
+# CONFIG_ARCH_NXP is not set
+# CONFIG_ARCH_MA35 is not set
+# CONFIG_ARCH_NPCM is not set
+# CONFIG_ARCH_PENSANDO is not set
+# CONFIG_ARCH_QCOM is not set
+# CONFIG_ARCH_REALTEK is not set
+# CONFIG_ARCH_RENESAS is not set
+# CONFIG_ARCH_ROCKCHIP is not set
+# CONFIG_ARCH_SEATTLE is not set
+# CONFIG_ARCH_INTEL_SOCFPGA is not set
+# CONFIG_ARCH_STM32 is not set
+# CONFIG_ARCH_SYNQUACER is not set
+# CONFIG_ARCH_TEGRA is not set
+# CONFIG_ARCH_SPRD is not set
+# CONFIG_ARCH_THUNDER is not set
+# CONFIG_ARCH_THUNDER2 is not set
+# CONFIG_ARCH_UNIPHIER is not set
+# CONFIG_ARCH_VEXPRESS is not set
+# CONFIG_ARCH_VISCONTI is not set
+# CONFIG_ARCH_XGENE is not set
+# CONFIG_ARCH_ZYNQMP is not set
+# end of Platform selection
+
+#
+# Kernel Features
+#
+
+#
+# ARM errata workarounds via the alternatives framework
+#
+CONFIG_AMPERE_ERRATUM_AC03_CPU_38=y
+CONFIG_ARM64_WORKAROUND_CLEAN_CACHE=y
+CONFIG_ARM64_ERRATUM_826319=y
+CONFIG_ARM64_ERRATUM_827319=y
+CONFIG_ARM64_ERRATUM_824069=y
+CONFIG_ARM64_ERRATUM_819472=y
+CONFIG_ARM64_ERRATUM_832075=y
+CONFIG_ARM64_ERRATUM_843419=y
+CONFIG_ARM64_LD_HAS_FIX_ERRATUM_843419=y
+CONFIG_ARM64_ERRATUM_1024718=y
+CONFIG_ARM64_WORKAROUND_SPECULATIVE_AT=y
+CONFIG_ARM64_ERRATUM_1165522=y
+CONFIG_ARM64_ERRATUM_1319367=y
+CONFIG_ARM64_ERRATUM_1530923=y
+CONFIG_ARM64_WORKAROUND_REPEAT_TLBI=y
+# CONFIG_ARM64_ERRATUM_2441007 is not set
+CONFIG_ARM64_ERRATUM_1286807=y
+CONFIG_ARM64_ERRATUM_1463225=y
+CONFIG_ARM64_ERRATUM_1542419=y
+CONFIG_ARM64_ERRATUM_1508412=y
+CONFIG_ARM64_ERRATUM_2051678=y
+CONFIG_ARM64_ERRATUM_2077057=y
+CONFIG_ARM64_ERRATUM_2658417=y
+CONFIG_ARM64_WORKAROUND_TSB_FLUSH_FAILURE=y
+CONFIG_ARM64_ERRATUM_2054223=y
+CONFIG_ARM64_ERRATUM_2067961=y
+# CONFIG_ARM64_ERRATUM_2441009 is not set
+CONFIG_ARM64_ERRATUM_2457168=y
+CONFIG_ARM64_ERRATUM_2645198=y
+CONFIG_ARM64_WORKAROUND_SPECULATIVE_UNPRIV_LOAD=y
+CONFIG_ARM64_ERRATUM_2966298=y
+CONFIG_ARM64_ERRATUM_3117295=y
+CONFIG_CAVIUM_ERRATUM_22375=y
+CONFIG_CAVIUM_ERRATUM_23154=y
+CONFIG_CAVIUM_ERRATUM_27456=y
+CONFIG_CAVIUM_ERRATUM_30115=y
+CONFIG_CAVIUM_TX2_ERRATUM_219=y
+CONFIG_FUJITSU_ERRATUM_010001=y
+CONFIG_HISILICON_ERRATUM_161600802=y
+CONFIG_QCOM_FALKOR_ERRATUM_1003=y
+CONFIG_QCOM_FALKOR_ERRATUM_1009=y
+CONFIG_QCOM_QDF2400_ERRATUM_0065=y
+CONFIG_QCOM_FALKOR_ERRATUM_E1041=y
+CONFIG_NVIDIA_CARMEL_CNP_ERRATUM=y
+CONFIG_ROCKCHIP_ERRATUM_3588001=y
+CONFIG_SOCIONEXT_SYNQUACER_PREITS=y
+# end of ARM errata workarounds via the alternatives framework
+
+CONFIG_ARM64_4K_PAGES=y
+# CONFIG_ARM64_16K_PAGES is not set
+# CONFIG_ARM64_64K_PAGES is not set
+CONFIG_ARM64_VA_BITS_39=y
+# CONFIG_ARM64_VA_BITS_48 is not set
+# CONFIG_ARM64_VA_BITS_52 is not set
+CONFIG_ARM64_VA_BITS=39
+CONFIG_ARM64_PA_BITS_48=y
+CONFIG_ARM64_PA_BITS=48
+# CONFIG_CPU_BIG_ENDIAN is not set
+CONFIG_CPU_LITTLE_ENDIAN=y
+CONFIG_SCHED_MC=y
+# CONFIG_SCHED_CLUSTER is not set
+# CONFIG_SCHED_SMT is not set
+CONFIG_NR_CPUS=8
+CONFIG_HOTPLUG_CPU=y
+# CONFIG_NUMA is not set
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_SCHED_HRTICK=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_CC_HAVE_SHADOW_CALL_STACK=y
+# CONFIG_PARAVIRT is not set
+# CONFIG_PARAVIRT_TIME_ACCOUNTING is not set
+CONFIG_ARCH_SUPPORTS_KEXEC_FILE=y
+CONFIG_ARCH_SUPPORTS_KEXEC_SIG=y
+CONFIG_ARCH_SUPPORTS_KEXEC_IMAGE_VERIFY_SIG=y
+CONFIG_ARCH_DEFAULT_KEXEC_IMAGE_VERIFY_SIG=y
+CONFIG_ARCH_SUPPORTS_CRASH_DUMP=y
+# CONFIG_XEN is not set
+CONFIG_ARCH_FORCE_MAX_ORDER=10
+CONFIG_UNMAP_KERNEL_AT_EL0=y
+CONFIG_MITIGATE_SPECTRE_BRANCH_HISTORY=y
+CONFIG_RODATA_FULL_DEFAULT_ENABLED=y
+# CONFIG_ARM64_SW_TTBR0_PAN is not set
+CONFIG_ARM64_TAGGED_ADDR_ABI=y
+# CONFIG_COMPAT is not set
+
+#
+# ARMv8.1 architectural features
+#
+CONFIG_ARM64_HW_AFDBM=y
+CONFIG_ARM64_PAN=y
+CONFIG_AS_HAS_LSE_ATOMICS=y
+CONFIG_ARM64_LSE_ATOMICS=y
+CONFIG_ARM64_USE_LSE_ATOMICS=y
+# end of ARMv8.1 architectural features
+
+#
+# ARMv8.2 architectural features
+#
+CONFIG_AS_HAS_ARMV8_2=y
+CONFIG_AS_HAS_SHA3=y
+# CONFIG_ARM64_PMEM is not set
+CONFIG_ARM64_RAS_EXTN=y
+CONFIG_ARM64_CNP=y
+# end of ARMv8.2 architectural features
+
+#
+# ARMv8.3 architectural features
+#
+# CONFIG_ARM64_PTR_AUTH is not set
+CONFIG_CC_HAS_BRANCH_PROT_PAC_RET=y
+CONFIG_CC_HAS_SIGN_RETURN_ADDRESS=y
+CONFIG_AS_HAS_ARMV8_3=y
+CONFIG_AS_HAS_CFI_NEGATE_RA_STATE=y
+CONFIG_AS_HAS_LDAPR=y
+# end of ARMv8.3 architectural features
+
+#
+# ARMv8.4 architectural features
+#
+CONFIG_ARM64_AMU_EXTN=y
+CONFIG_AS_HAS_ARMV8_4=y
+CONFIG_ARM64_TLB_RANGE=y
+# end of ARMv8.4 architectural features
+
+#
+# ARMv8.5 architectural features
+#
+CONFIG_AS_HAS_ARMV8_5=y
+CONFIG_ARM64_BTI=y
+CONFIG_CC_HAS_BRANCH_PROT_PAC_RET_BTI=y
+CONFIG_ARM64_E0PD=y
+CONFIG_ARM64_AS_HAS_MTE=y
+CONFIG_ARM64_MTE=y
+# end of ARMv8.5 architectural features
+
+#
+# ARMv8.7 architectural features
+#
+CONFIG_ARM64_EPAN=y
+# end of ARMv8.7 architectural features
+
+CONFIG_ARM64_SVE=y
+CONFIG_ARM64_SME=y
+# CONFIG_ARM64_PSEUDO_NMI is not set
+CONFIG_RELOCATABLE=y
+# CONFIG_RANDOMIZE_BASE is not set
+CONFIG_CC_HAVE_STACKPROTECTOR_SYSREG=y
+# end of Kernel Features
+
+#
+# Boot options
+#
+CONFIG_CMDLINE="console=ttyAMA0,115200n8 root=/dev/ram0 rootwait earlycon=pl011,mmio32,0x09000000"
+# CONFIG_CMDLINE_FROM_BOOTLOADER is not set
+CONFIG_CMDLINE_FORCE=y
+# CONFIG_EFI is not set
+# end of Boot options
+
+#
+# Power management options
+#
+# CONFIG_SUSPEND is not set
+# CONFIG_PM is not set
+CONFIG_CPU_PM=y
+# CONFIG_ENERGY_MODEL is not set
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+# end of Power management options
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Idle
+#
+CONFIG_CPU_IDLE=y
+# CONFIG_CPU_IDLE_GOV_LADDER is not set
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_CPU_IDLE_GOV_TEO is not set
+
+#
+# ARM CPU Idle Drivers
+#
+# CONFIG_ARM_PSCI_CPUIDLE is not set
+# end of ARM CPU Idle Drivers
+# end of CPU Idle
+
+#
+# CPU Frequency scaling
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_GOV_ATTR_SET=y
+CONFIG_CPU_FREQ_GOV_COMMON=y
+CONFIG_CPU_FREQ_STAT=y
+CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+# CONFIG_CPU_FREQ_GOV_POWERSAVE is not set
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_FREQ_GOV_SCHEDUTIL is not set
+
+#
+# CPU frequency scaling drivers
+#
+# CONFIG_CPUFREQ_DT is not set
+# CONFIG_CPUFREQ_DT_PLATDEV is not set
+# end of CPU Frequency scaling
+# end of CPU Power Management
+
+# CONFIG_VIRTUALIZATION is not set
+CONFIG_CPU_MITIGATIONS=y
+
+#
+# General architecture-dependent options
+#
+CONFIG_ARCH_HAS_SUBPAGE_FAULTS=y
+CONFIG_HOTPLUG_CORE_SYNC=y
+CONFIG_HOTPLUG_CORE_SYNC_DEAD=y
+CONFIG_JUMP_LABEL=y
+# CONFIG_STATIC_KEYS_SELFTEST is not set
+CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS=y
+CONFIG_HAVE_IOREMAP_PROT=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_ARCH_CORRECT_STACKTRACE_ON_KRETPROBE=y
+CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y
+CONFIG_HAVE_NMI=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_TRACE_IRQFLAGS_NMI_SUPPORT=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_ARCH_HAS_FORTIFY_SOURCE=y
+CONFIG_ARCH_HAS_KEEPINITRD=y
+CONFIG_ARCH_HAS_SET_MEMORY=y
+CONFIG_ARCH_HAS_SET_DIRECT_MAP=y
+CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y
+CONFIG_ARCH_WANTS_NO_INSTR=y
+CONFIG_HAVE_ASM_MODVERSIONS=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_RSEQ=y
+CONFIG_HAVE_RUST=y
+CONFIG_HAVE_FUNCTION_ARG_ACCESS_API=y
+CONFIG_HAVE_PERF_REGS=y
+CONFIG_HAVE_PERF_USER_STACK_DUMP=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_HAVE_ARCH_JUMP_LABEL_RELATIVE=y
+CONFIG_MMU_GATHER_TABLE_FREE=y
+CONFIG_MMU_GATHER_RCU_TABLE_FREE=y
+CONFIG_MMU_LAZY_TLB_REFCOUNT=y
+CONFIG_ARCH_HAVE_NMI_SAFE_CMPXCHG=y
+CONFIG_ARCH_HAS_NMI_SAFE_THIS_CPU_OPS=y
+CONFIG_HAVE_ALIGNED_STRUCT_PAGE=y
+CONFIG_HAVE_CMPXCHG_LOCAL=y
+CONFIG_HAVE_CMPXCHG_DOUBLE=y
+CONFIG_HAVE_ARCH_SECCOMP=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+# CONFIG_SECCOMP is not set
+CONFIG_HAVE_ARCH_STACKLEAK=y
+CONFIG_HAVE_STACKPROTECTOR=y
+# CONFIG_STACKPROTECTOR is not set
+CONFIG_ARCH_SUPPORTS_SHADOW_CALL_STACK=y
+# CONFIG_SHADOW_CALL_STACK is not set
+CONFIG_ARCH_SUPPORTS_LTO_CLANG=y
+CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN=y
+CONFIG_LTO_NONE=y
+CONFIG_ARCH_SUPPORTS_CFI_CLANG=y
+CONFIG_HAVE_CONTEXT_TRACKING_USER=y
+CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOVE_PUD=y
+CONFIG_HAVE_MOVE_PMD=y
+CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE=y
+CONFIG_HAVE_ARCH_HUGE_VMAP=y
+CONFIG_HAVE_ARCH_HUGE_VMALLOC=y
+CONFIG_ARCH_WANT_HUGE_PMD_SHARE=y
+CONFIG_HAVE_MOD_ARCH_SPECIFIC=y
+CONFIG_MODULES_USE_ELF_RELA=y
+CONFIG_HAVE_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_ARCH_HAS_ELF_RANDOMIZE=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_ARCH_MMAP_RND_BITS=18
+CONFIG_HAVE_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_64KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_256KB=y
+CONFIG_PAGE_SHIFT=12
+CONFIG_ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT=y
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_COMPAT_32BIT_TIME=y
+CONFIG_HAVE_ARCH_VMAP_STACK=y
+CONFIG_VMAP_STACK=y
+CONFIG_HAVE_ARCH_RANDOMIZE_KSTACK_OFFSET=y
+CONFIG_RANDOMIZE_KSTACK_OFFSET=y
+# CONFIG_RANDOMIZE_KSTACK_OFFSET_DEFAULT is not set
+CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y
+CONFIG_STRICT_KERNEL_RWX=y
+CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y
+CONFIG_HAVE_ARCH_COMPILER_H=y
+CONFIG_HAVE_ARCH_PREL32_RELOCATIONS=y
+# CONFIG_LOCK_EVENT_COUNTS is not set
+CONFIG_ARCH_HAS_RELR=y
+CONFIG_HAVE_PREEMPT_DYNAMIC=y
+CONFIG_HAVE_PREEMPT_DYNAMIC_KEY=y
+CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y
+CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
+CONFIG_ARCH_SUPPORTS_PAGE_TABLE_CHECK=y
+CONFIG_ARCH_HAVE_TRACE_MMIO_ACCESS=y
+CONFIG_ARCH_HAS_HW_PTE_YOUNG=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y
+# end of GCOV-based kernel profiling
+
+CONFIG_HAVE_GCC_PLUGINS=y
+# CONFIG_GCC_PLUGINS is not set
+CONFIG_FUNCTION_ALIGNMENT_4B=y
+CONFIG_FUNCTION_ALIGNMENT=4
+# end of General architecture-dependent options
+
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=1
+# CONFIG_MODULES is not set
+# CONFIG_BLOCK is not set
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_LOCK_SPIN_ON_OWNER=y
+CONFIG_ARCH_USE_QUEUED_SPINLOCKS=y
+CONFIG_QUEUED_SPINLOCKS=y
+CONFIG_ARCH_USE_QUEUED_RWLOCKS=y
+CONFIG_QUEUED_RWLOCKS=y
+CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE=y
+CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y
+
+#
+# Executable file formats
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_ARCH_BINFMT_ELF_STATE=y
+CONFIG_ARCH_BINFMT_ELF_EXTRA_PHDRS=y
+CONFIG_ARCH_HAVE_ELF_PROT=y
+CONFIG_ARCH_USE_GNU_PROPERTY=y
+CONFIG_ELFCORE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_BINFMT_SCRIPT=y
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+# end of Executable file formats
+
+#
+# Memory Management options
+#
+
+#
+# Slab allocator options
+#
+CONFIG_SLUB=y
+# CONFIG_SLUB_TINY is not set
+CONFIG_SLAB_MERGE_DEFAULT=y
+# CONFIG_SLAB_FREELIST_RANDOM is not set
+# CONFIG_SLAB_FREELIST_HARDENED is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_SLUB_CPU_PARTIAL=y
+# CONFIG_RANDOM_KMALLOC_CACHES is not set
+# end of Slab allocator options
+
+# CONFIG_SHUFFLE_PAGE_ALLOCATOR is not set
+CONFIG_COMPAT_BRK=y
+CONFIG_SPARSEMEM=y
+CONFIG_SPARSEMEM_EXTREME=y
+CONFIG_SPARSEMEM_VMEMMAP_ENABLE=y
+CONFIG_SPARSEMEM_VMEMMAP=y
+CONFIG_HAVE_FAST_GUP=y
+CONFIG_ARCH_KEEP_MEMBLOCK=y
+CONFIG_ARCH_ENABLE_MEMORY_HOTPLUG=y
+CONFIG_ARCH_ENABLE_MEMORY_HOTREMOVE=y
+# CONFIG_MEMORY_HOTPLUG is not set
+CONFIG_ARCH_MHP_MEMMAP_ON_MEMORY_ENABLE=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK=y
+CONFIG_COMPACTION=y
+CONFIG_COMPACT_UNEVICTABLE_DEFAULT=1
+# CONFIG_PAGE_REPORTING is not set
+CONFIG_MIGRATION=y
+CONFIG_PCP_BATCH_SCALE_MAX=5
+CONFIG_PHYS_ADDR_T_64BIT=y
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_ARCH_SUPPORTS_MEMORY_FAILURE=y
+# CONFIG_MEMORY_FAILURE is not set
+CONFIG_ARCH_WANTS_THP_SWAP=y
+# CONFIG_TRANSPARENT_HUGEPAGE is not set
+# CONFIG_CMA is not set
+CONFIG_GENERIC_EARLY_IOREMAP=y
+# CONFIG_DEFERRED_STRUCT_PAGE_INIT is not set
+# CONFIG_IDLE_PAGE_TRACKING is not set
+CONFIG_ARCH_HAS_CACHE_LINE_SIZE=y
+CONFIG_ARCH_HAS_CURRENT_STACK_POINTER=y
+CONFIG_ARCH_HAS_PTE_DEVMAP=y
+CONFIG_ARCH_HAS_ZONE_DMA_SET=y
+# CONFIG_ZONE_DMA is not set
+# CONFIG_ZONE_DMA32 is not set
+CONFIG_ARCH_USES_HIGH_VMA_FLAGS=y
+CONFIG_ARCH_USES_PG_ARCH_X=y
+# CONFIG_VM_EVENT_COUNTERS is not set
+# CONFIG_PERCPU_STATS is not set
+# CONFIG_GUP_TEST is not set
+# CONFIG_DMAPOOL_TEST is not set
+CONFIG_ARCH_HAS_PTE_SPECIAL=y
+# CONFIG_MEMFD_CREATE is not set
+CONFIG_SECRETMEM=y
+# CONFIG_USERFAULTFD is not set
+# CONFIG_LRU_GEN is not set
+CONFIG_ARCH_SUPPORTS_PER_VMA_LOCK=y
+CONFIG_PER_VMA_LOCK=y
+CONFIG_LOCK_MM_AND_FIND_VMA=y
+
+#
+# Data Access Monitoring
+#
+# CONFIG_DAMON is not set
+# end of Data Access Monitoring
+# end of Memory Management options
+
+# CONFIG_NET is not set
+
+#
+# Device Drivers
+#
+CONFIG_ARM_AMBA=y
+CONFIG_HAVE_PCI=y
+CONFIG_GENERIC_PCI_IOMAP=y
+# CONFIG_PCI is not set
+# CONFIG_PCCARD is not set
+
+#
+# Generic Driver Options
+#
+# CONFIG_UEVENT_HELPER is not set
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+# CONFIG_DEVTMPFS_SAFE is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+
+#
+# Firmware loader
+#
+# CONFIG_FW_LOADER is not set
+# end of Firmware loader
+
+# CONFIG_ALLOW_DEV_COREDUMP is not set
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_DEBUG_TEST_DRIVER_REMOVE is not set
+CONFIG_GENERIC_CPU_DEVICES=y
+CONFIG_GENERIC_CPU_AUTOPROBE=y
+CONFIG_GENERIC_CPU_VULNERABILITIES=y
+CONFIG_SOC_BUS=y
+CONFIG_REGMAP=y
+CONFIG_REGMAP_MMIO=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_DMA_FENCE_TRACE is not set
+CONFIG_GENERIC_ARCH_TOPOLOGY=y
+# CONFIG_FW_DEVLINK_SYNC_STATE_TIMEOUT is not set
+# end of Generic Driver Options
+
+#
+# Bus devices
+#
+CONFIG_VEXPRESS_CONFIG=y
+# CONFIG_MHI_BUS is not set
+# CONFIG_MHI_BUS_EP is not set
+# end of Bus devices
+
+#
+# Cache Drivers
+#
+# end of Cache Drivers
+
+#
+# Firmware Drivers
+#
+
+#
+# ARM System Control and Management Interface Protocol
+#
+# CONFIG_ARM_SCMI_PROTOCOL is not set
+# end of ARM System Control and Management Interface Protocol
+
+# CONFIG_FIRMWARE_MEMMAP is not set
+# CONFIG_ARM_FFA_TRANSPORT is not set
+# CONFIG_GOOGLE_FIRMWARE is not set
+CONFIG_ARM_PSCI_FW=y
+# CONFIG_ARM_PSCI_CHECKER is not set
+
+#
+# Qualcomm firmware drivers
+#
+# end of Qualcomm firmware drivers
+
+CONFIG_HAVE_ARM_SMCCC=y
+CONFIG_HAVE_ARM_SMCCC_DISCOVERY=y
+CONFIG_ARM_SMCCC_SOC_ID=y
+
+#
+# Tegra firmware driver
+#
+# end of Tegra firmware driver
+# end of Firmware Drivers
+
+# CONFIG_GNSS is not set
+# CONFIG_MTD is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+# CONFIG_OF_UNITTEST is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_KOBJ=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_RESERVED_MEM=y
+# CONFIG_OF_OVERLAY is not set
+# CONFIG_PARPORT is not set
+
+#
+# NVME Support
+#
+# end of NVME Support
+
+#
+# Misc devices
+#
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_SRAM is not set
+# CONFIG_XILINX_SDFEC is not set
+# CONFIG_OPEN_DICE is not set
+# CONFIG_VCPU_STALL_DETECTOR is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_93CX6 is not set
+# end of EEPROM support
+
+#
+# Texas Instruments shared transport line discipline
+#
+# end of Texas Instruments shared transport line discipline
+
+#
+# Altera FPGA firmware download module (requires I2C)
+#
+# CONFIG_ECHO is not set
+# CONFIG_PVPANIC is not set
+# end of Misc devices
+
+#
+# SCSI device support
+#
+# end of SCSI device support
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+# CONFIG_INPUT_MATRIXKMAP is not set
+
+#
+# Userland interfaces
+#
+# CONFIG_INPUT_MOUSEDEV is not set
+# CONFIG_INPUT_JOYDEV is not set
+# CONFIG_INPUT_EVDEV is not set
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+# CONFIG_INPUT_KEYBOARD is not set
+# CONFIG_INPUT_MOUSE is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+# CONFIG_INPUT_TOUCHSCREEN is not set
+# CONFIG_INPUT_MISC is not set
+# CONFIG_RMI4_CORE is not set
+
+#
+# Hardware I/O ports
+#
+# CONFIG_SERIO is not set
+# CONFIG_GAMEPORT is not set
+# end of Hardware I/O ports
+# end of Input device support
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+# CONFIG_VT_HW_CONSOLE_BINDING is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_LEGACY_PTYS is not set
+CONFIG_LEGACY_TIOCSTI=y
+# CONFIG_LDISC_AUTOLOAD is not set
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_EARLYCON=y
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_AMBA_PL010 is not set
+CONFIG_SERIAL_AMBA_PL011=y
+CONFIG_SERIAL_AMBA_PL011_CONSOLE=y
+# CONFIG_SERIAL_EARLYCON_SEMIHOST is not set
+# CONFIG_SERIAL_UARTLITE is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_SIFIVE is not set
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_SERIAL_ARC is not set
+# CONFIG_SERIAL_FSL_LPUART is not set
+# CONFIG_SERIAL_FSL_LINFLEXUART is not set
+# CONFIG_SERIAL_CONEXANT_DIGICOLOR is not set
+# CONFIG_SERIAL_SPRD is not set
+# end of Serial drivers
+
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_NULL_TTY is not set
+# CONFIG_HVC_DCC is not set
+# CONFIG_SERIAL_DEV_BUS is not set
+# CONFIG_TTY_PRINTK is not set
+# CONFIG_VIRTIO_CONSOLE is not set
+# CONFIG_IPMI_HANDLER is not set
+CONFIG_HW_RANDOM=y
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+# CONFIG_HW_RANDOM_BA431 is not set
+# CONFIG_HW_RANDOM_CCTRNG is not set
+# CONFIG_HW_RANDOM_XIPHERA is not set
+CONFIG_HW_RANDOM_ARM_SMCCC_TRNG=y
+CONFIG_DEVMEM=y
+CONFIG_DEVPORT=y
+# CONFIG_TCG_TPM is not set
+# CONFIG_XILLYBUS is not set
+# end of Character devices
+
+#
+# I2C support
+#
+# CONFIG_I2C is not set
+# end of I2C support
+
+# CONFIG_I3C is not set
+# CONFIG_SPI is not set
+# CONFIG_SPMI is not set
+# CONFIG_HSI is not set
+# CONFIG_PPS is not set
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK_OPTIONAL=y
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# end of PTP clock support
+
+# CONFIG_PINCTRL is not set
+# CONFIG_GPIOLIB is not set
+# CONFIG_W1 is not set
+CONFIG_POWER_RESET=y
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_RESET_VEXPRESS is not set
+# CONFIG_POWER_RESET_XGENE is not set
+# CONFIG_POWER_RESET_SYSCON is not set
+# CONFIG_POWER_RESET_SYSCON_POWEROFF is not set
+# CONFIG_SYSCON_REBOOT_MODE is not set
+# CONFIG_NVMEM_REBOOT_MODE is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_SAMSUNG_SDI is not set
+# CONFIG_BATTERY_BQ27XXX is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_HWMON is not set
+# CONFIG_THERMAL is not set
+# CONFIG_WATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+# CONFIG_MFD_ATMEL_FLEXCOM is not set
+# CONFIG_MFD_ATMEL_HLCDC is not set
+# CONFIG_MFD_MADERA is not set
+# CONFIG_MFD_HI6421_PMIC is not set
+# CONFIG_MFD_KEMPLD is not set
+# CONFIG_MFD_MT6397 is not set
+# CONFIG_MFD_SM501 is not set
+CONFIG_MFD_SYSCON=y
+# CONFIG_MFD_TQMX86 is not set
+# end of Multifunction device drivers
+
+# CONFIG_REGULATOR is not set
+# CONFIG_RC_CORE is not set
+
+#
+# CEC support
+#
+# CONFIG_MEDIA_CEC_SUPPORT is not set
+# end of CEC support
+
+# CONFIG_MEDIA_SUPPORT is not set
+
+#
+# Graphics support
+#
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_DRM is not set
+# CONFIG_DRM_DEBUG_MODESET_LOCK is not set
+
+#
+# Frame buffer Devices
+#
+# CONFIG_FB is not set
+# end of Frame buffer Devices
+
+#
+# Backlight & LCD device support
+#
+# CONFIG_LCD_CLASS_DEVICE is not set
+# CONFIG_BACKLIGHT_CLASS_DEVICE is not set
+# end of Backlight & LCD device support
+
+#
+# Console display driver support
+#
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_DUMMY_CONSOLE_COLUMNS=80
+CONFIG_DUMMY_CONSOLE_ROWS=25
+# end of Console display driver support
+# end of Graphics support
+
+# CONFIG_SOUND is not set
+CONFIG_HID_SUPPORT=y
+# CONFIG_HID is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+# CONFIG_USB_SUPPORT is not set
+# CONFIG_MMC is not set
+# CONFIG_MEMSTICK is not set
+# CONFIG_NEW_LEDS is not set
+# CONFIG_ACCESSIBILITY is not set
+CONFIG_EDAC_SUPPORT=y
+# CONFIG_RTC_CLASS is not set
+# CONFIG_DMADEVICES is not set
+
+#
+# DMABUF options
+#
+# CONFIG_SYNC_FILE is not set
+# CONFIG_DMABUF_MOVE_NOTIFY is not set
+# CONFIG_DMABUF_DEBUG is not set
+# CONFIG_DMABUF_SELFTESTS is not set
+# CONFIG_DMABUF_HEAPS is not set
+# CONFIG_DMABUF_SYSFS_STATS is not set
+# end of DMABUF options
+
+# CONFIG_UIO is not set
+# CONFIG_VFIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+# CONFIG_VIRTIO_MENU is not set
+# CONFIG_VHOST_MENU is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+# end of Microsoft Hyper-V guest support
+
+# CONFIG_GREYBUS is not set
+# CONFIG_COMEDI is not set
+# CONFIG_STAGING is not set
+# CONFIG_GOLDFISH is not set
+# CONFIG_CHROME_PLATFORMS is not set
+# CONFIG_MELLANOX_PLATFORM is not set
+# CONFIG_SURFACE_PLATFORMS is not set
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Clock driver for ARM Reference designs
+#
+# CONFIG_CLK_ICST is not set
+# CONFIG_CLK_SP810 is not set
+# CONFIG_CLK_VEXPRESS_OSC is not set
+# end of Clock driver for ARM Reference designs
+
+# CONFIG_COMMON_CLK_AXI_CLKGEN is not set
+# CONFIG_COMMON_CLK_XGENE is not set
+# CONFIG_COMMON_CLK_FIXED_MMIO is not set
+# CONFIG_XILINX_VCU is not set
+# CONFIG_COMMON_CLK_XLNX_CLKWZRD is not set
+# CONFIG_HWSPINLOCK is not set
+
+#
+# Clock Source drivers
+#
+CONFIG_TIMER_OF=y
+CONFIG_TIMER_PROBE=y
+CONFIG_ARM_ARCH_TIMER=y
+CONFIG_ARM_ARCH_TIMER_EVTSTREAM=y
+CONFIG_ARM_ARCH_TIMER_OOL_WORKAROUND=y
+# CONFIG_FSL_ERRATUM_A008585 is not set
+# CONFIG_HISILICON_ERRATUM_161010101 is not set
+CONFIG_ARM64_ERRATUM_858921=y
+# end of Clock Source drivers
+
+# CONFIG_MAILBOX is not set
+# CONFIG_IOMMU_SUPPORT is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_REMOTEPROC is not set
+# end of Remoteproc drivers
+
+#
+# Rpmsg drivers
+#
+# CONFIG_RPMSG_VIRTIO is not set
+# end of Rpmsg drivers
+
+# CONFIG_SOUNDWIRE is not set
+
+#
+# SOC (System On Chip) specific Drivers
+#
+
+#
+# Amlogic SoC drivers
+#
+# end of Amlogic SoC drivers
+
+#
+# Broadcom SoC drivers
+#
+# end of Broadcom SoC drivers
+
+#
+# NXP/Freescale QorIQ SoC drivers
+#
+# CONFIG_QUICC_ENGINE is not set
+# end of NXP/Freescale QorIQ SoC drivers
+
+#
+# fujitsu SoC drivers
+#
+# end of fujitsu SoC drivers
+
+#
+# i.MX SoC drivers
+#
+# end of i.MX SoC drivers
+
+#
+# Enable LiteX SoC Builder specific drivers
+#
+# CONFIG_LITEX_SOC_CONTROLLER is not set
+# end of Enable LiteX SoC Builder specific drivers
+
+# CONFIG_WPCM450_SOC is not set
+
+#
+# Qualcomm SoC drivers
+#
+# end of Qualcomm SoC drivers
+
+# CONFIG_SOC_TI is not set
+
+#
+# Xilinx SoC drivers
+#
+# end of Xilinx SoC drivers
+# end of SOC (System On Chip) specific Drivers
+
+#
+# PM Domains
+#
+
+#
+# Amlogic PM Domains
+#
+# end of Amlogic PM Domains
+
+#
+# Broadcom PM Domains
+#
+# end of Broadcom PM Domains
+
+#
+# i.MX PM Domains
+#
+# end of i.MX PM Domains
+
+#
+# Qualcomm PM Domains
+#
+# end of Qualcomm PM Domains
+# end of PM Domains
+
+# CONFIG_PM_DEVFREQ is not set
+# CONFIG_EXTCON is not set
+# CONFIG_MEMORY is not set
+# CONFIG_IIO is not set
+# CONFIG_PWM is not set
+
+#
+# IRQ chip support
+#
+CONFIG_IRQCHIP=y
+CONFIG_ARM_GIC=y
+CONFIG_ARM_GIC_MAX_NR=1
+CONFIG_ARM_GIC_V3=y
+CONFIG_ARM_GIC_V3_ITS=y
+# CONFIG_AL_FIC is not set
+# CONFIG_XILINX_INTC is not set
+CONFIG_PARTITION_PERCPU=y
+# end of IRQ chip support
+
+# CONFIG_IPACK_BUS is not set
+# CONFIG_RESET_CONTROLLER is not set
+
+#
+# PHY Subsystem
+#
+# CONFIG_GENERIC_PHY is not set
+# CONFIG_PHY_CAN_TRANSCEIVER is not set
+
+#
+# PHY drivers for Broadcom platforms
+#
+# CONFIG_BCM_KONA_USB2_PHY is not set
+# end of PHY drivers for Broadcom platforms
+
+# CONFIG_PHY_CADENCE_TORRENT is not set
+# CONFIG_PHY_CADENCE_DPHY is not set
+# CONFIG_PHY_CADENCE_DPHY_RX is not set
+# CONFIG_PHY_CADENCE_SALVO is not set
+# CONFIG_PHY_PXA_28NM_HSIC is not set
+# CONFIG_PHY_PXA_28NM_USB2 is not set
+# CONFIG_PHY_LAN966X_SERDES is not set
+# CONFIG_PHY_OCELOT_SERDES is not set
+# end of PHY Subsystem
+
+# CONFIG_POWERCAP is not set
+# CONFIG_MCB is not set
+# CONFIG_RAS is not set
+
+#
+# Android
+#
+# CONFIG_ANDROID_BINDER_IPC is not set
+# end of Android
+
+# CONFIG_DAX is not set
+# CONFIG_NVMEM is not set
+
+#
+# HW tracing support
+#
+# CONFIG_STM is not set
+# CONFIG_INTEL_TH is not set
+# end of HW tracing support
+
+# CONFIG_FPGA is not set
+# CONFIG_FSI is not set
+CONFIG_TEE=y
+# CONFIG_OPTEE is not set
+CONFIG_MBEDTEE=y
+# CONFIG_SIOX is not set
+# CONFIG_SLIMBUS is not set
+# CONFIG_INTERCONNECT is not set
+# CONFIG_COUNTER is not set
+# CONFIG_PECI is not set
+# CONFIG_HTE is not set
+# CONFIG_CDX_BUS is not set
+# end of Device Drivers
+
+#
+# File systems
+#
+CONFIG_DCACHE_WORD_ACCESS=y
+CONFIG_VALIDATE_FS_PARSER=y
+CONFIG_EXPORTFS=y
+# CONFIG_EXPORTFS_BLOCK_OPS is not set
+CONFIG_FILE_LOCKING=y
+# CONFIG_FS_ENCRYPTION is not set
+# CONFIG_FS_VERITY is not set
+CONFIG_FSNOTIFY=y
+# CONFIG_DNOTIFY is not set
+CONFIG_INOTIFY_USER=y
+CONFIG_FANOTIFY=y
+# CONFIG_QUOTA is not set
+# CONFIG_AUTOFS_FS is not set
+# CONFIG_FUSE_FS is not set
+# CONFIG_OVERLAY_FS is not set
+
+#
+# Caches
+#
+# end of Caches
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+# CONFIG_PROC_KCORE is not set
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+# CONFIG_PROC_CHILDREN is not set
+CONFIG_KERNFS=y
+CONFIG_SYSFS=y
+CONFIG_ARCH_SUPPORTS_HUGETLBFS=y
+# CONFIG_HUGETLBFS is not set
+CONFIG_ARCH_HAS_GIGANTIC_PAGE=y
+# CONFIG_CONFIGFS_FS is not set
+# end of Pseudo filesystems
+
+# CONFIG_MISC_FILESYSTEMS is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
+# CONFIG_NLS_ISO8859_1 is not set
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+# CONFIG_NLS_UTF8 is not set
+# CONFIG_UNICODE is not set
+# end of File systems
+
+#
+# Security options
+#
+# CONFIG_KEYS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+# CONFIG_SECURITY is not set
+# CONFIG_SECURITYFS is not set
+# CONFIG_HARDENED_USERCOPY is not set
+# CONFIG_FORTIFY_SOURCE is not set
+# CONFIG_STATIC_USERMODEHELPER is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_LSM="yama,loadpin,safesetid,integrity,selinux,smack,tomoyo,apparmor"
+
+#
+# Kernel hardening options
+#
+
+#
+# Memory initialization
+#
+CONFIG_CC_HAS_AUTO_VAR_INIT_PATTERN=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO_BARE=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO=y
+CONFIG_INIT_STACK_NONE=y
+# CONFIG_INIT_STACK_ALL_PATTERN is not set
+# CONFIG_INIT_STACK_ALL_ZERO is not set
+# CONFIG_INIT_ON_ALLOC_DEFAULT_ON is not set
+# CONFIG_INIT_ON_FREE_DEFAULT_ON is not set
+CONFIG_CC_HAS_ZERO_CALL_USED_REGS=y
+# CONFIG_ZERO_CALL_USED_REGS is not set
+# end of Memory initialization
+
+#
+# Hardening of kernel data structures
+#
+# CONFIG_LIST_HARDENED is not set
+# CONFIG_BUG_ON_DATA_CORRUPTION is not set
+# end of Hardening of kernel data structures
+
+CONFIG_RANDSTRUCT_NONE=y
+# end of Kernel hardening options
+# end of Security options
+
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+# CONFIG_CRYPTO_MANAGER is not set
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+# CONFIG_CRYPTO_NULL is not set
+# CONFIG_CRYPTO_PCRYPT is not set
+# CONFIG_CRYPTO_CRYPTD is not set
+# CONFIG_CRYPTO_AUTHENC is not set
+# CONFIG_CRYPTO_TEST is not set
+# end of Crypto core or helper
+
+#
+# Public-key cryptography
+#
+# CONFIG_CRYPTO_RSA is not set
+# CONFIG_CRYPTO_DH is not set
+# CONFIG_CRYPTO_ECDH is not set
+# CONFIG_CRYPTO_ECDSA is not set
+# CONFIG_CRYPTO_ECRDSA is not set
+# CONFIG_CRYPTO_SM2 is not set
+# CONFIG_CRYPTO_CURVE25519 is not set
+# end of Public-key cryptography
+
+#
+# Block ciphers
+#
+# CONFIG_CRYPTO_AES is not set
+# CONFIG_CRYPTO_AES_TI is not set
+# CONFIG_CRYPTO_ARIA is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+# CONFIG_CRYPTO_DES is not set
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_SM4_GENERIC is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+# end of Block ciphers
+
+#
+# Length-preserving ciphers and modes
+#
+# CONFIG_CRYPTO_ADIANTUM is not set
+# CONFIG_CRYPTO_CHACHA20 is not set
+# CONFIG_CRYPTO_CBC is not set
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+# CONFIG_CRYPTO_ECB is not set
+# CONFIG_CRYPTO_HCTR2 is not set
+# CONFIG_CRYPTO_KEYWRAP is not set
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+# end of Length-preserving ciphers and modes
+
+#
+# AEAD (authenticated encryption with associated data) ciphers
+#
+# CONFIG_CRYPTO_AEGIS128 is not set
+# CONFIG_CRYPTO_CHACHA20POLY1305 is not set
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+# CONFIG_CRYPTO_ECHAINIV is not set
+# CONFIG_CRYPTO_ESSIV is not set
+# end of AEAD (authenticated encryption with associated data) ciphers
+
+#
+# Hashes, digests, and MACs
+#
+# CONFIG_CRYPTO_BLAKE2B is not set
+# CONFIG_CRYPTO_CMAC is not set
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_HMAC is not set
+# CONFIG_CRYPTO_MD4 is not set
+# CONFIG_CRYPTO_MD5 is not set
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_POLY1305 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+CONFIG_CRYPTO_SHA1=y
+# CONFIG_CRYPTO_SHA256 is not set
+# CONFIG_CRYPTO_SHA512 is not set
+# CONFIG_CRYPTO_SHA3 is not set
+# CONFIG_CRYPTO_SM3_GENERIC is not set
+# CONFIG_CRYPTO_STREEBOG is not set
+# CONFIG_CRYPTO_VMAC is not set
+# CONFIG_CRYPTO_WP512 is not set
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_XXHASH is not set
+# end of Hashes, digests, and MACs
+
+#
+# CRCs (cyclic redundancy checks)
+#
+# CONFIG_CRYPTO_CRC32C is not set
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_CRCT10DIF is not set
+# end of CRCs (cyclic redundancy checks)
+
+#
+# Compression
+#
+# CONFIG_CRYPTO_DEFLATE is not set
+# CONFIG_CRYPTO_LZO is not set
+# CONFIG_CRYPTO_842 is not set
+# CONFIG_CRYPTO_LZ4 is not set
+# CONFIG_CRYPTO_LZ4HC is not set
+# CONFIG_CRYPTO_ZSTD is not set
+# end of Compression
+
+#
+# Random number generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+# CONFIG_CRYPTO_DRBG_MENU is not set
+# CONFIG_CRYPTO_JITTERENTROPY is not set
+# end of Random number generation
+
+#
+# Userspace interface
+#
+# end of Userspace interface
+
+# CONFIG_CRYPTO_NHPOLY1305_NEON is not set
+# CONFIG_CRYPTO_CHACHA20_NEON is not set
+
+#
+# Accelerated Cryptographic Algorithms for CPU (arm64)
+#
+# CONFIG_CRYPTO_GHASH_ARM64_CE is not set
+# CONFIG_CRYPTO_POLY1305_NEON is not set
+# CONFIG_CRYPTO_SHA1_ARM64_CE is not set
+# CONFIG_CRYPTO_SHA256_ARM64 is not set
+# CONFIG_CRYPTO_SHA2_ARM64_CE is not set
+# CONFIG_CRYPTO_SHA512_ARM64 is not set
+# CONFIG_CRYPTO_SHA512_ARM64_CE is not set
+# CONFIG_CRYPTO_SHA3_ARM64 is not set
+# CONFIG_CRYPTO_SM3_NEON is not set
+# CONFIG_CRYPTO_SM3_ARM64_CE is not set
+# CONFIG_CRYPTO_POLYVAL_ARM64_CE is not set
+# CONFIG_CRYPTO_AES_ARM64 is not set
+# CONFIG_CRYPTO_AES_ARM64_CE is not set
+# CONFIG_CRYPTO_AES_ARM64_CE_BLK is not set
+# CONFIG_CRYPTO_AES_ARM64_NEON_BLK is not set
+# CONFIG_CRYPTO_AES_ARM64_BS is not set
+# CONFIG_CRYPTO_SM4_ARM64_CE is not set
+# CONFIG_CRYPTO_SM4_ARM64_CE_BLK is not set
+# CONFIG_CRYPTO_SM4_ARM64_NEON_BLK is not set
+# CONFIG_CRYPTO_AES_ARM64_CE_CCM is not set
+# CONFIG_CRYPTO_SM4_ARM64_CE_CCM is not set
+# CONFIG_CRYPTO_SM4_ARM64_CE_GCM is not set
+# end of Accelerated Cryptographic Algorithms for CPU (arm64)
+
+CONFIG_CRYPTO_HW=y
+# CONFIG_CRYPTO_DEV_CCP is not set
+# CONFIG_CRYPTO_DEV_SAFEXCEL is not set
+# CONFIG_CRYPTO_DEV_CCREE is not set
+# CONFIG_CRYPTO_DEV_HISI_SEC is not set
+# CONFIG_CRYPTO_DEV_AMLOGIC_GXL is not set
+
+#
+# Certificates for signature checking
+#
+# end of Certificates for signature checking
+
+#
+# Library routines
+#
+# CONFIG_PACKING is not set
+CONFIG_BITREVERSE=y
+CONFIG_HAVE_ARCH_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+# CONFIG_CORDIC is not set
+# CONFIG_PRIME_NUMBERS is not set
+CONFIG_RATIONAL=y
+CONFIG_ARCH_USE_CMPXCHG_LOCKREF=y
+CONFIG_ARCH_HAS_FAST_MULTIPLIER=y
+CONFIG_ARCH_USE_SYM_ANNOTATIONS=y
+# CONFIG_INDIRECT_PIO is not set
+
+#
+# Crypto library routines
+#
+CONFIG_CRYPTO_LIB_UTILS=y
+CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
+# CONFIG_CRYPTO_LIB_CHACHA is not set
+# CONFIG_CRYPTO_LIB_CURVE25519 is not set
+CONFIG_CRYPTO_LIB_POLY1305_RSIZE=9
+# CONFIG_CRYPTO_LIB_POLY1305 is not set
+# CONFIG_CRYPTO_LIB_CHACHA20POLY1305 is not set
+CONFIG_CRYPTO_LIB_SHA1=y
+# end of Crypto library routines
+
+# CONFIG_CRC_CCITT is not set
+# CONFIG_CRC16 is not set
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC64_ROCKSOFT is not set
+# CONFIG_CRC_ITU_T is not set
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC64 is not set
+# CONFIG_CRC4 is not set
+# CONFIG_CRC7 is not set
+# CONFIG_LIBCRC32C is not set
+# CONFIG_CRC8 is not set
+CONFIG_AUDIT_ARCH_COMPAT_GENERIC=y
+# CONFIG_RANDOM32_SELFTEST is not set
+CONFIG_ZLIB_INFLATE=y
+# CONFIG_XZ_DEC is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_NEED_SG_DMA_LENGTH=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_ARCH_DMA_ADDR_T_64BIT=y
+CONFIG_DMA_DECLARE_COHERENT=y
+CONFIG_ARCH_HAS_SETUP_DMA_OPS=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_DEVICE=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_CPU=y
+CONFIG_ARCH_HAS_DMA_PREP_COHERENT=y
+CONFIG_SWIOTLB=y
+# CONFIG_SWIOTLB_DYNAMIC is not set
+CONFIG_DMA_BOUNCE_UNALIGNED_KMALLOC=y
+# CONFIG_DMA_RESTRICTED_POOL is not set
+CONFIG_DMA_NONCOHERENT_MMAP=y
+CONFIG_DMA_COHERENT_POOL=y
+CONFIG_DMA_DIRECT_REMAP=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_DMA_MAP_BENCHMARK is not set
+# CONFIG_FORCE_NR_CPUS is not set
+CONFIG_GLOB=y
+# CONFIG_GLOB_SELFTEST is not set
+# CONFIG_IRQ_POLL is not set
+CONFIG_LIBFDT=y
+CONFIG_HAVE_GENERIC_VDSO=y
+CONFIG_GENERIC_GETTIMEOFDAY=y
+CONFIG_GENERIC_VDSO_TIME_NS=y
+CONFIG_ARCH_STACKWALK=y
+CONFIG_STACKDEPOT=y
+CONFIG_STACKDEPOT_MAX_FRAMES=64
+# CONFIG_LWQ_TEST is not set
+# end of Library routines
+
+CONFIG_GENERIC_IOREMAP=y
+CONFIG_GENERIC_LIB_DEVMEM_IS_ALLOWED=y
+
+#
+# Kernel hacking
+#
+
+#
+# printk and dmesg options
+#
+CONFIG_PRINTK_TIME=y
+# CONFIG_PRINTK_CALLER is not set
+# CONFIG_STACKTRACE_BUILD_ID is not set
+CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7
+CONFIG_CONSOLE_LOGLEVEL_QUIET=4
+CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_DYNAMIC_DEBUG_CORE is not set
+CONFIG_SYMBOLIC_ERRNAME=y
+# end of printk and dmesg options
+
+CONFIG_DEBUG_KERNEL=y
+# CONFIG_DEBUG_MISC is not set
+
+#
+# Compile-time checks and compiler options
+#
+CONFIG_AS_HAS_NON_CONST_ULEB128=y
+CONFIG_DEBUG_INFO_NONE=y
+# CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set
+# CONFIG_DEBUG_INFO_DWARF4 is not set
+# CONFIG_DEBUG_INFO_DWARF5 is not set
+CONFIG_FRAME_WARN=1024
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_HEADERS_INSTALL is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_SECTION_MISMATCH_WARN_ONLY=y
+# CONFIG_DEBUG_FORCE_FUNCTION_ALIGN_64B is not set
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+CONFIG_FRAME_POINTER=y
+# CONFIG_VMLINUX_MAP is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# end of Compile-time checks and compiler options
+
+#
+# Generic Kernel Debugging Instruments
+#
+# CONFIG_MAGIC_SYSRQ is not set
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_FS_ALLOW_ALL=y
+# CONFIG_DEBUG_FS_DISALLOW_MOUNT is not set
+# CONFIG_DEBUG_FS_ALLOW_NONE is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_KGDB is not set
+CONFIG_ARCH_HAS_UBSAN=y
+# CONFIG_UBSAN is not set
+CONFIG_HAVE_ARCH_KCSAN=y
+CONFIG_HAVE_KCSAN_COMPILER=y
+# CONFIG_KCSAN is not set
+# end of Generic Kernel Debugging Instruments
+
+#
+# Networking Debugging
+#
+# end of Networking Debugging
+
+#
+# Memory Debugging
+#
+# CONFIG_PAGE_EXTENSION is not set
+# CONFIG_DEBUG_PAGEALLOC is not set
+CONFIG_SLUB_DEBUG=y
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_PAGE_OWNER is not set
+# CONFIG_PAGE_POISONING is not set
+# CONFIG_DEBUG_RODATA_TEST is not set
+CONFIG_ARCH_HAS_DEBUG_WX=y
+# CONFIG_DEBUG_WX is not set
+CONFIG_GENERIC_PTDUMP=y
+# CONFIG_PTDUMP_DEBUGFS is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_PER_VMA_LOCK_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SHRINKER_DEBUG is not set
+# CONFIG_DEBUG_STACK_USAGE is not set
+# CONFIG_SCHED_STACK_END_CHECK is not set
+CONFIG_ARCH_HAS_DEBUG_VM_PGTABLE=y
+# CONFIG_DEBUG_VM is not set
+# CONFIG_DEBUG_VM_PGTABLE is not set
+CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y
+# CONFIG_DEBUG_VIRTUAL is not set
+# CONFIG_DEBUG_MEMORY_INIT is not set
+# CONFIG_DEBUG_PER_CPU_MAPS is not set
+CONFIG_HAVE_ARCH_KASAN=y
+CONFIG_HAVE_ARCH_KASAN_SW_TAGS=y
+CONFIG_HAVE_ARCH_KASAN_HW_TAGS=y
+CONFIG_HAVE_ARCH_KASAN_VMALLOC=y
+CONFIG_CC_HAS_KASAN_GENERIC=y
+CONFIG_CC_HAS_KASAN_SW_TAGS=y
+CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y
+# CONFIG_KASAN is not set
+CONFIG_HAVE_ARCH_KFENCE=y
+# CONFIG_KFENCE is not set
+# end of Memory Debugging
+
+# CONFIG_DEBUG_SHIRQ is not set
+
+#
+# Debug Oops, Lockups and Hangs
+#
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+CONFIG_PANIC_TIMEOUT=0
+# CONFIG_SOFTLOCKUP_DETECTOR is not set
+CONFIG_HAVE_HARDLOCKUP_DETECTOR_BUDDY=y
+# CONFIG_HARDLOCKUP_DETECTOR is not set
+# CONFIG_DETECT_HUNG_TASK is not set
+# CONFIG_WQ_WATCHDOG is not set
+# CONFIG_WQ_CPU_INTENSIVE_REPORT is not set
+# end of Debug Oops, Lockups and Hangs
+
+#
+# Scheduler Debugging
+#
+# CONFIG_SCHED_DEBUG is not set
+# CONFIG_SCHEDSTATS is not set
+# end of Scheduler Debugging
+
+# CONFIG_DEBUG_TIMEKEEPING is not set
+# CONFIG_DEBUG_PREEMPT is not set
+
+#
+# Lock Debugging (spinlocks, mutexes, etc...)
+#
+CONFIG_LOCK_DEBUGGING_SUPPORT=y
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+# CONFIG_DEBUG_RT_MUTEXES is not set
+# CONFIG_DEBUG_SPINLOCK is not set
+# CONFIG_DEBUG_MUTEXES is not set
+# CONFIG_DEBUG_WW_MUTEX_SLOWPATH is not set
+# CONFIG_DEBUG_RWSEMS is not set
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+# CONFIG_DEBUG_ATOMIC_SLEEP is not set
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+# CONFIG_LOCK_TORTURE_TEST is not set
+# CONFIG_WW_MUTEX_SELFTEST is not set
+# CONFIG_SCF_TORTURE_TEST is not set
+# CONFIG_CSD_LOCK_WAIT_DEBUG is not set
+# end of Lock Debugging (spinlocks, mutexes, etc...)
+
+# CONFIG_DEBUG_IRQFLAGS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_WARN_ALL_UNSEEDED_RANDOM is not set
+# CONFIG_DEBUG_KOBJECT is not set
+
+#
+# Debug kernel data structures
+#
+# CONFIG_DEBUG_LIST is not set
+# CONFIG_DEBUG_PLIST is not set
+# CONFIG_DEBUG_SG is not set
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_MAPLE_TREE is not set
+# end of Debug kernel data structures
+
+#
+# RCU Debugging
+#
+# CONFIG_RCU_SCALE_TEST is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+# CONFIG_RCU_REF_SCALE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=21
+CONFIG_RCU_EXP_CPU_STALL_TIMEOUT=0
+# CONFIG_RCU_CPU_STALL_CPUTIME is not set
+# CONFIG_RCU_TRACE is not set
+# CONFIG_RCU_EQS_DEBUG is not set
+# end of RCU Debugging
+
+# CONFIG_DEBUG_WQ_FORCE_RR_CPU is not set
+# CONFIG_CPU_HOTPLUG_STATE_CONTROL is not set
+# CONFIG_LATENCYTOP is not set
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_RETVAL=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_ARGS=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_HAVE_C_RECORDMCOUNT=y
+CONFIG_TRACING_SUPPORT=y
+# CONFIG_FTRACE is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_SAMPLE_FTRACE_DIRECT=y
+CONFIG_HAVE_SAMPLE_FTRACE_DIRECT_MULTI=y
+# CONFIG_STRICT_DEVMEM is not set
+
+#
+# arm64 Debugging
+#
+# CONFIG_PID_IN_CONTEXTIDR is not set
+# CONFIG_CORESIGHT is not set
+# end of arm64 Debugging
+
+#
+# Kernel Testing and Coverage
+#
+# CONFIG_KUNIT is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+CONFIG_ARCH_HAS_KCOV=y
+CONFIG_CC_HAS_SANCOV_TRACE_PC=y
+# CONFIG_KCOV is not set
+# CONFIG_RUNTIME_TESTING_MENU is not set
+CONFIG_ARCH_USE_MEMTEST=y
+# CONFIG_MEMTEST is not set
+# end of Kernel Testing and Coverage
+
+#
+# Rust hacking
+#
+# end of Rust hacking
+# end of Kernel hacking
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/common.mk buildroot/tee/linux/common.mk
--- buildroot-ori/tee/linux/common.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/common.mk	2025-05-31 23:12:46.404386055 +0800
@@ -0,0 +1 @@
+include $(sort $(wildcard tee/linux/*/*.mk))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/Config.in buildroot/tee/linux/Config.in
--- buildroot-ori/tee/linux/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/Config.in	2025-05-31 23:12:46.404386055 +0800
@@ -0,0 +1 @@
+source "tee/linux/mbedtee-linux-dts/Config.in"
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/mbedtee-linux-dts/Config.in buildroot/tee/linux/mbedtee-linux-dts/Config.in
--- buildroot-ori/tee/linux/mbedtee-linux-dts/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/mbedtee-linux-dts/Config.in	2025-05-31 23:12:46.404386055 +0800
@@ -0,0 +1,5 @@
+config BR2_PACKAGE_MBEDTEE_LINUX_DTS
+	bool "DTS for REE Linux which runs alongside MbedTEE"
+	depends on BR2_LINUX_KERNEL
+	help
+	  DTS for REE Linux which runs alongside MbedTEE
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/mbedtee-linux-dts/mbedtee-linux-dts.mk buildroot/tee/linux/mbedtee-linux-dts/mbedtee-linux-dts.mk
--- buildroot-ori/tee/linux/mbedtee-linux-dts/mbedtee-linux-dts.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/mbedtee-linux-dts/mbedtee-linux-dts.mk	2025-05-31 23:12:46.404386055 +0800
@@ -0,0 +1,30 @@
+################################################################################
+#
+# DTS for Linux which runs alongside the MbedTEE
+#
+################################################################################
+
+MBEDTEE_LINUX_DTS_VERSION = main
+MBEDTEE_LINUX_DTS_SITE_METHOD = git
+MBEDTEE_LINUX_DTS_SITE = https://github.com/mbedtee/mbedtee-linux-dts.git
+MBEDTEE_LINUX_DTS_SOURCE = mbedtee-linux-dts-$(MBEDTEE_LINUX_DTS_VERSION).tar.gz
+MBEDTEE_LINUX_DTS_RELEASE_NAME = mbedtee-linux-dts-$(MBEDTEE_LINUX_DTS_VERSION).tar.gz
+
+MBEDTEE_LINUX_DTS_INSTALL_IMAGES = YES
+
+MBEDTEE_LINUX_DTS_DEPENDENCIES = host-dtc
+
+MBEDTEE_LINUX_DTS_PLATFORM = $(subst ",,$(BR2_PLATFORM_NAME))
+
+MBEDTEE_LINUX_DTS_MAKE_FLAGS = PLATFORM=$(MBEDTEE_LINUX_DTS_PLATFORM)
+MBEDTEE_LINUX_DTS_MAKE_FLAGS += DTC=$(HOST_DIR)/usr/bin/dtc
+
+define MBEDTEE_LINUX_DTS_BUILD_CMDS
+	$(MAKE) $(MBEDTEE_LINUX_DTS_MAKE_FLAGS) -C $(@D)
+endef
+
+define MBEDTEE_LINUX_DTS_INSTALL_IMAGES_CMDS
+	$(INSTALL) -D -m 0777 $(@D)/dtb/$(MBEDTEE_LINUX_DTS_PLATFORM).dtb $(BINARIES_DIR)/linux.dtb
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/riscv32_qemu_virt_linux_config buildroot/tee/linux/riscv32_qemu_virt_linux_config
--- buildroot-ori/tee/linux/riscv32_qemu_virt_linux_config	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/riscv32_qemu_virt_linux_config	2025-05-31 23:12:46.407387555 +0800
@@ -0,0 +1,4024 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/riscv 6.9.10 Kernel Configuration
+#
+CONFIG_CC_VERSION_TEXT="riscv32-linux-gcc.br_real (Buildroot 2021.11-11272-ge2962af) 13.2.0"
+CONFIG_CC_IS_GCC=y
+CONFIG_GCC_VERSION=130200
+CONFIG_CLANG_VERSION=0
+CONFIG_AS_IS_GNU=y
+CONFIG_AS_VERSION=24200
+CONFIG_LD_IS_BFD=y
+CONFIG_LD_VERSION=24200
+CONFIG_LLD_VERSION=0
+CONFIG_CC_CAN_LINK=y
+CONFIG_CC_CAN_LINK_STATIC=y
+CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
+CONFIG_CC_HAS_ASM_GOTO_TIED_OUTPUT=y
+CONFIG_GCC_ASM_GOTO_OUTPUT_WORKAROUND=y
+CONFIG_CC_HAS_ASM_INLINE=y
+CONFIG_CC_HAS_NO_PROFILE_FN_ATTR=y
+CONFIG_PAHOLE_VERSION=0
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_TABLE_SORT=y
+CONFIG_THREAD_INFO_IN_TASK=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_COMPILE_TEST=y
+# CONFIG_WERROR is not set
+CONFIG_LOCALVERSION=""
+CONFIG_BUILD_SALT=""
+CONFIG_DEFAULT_INIT=""
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_WATCH_QUEUE is not set
+CONFIG_CROSS_MEMORY_ATTACH=y
+# CONFIG_USELIB is not set
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_IRQ_SHOW_LEVEL=y
+CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK=y
+CONFIG_GENERIC_IRQ_MIGRATION=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+CONFIG_IRQ_DOMAIN_HIERARCHY=y
+CONFIG_GENERIC_IRQ_IPI=y
+CONFIG_GENERIC_IRQ_IPI_MUX=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+# CONFIG_GENERIC_IRQ_DEBUGFS is not set
+# end of IRQ subsystem
+
+CONFIG_GENERIC_IRQ_MULTI_HANDLER=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_HAVE_POSIX_CPU_TIMERS_TASK_WORK=y
+CONFIG_POSIX_CPU_TIMERS_TASK_WORK=y
+CONFIG_CONTEXT_TRACKING=y
+CONFIG_CONTEXT_TRACKING_IDLE=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+CONFIG_NO_HZ_IDLE=y
+# CONFIG_NO_HZ is not set
+CONFIG_HIGH_RES_TIMERS=y
+# end of Timers subsystem
+
+CONFIG_BPF=y
+CONFIG_HAVE_EBPF_JIT=y
+
+#
+# BPF subsystem
+#
+CONFIG_BPF_SYSCALL=y
+CONFIG_BPF_UNPRIV_DEFAULT_OFF=y
+# end of BPF subsystem
+
+CONFIG_PREEMPT_NONE_BUILD=y
+CONFIG_PREEMPT_NONE=y
+# CONFIG_PREEMPT_VOLUNTARY is not set
+# CONFIG_PREEMPT is not set
+CONFIG_PREEMPT_COUNT=y
+# CONFIG_PREEMPT_DYNAMIC is not set
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_TICK_CPU_ACCOUNTING=y
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_PSI is not set
+# end of CPU/Task time and stats accounting
+
+CONFIG_CPU_ISOLATION=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+# CONFIG_RCU_EXPERT is not set
+CONFIG_TREE_SRCU=y
+CONFIG_TASKS_RCU_GENERIC=y
+CONFIG_TASKS_TRACE_RCU=y
+CONFIG_RCU_STALL_COMMON=y
+CONFIG_RCU_NEED_SEGCBLIST=y
+# end of RCU Subsystem
+
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+# CONFIG_IKHEADERS is not set
+CONFIG_LOG_BUF_SHIFT=17
+CONFIG_LOG_CPU_MAX_BUF_SHIFT=12
+# CONFIG_PRINTK_INDEX is not set
+CONFIG_GENERIC_SCHED_CLOCK=y
+
+#
+# Scheduler features
+#
+# end of Scheduler features
+
+CONFIG_ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH=y
+CONFIG_CC_IMPLICIT_FALLTHROUGH="-Wimplicit-fallthrough=5"
+CONFIG_GCC10_NO_ARRAY_BOUNDS=y
+CONFIG_CC_NO_ARRAY_BOUNDS=y
+CONFIG_GCC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CGROUPS=y
+CONFIG_PAGE_COUNTER=y
+# CONFIG_CGROUP_FAVOR_DYNMODS is not set
+CONFIG_MEMCG=y
+CONFIG_MEMCG_KMEM=y
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+CONFIG_CFS_BANDWIDTH=y
+CONFIG_RT_GROUP_SCHED=y
+CONFIG_SCHED_MM_CID=y
+CONFIG_CGROUP_PIDS=y
+# CONFIG_CGROUP_RDMA is not set
+CONFIG_CGROUP_FREEZER=y
+CONFIG_CGROUP_HUGETLB=y
+CONFIG_CPUSETS=y
+CONFIG_PROC_PID_CPUSET=y
+CONFIG_CGROUP_DEVICE=y
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_CGROUP_PERF=y
+CONFIG_CGROUP_BPF=y
+# CONFIG_CGROUP_MISC is not set
+# CONFIG_CGROUP_DEBUG is not set
+CONFIG_SOCK_CGROUP_DATA=y
+CONFIG_NAMESPACES=y
+CONFIG_UTS_NS=y
+CONFIG_IPC_NS=y
+CONFIG_USER_NS=y
+CONFIG_PID_NS=y
+CONFIG_CHECKPOINT_RESTORE=y
+# CONFIG_SCHED_AUTOGROUP is not set
+# CONFIG_RELAY is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE="${BR_BINARIES_DIR}/rootfs.cpio"
+CONFIG_INITRAMFS_ROOT_UID=0
+CONFIG_INITRAMFS_ROOT_GID=0
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+# CONFIG_RD_LZ4 is not set
+# CONFIG_RD_ZSTD is not set
+CONFIG_INITRAMFS_COMPRESSION_GZIP=y
+# CONFIG_INITRAMFS_COMPRESSION_NONE is not set
+# CONFIG_BOOT_CONFIG is not set
+CONFIG_INITRAMFS_PRESERVE_MTIME=y
+CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_HAVE_LD_DEAD_CODE_DATA_ELIMINATION=y
+# CONFIG_LD_DEAD_CODE_DATA_ELIMINATION is not set
+CONFIG_LD_ORPHAN_WARN=y
+CONFIG_LD_ORPHAN_WARN_LEVEL="warn"
+CONFIG_SYSCTL=y
+CONFIG_SYSCTL_EXCEPTION_TRACE=y
+CONFIG_SYSCTL_ARCH_UNALIGN_ALLOW=y
+CONFIG_EXPERT=y
+CONFIG_MULTIUSER=y
+# CONFIG_SGETMASK_SYSCALL is not set
+# CONFIG_SYSFS_SYSCALL is not set
+CONFIG_FHANDLE=y
+CONFIG_POSIX_TIMERS=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_FUTEX_PI=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_AIO=y
+CONFIG_IO_URING=y
+CONFIG_ADVISE_SYSCALLS=y
+CONFIG_MEMBARRIER=y
+CONFIG_KCMP=y
+CONFIG_RSEQ=y
+# CONFIG_DEBUG_RSEQ is not set
+CONFIG_CACHESTAT_SYSCALL=y
+# CONFIG_PC104 is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_SELFTEST is not set
+# CONFIG_KALLSYMS_ALL is not set
+CONFIG_KALLSYMS_BASE_RELATIVE=y
+CONFIG_ARCH_HAS_MEMBARRIER_CALLBACKS=y
+CONFIG_ARCH_HAS_MEMBARRIER_SYNC_CORE=y
+CONFIG_HAVE_PERF_EVENTS=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
+# end of Kernel Performance Events And Counters
+
+CONFIG_PROFILING=y
+
+#
+# Kexec and crash features
+#
+# CONFIG_KEXEC is not set
+# end of Kexec and crash features
+# end of General setup
+
+CONFIG_32BIT=y
+CONFIG_RISCV=y
+CONFIG_GCC_SUPPORTS_DYNAMIC_FTRACE=y
+CONFIG_RISCV_USE_LINKER_RELAXATION=y
+CONFIG_ARCH_MMAP_RND_BITS_MIN=8
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MIN=8
+CONFIG_ARCH_MMAP_RND_BITS_MAX=17
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MAX=17
+CONFIG_RISCV_SBI=y
+CONFIG_MMU=y
+CONFIG_PAGE_OFFSET=0xC0000000
+CONFIG_ARCH_FLATMEM_ENABLE=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_ARCH_SELECT_MEMORY_MODEL=y
+CONFIG_ARCH_SUPPORTS_UPROBES=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_GENERIC_BUG=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_GENERIC_CSUM=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_PGTABLE_LEVELS=2
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_RISCV_DMA_NONCOHERENT=y
+CONFIG_AS_HAS_INSN=y
+CONFIG_AS_HAS_OPTION_ARCH=y
+
+#
+# SoC selection
+#
+# CONFIG_SOC_MICROCHIP_POLARFIRE is not set
+# CONFIG_ARCH_RENESAS is not set
+CONFIG_ARCH_SIFIVE=y
+CONFIG_SOC_SIFIVE=y
+# CONFIG_ARCH_SOPHGO is not set
+# CONFIG_SOC_STARFIVE is not set
+# CONFIG_ARCH_SUNXI is not set
+# CONFIG_ARCH_THEAD is not set
+CONFIG_ARCH_VIRT=y
+CONFIG_SOC_VIRT=y
+# end of SoC selection
+
+#
+# CPU errata selection
+#
+# CONFIG_ERRATA_ANDES is not set
+CONFIG_ERRATA_SIFIVE=y
+# CONFIG_ERRATA_THEAD is not set
+# end of CPU errata selection
+
+#
+# Platform type
+#
+CONFIG_NONPORTABLE=y
+CONFIG_ARCH_RV32I=y
+# CONFIG_ARCH_RV64I is not set
+# CONFIG_CMODEL_MEDLOW is not set
+CONFIG_CMODEL_MEDANY=y
+CONFIG_SMP=y
+# CONFIG_SCHED_MC is not set
+CONFIG_NR_CPUS=64
+CONFIG_HOTPLUG_CPU=y
+CONFIG_TUNE_GENERIC=y
+# CONFIG_NUMA is not set
+CONFIG_RISCV_ALTERNATIVE=y
+CONFIG_RISCV_ISA_C=y
+CONFIG_TOOLCHAIN_HAS_V=y
+CONFIG_RISCV_ISA_V=y
+CONFIG_RISCV_ISA_V_DEFAULT_ENABLE=y
+CONFIG_RISCV_ISA_V_UCOPY_THRESHOLD=768
+CONFIG_TOOLCHAIN_HAS_ZBB=y
+CONFIG_TOOLCHAIN_HAS_VECTOR_CRYPTO=y
+CONFIG_RISCV_ISA_ZBB=y
+CONFIG_RISCV_ISA_ZICBOM=y
+CONFIG_RISCV_ISA_ZICBOZ=y
+CONFIG_TOOLCHAIN_HAS_ZIHINTPAUSE=y
+CONFIG_TOOLCHAIN_NEEDS_EXPLICIT_ZICSR_ZIFENCEI=y
+CONFIG_FPU=y
+CONFIG_IRQ_STACKS=y
+CONFIG_THREAD_SIZE_ORDER=1
+CONFIG_RISCV_MISALIGNED=y
+CONFIG_RISCV_PROBE_UNALIGNED_ACCESS=y
+# CONFIG_RISCV_EMULATED_UNALIGNED_ACCESS is not set
+# CONFIG_RISCV_SLOW_UNALIGNED_ACCESS is not set
+# CONFIG_RISCV_EFFICIENT_UNALIGNED_ACCESS is not set
+# end of Platform type
+
+#
+# Kernel features
+#
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_SCHED_HRTICK=y
+# CONFIG_RISCV_SBI_V01 is not set
+# CONFIG_RISCV_BOOT_SPINWAIT is not set
+CONFIG_ARCH_SUPPORTS_KEXEC=y
+CONFIG_ARCH_SUPPORTS_CRASH_DUMP=y
+# CONFIG_PARAVIRT is not set
+# end of Kernel features
+
+#
+# Boot options
+#
+CONFIG_CMDLINE=""
+CONFIG_EFI_STUB=y
+CONFIG_EFI=y
+CONFIG_CC_HAVE_STACKPROTECTOR_TLS=y
+CONFIG_STACKPROTECTOR_PER_TASK=y
+# CONFIG_PHYS_RAM_BASE_FIXED is not set
+CONFIG_RISCV_ISA_FALLBACK=y
+# CONFIG_BUILTIN_DTB is not set
+# end of Boot options
+
+CONFIG_ARCH_PROC_KCORE_TEXT=y
+
+#
+# Power management options
+#
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+# CONFIG_SUSPEND_SKIP_SYNC is not set
+CONFIG_PM_SLEEP=y
+CONFIG_PM_SLEEP_SMP=y
+# CONFIG_PM_AUTOSLEEP is not set
+# CONFIG_PM_USERSPACE_AUTOSLEEP is not set
+# CONFIG_PM_WAKELOCKS is not set
+CONFIG_PM=y
+# CONFIG_PM_DEBUG is not set
+CONFIG_PM_CLK=y
+CONFIG_PM_GENERIC_DOMAINS=y
+# CONFIG_WQ_POWER_EFFICIENT_DEFAULT is not set
+CONFIG_PM_GENERIC_DOMAINS_SLEEP=y
+CONFIG_PM_GENERIC_DOMAINS_OF=y
+CONFIG_CPU_PM=y
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+# end of Power management options
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Idle
+#
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_MULTIPLE_DRIVERS=y
+# CONFIG_CPU_IDLE_GOV_LADDER is not set
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_CPU_IDLE_GOV_TEO is not set
+CONFIG_DT_IDLE_STATES=y
+CONFIG_DT_IDLE_GENPD=y
+
+#
+# RISC-V CPU Idle Drivers
+#
+CONFIG_RISCV_SBI_CPUIDLE=y
+# end of RISC-V CPU Idle Drivers
+# end of CPU Idle
+
+#
+# CPU Frequency scaling
+#
+# CONFIG_CPU_FREQ is not set
+# end of CPU Frequency scaling
+# end of CPU Power Management
+
+# CONFIG_VIRTUALIZATION is not set
+CONFIG_CPU_MITIGATIONS=y
+
+#
+# General architecture-dependent options
+#
+CONFIG_HOTPLUG_CORE_SYNC=y
+CONFIG_HOTPLUG_CORE_SYNC_DEAD=y
+CONFIG_GENERIC_ENTRY=y
+CONFIG_JUMP_LABEL=y
+# CONFIG_STATIC_KEYS_SELFTEST is not set
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_KPROBES_ON_FTRACE=y
+CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_ARCH_HAS_FORTIFY_SOURCE=y
+CONFIG_ARCH_HAS_SET_MEMORY=y
+CONFIG_ARCH_HAS_SET_DIRECT_MAP=y
+CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y
+CONFIG_ARCH_WANTS_NO_INSTR=y
+CONFIG_HAVE_ASM_MODVERSIONS=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_RSEQ=y
+CONFIG_HAVE_FUNCTION_ARG_ACCESS_API=y
+CONFIG_HAVE_PERF_REGS=y
+CONFIG_HAVE_PERF_USER_STACK_DUMP=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_HAVE_ARCH_JUMP_LABEL_RELATIVE=y
+CONFIG_MMU_GATHER_TABLE_FREE=y
+CONFIG_MMU_GATHER_RCU_TABLE_FREE=y
+CONFIG_MMU_LAZY_TLB_REFCOUNT=y
+CONFIG_HAVE_ARCH_SECCOMP=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+CONFIG_SECCOMP=y
+CONFIG_HAVE_STACKPROTECTOR=y
+CONFIG_STACKPROTECTOR=y
+CONFIG_STACKPROTECTOR_STRONG=y
+CONFIG_LTO_NONE=y
+CONFIG_ARCH_SUPPORTS_CFI_CLANG=y
+CONFIG_HAVE_CONTEXT_TRACKING_USER=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOVE_PUD=y
+CONFIG_HAVE_MOVE_PMD=y
+CONFIG_HAVE_IRQ_EXIT_ON_IRQ_STACK=y
+CONFIG_HAVE_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_ARCH_HAS_ELF_RANDOMIZE=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_ARCH_MMAP_RND_BITS=8
+CONFIG_HAVE_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_64KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_256KB=y
+CONFIG_PAGE_SHIFT=12
+CONFIG_ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT=y
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_COMPAT_32BIT_TIME=y
+CONFIG_HAVE_ARCH_RANDOMIZE_KSTACK_OFFSET=y
+CONFIG_RANDOMIZE_KSTACK_OFFSET=y
+# CONFIG_RANDOMIZE_KSTACK_OFFSET_DEFAULT is not set
+CONFIG_ARCH_OPTIONAL_KERNEL_RWX=y
+CONFIG_ARCH_OPTIONAL_KERNEL_RWX_DEFAULT=y
+CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y
+CONFIG_STRICT_KERNEL_RWX=y
+CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y
+CONFIG_ARCH_USE_MEMREMAP_PROT=y
+# CONFIG_LOCK_EVENT_COUNTS is not set
+CONFIG_ARCH_HAS_VDSO_DATA=y
+CONFIG_HAVE_PREEMPT_DYNAMIC=y
+CONFIG_HAVE_PREEMPT_DYNAMIC_KEY=y
+CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y
+CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
+CONFIG_ARCH_SUPPORTS_PAGE_TABLE_CHECK=y
+CONFIG_DYNAMIC_SIGFRAME=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y
+# end of GCOV-based kernel profiling
+
+CONFIG_HAVE_GCC_PLUGINS=y
+# CONFIG_GCC_PLUGINS is not set
+CONFIG_FUNCTION_ALIGNMENT=0
+# end of General architecture-dependent options
+
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+# CONFIG_MODULES is not set
+# CONFIG_BLOCK is not set
+CONFIG_PADATA=y
+CONFIG_ASN1=y
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_LOCK_SPIN_ON_OWNER=y
+CONFIG_ARCH_USE_QUEUED_RWLOCKS=y
+CONFIG_QUEUED_RWLOCKS=y
+CONFIG_ARCH_HAS_MMIOWB=y
+CONFIG_MMIOWB=y
+CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE=y
+CONFIG_ARCH_HAS_PREPARE_SYNC_CORE_CMD=y
+CONFIG_ARCH_HAS_SYNC_CORE_BEFORE_USERMODE=y
+CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y
+CONFIG_FREEZER=y
+
+#
+# Executable file formats
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_ELFCORE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_BINFMT_SCRIPT=y
+CONFIG_ARCH_HAS_BINFMT_FLAT=y
+# CONFIG_BINFMT_FLAT is not set
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+# end of Executable file formats
+
+#
+# Memory Management options
+#
+
+#
+# Slab allocator options
+#
+CONFIG_SLUB=y
+# CONFIG_SLUB_TINY is not set
+CONFIG_SLAB_MERGE_DEFAULT=y
+# CONFIG_SLAB_FREELIST_RANDOM is not set
+# CONFIG_SLAB_FREELIST_HARDENED is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_SLUB_CPU_PARTIAL=y
+# CONFIG_RANDOM_KMALLOC_CACHES is not set
+# end of Slab allocator options
+
+# CONFIG_SHUFFLE_PAGE_ALLOCATOR is not set
+CONFIG_COMPAT_BRK=y
+CONFIG_SELECT_MEMORY_MODEL=y
+# CONFIG_FLATMEM_MANUAL is not set
+CONFIG_SPARSEMEM_MANUAL=y
+CONFIG_SPARSEMEM=y
+CONFIG_SPARSEMEM_STATIC=y
+CONFIG_ARCH_WANT_OPTIMIZE_HUGETLB_VMEMMAP=y
+CONFIG_HAVE_FAST_GUP=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_COMPACTION=y
+CONFIG_COMPACT_UNEVICTABLE_DEFAULT=1
+CONFIG_PAGE_REPORTING=y
+CONFIG_MIGRATION=y
+CONFIG_ARCH_ENABLE_HUGEPAGE_MIGRATION=y
+CONFIG_PCP_BATCH_SCALE_MAX=5
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_ARCH_WANT_GENERAL_HUGETLB=y
+# CONFIG_CMA is not set
+CONFIG_GENERIC_EARLY_IOREMAP=y
+# CONFIG_IDLE_PAGE_TRACKING is not set
+CONFIG_ARCH_HAS_CURRENT_STACK_POINTER=y
+CONFIG_VM_EVENT_COUNTERS=y
+# CONFIG_PERCPU_STATS is not set
+# CONFIG_GUP_TEST is not set
+# CONFIG_DMAPOOL_TEST is not set
+CONFIG_ARCH_HAS_PTE_SPECIAL=y
+CONFIG_MEMFD_CREATE=y
+CONFIG_SECRETMEM=y
+# CONFIG_ANON_VMA_NAME is not set
+# CONFIG_USERFAULTFD is not set
+CONFIG_ARCH_SUPPORTS_PER_VMA_LOCK=y
+CONFIG_PER_VMA_LOCK=y
+CONFIG_LOCK_MM_AND_FIND_VMA=y
+
+#
+# Data Access Monitoring
+#
+# CONFIG_DAMON is not set
+# end of Data Access Monitoring
+# end of Memory Management options
+
+# CONFIG_NET is not set
+
+#
+# Device Drivers
+#
+CONFIG_HAVE_PCI=y
+CONFIG_GENERIC_PCI_IOMAP=y
+# CONFIG_PCI is not set
+# CONFIG_PCCARD is not set
+
+#
+# Generic Driver Options
+#
+# CONFIG_UEVENT_HELPER is not set
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+# CONFIG_DEVTMPFS_SAFE is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+
+#
+# Firmware loader
+#
+CONFIG_FW_LOADER=y
+CONFIG_EXTRA_FIRMWARE=""
+# CONFIG_FW_LOADER_USER_HELPER is not set
+# CONFIG_FW_LOADER_COMPRESS is not set
+CONFIG_FW_CACHE=y
+# CONFIG_FW_UPLOAD is not set
+# end of Firmware loader
+
+CONFIG_ALLOW_DEV_COREDUMP=y
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_DEBUG_TEST_DRIVER_REMOVE is not set
+CONFIG_GENERIC_CPU_DEVICES=y
+CONFIG_REGMAP=y
+CONFIG_REGMAP_MMIO=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_DMA_FENCE_TRACE is not set
+CONFIG_GENERIC_ARCH_TOPOLOGY=y
+# CONFIG_FW_DEVLINK_SYNC_STATE_TIMEOUT is not set
+# end of Generic Driver Options
+
+#
+# Bus devices
+#
+# CONFIG_ARM_INTEGRATOR_LM is not set
+# CONFIG_BT1_APB is not set
+# CONFIG_BT1_AXI is not set
+# CONFIG_MOXTET is not set
+# CONFIG_HISILICON_LPC is not set
+# CONFIG_INTEL_IXP4XX_EB is not set
+# CONFIG_QCOM_EBI2 is not set
+# CONFIG_MHI_BUS is not set
+# CONFIG_MHI_BUS_EP is not set
+# end of Bus devices
+
+#
+# Cache Drivers
+#
+# CONFIG_AX45MP_L2_CACHE is not set
+# CONFIG_SIFIVE_CCACHE is not set
+# end of Cache Drivers
+
+#
+# Firmware Drivers
+#
+
+#
+# ARM System Control and Management Interface Protocol
+#
+# CONFIG_ARM_SCMI_PROTOCOL is not set
+# CONFIG_ARM_SCMI_POWER_CONTROL is not set
+# end of ARM System Control and Management Interface Protocol
+
+# CONFIG_FIRMWARE_MEMMAP is not set
+# CONFIG_FW_CFG_SYSFS is not set
+# CONFIG_SYSFB_SIMPLEFB is not set
+# CONFIG_BCM47XX_NVRAM is not set
+# CONFIG_TEE_BNXT_FW is not set
+# CONFIG_GOOGLE_FIRMWARE is not set
+
+#
+# EFI (Extensible Firmware Interface) Support
+#
+CONFIG_EFI_ESRT=y
+CONFIG_EFI_PARAMS_FROM_FDT=y
+CONFIG_EFI_RUNTIME_WRAPPERS=y
+CONFIG_EFI_GENERIC_STUB=y
+# CONFIG_EFI_ZBOOT is not set
+# CONFIG_EFI_BOOTLOADER_CONTROL is not set
+# CONFIG_EFI_CAPSULE_LOADER is not set
+# CONFIG_EFI_TEST is not set
+# CONFIG_RESET_ATTACK_MITIGATION is not set
+# CONFIG_EFI_RCI2_TABLE is not set
+# CONFIG_EFI_DISABLE_PCI_DMA is not set
+CONFIG_EFI_EARLYCON=y
+# CONFIG_EFI_DISABLE_RUNTIME is not set
+# CONFIG_EFI_COCO_SECRET is not set
+# end of EFI (Extensible Firmware Interface) Support
+
+#
+# Qualcomm firmware drivers
+#
+# end of Qualcomm firmware drivers
+
+#
+# Tegra firmware driver
+#
+# end of Tegra firmware driver
+# end of Firmware Drivers
+
+# CONFIG_GNSS is not set
+# CONFIG_MTD is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+# CONFIG_OF_UNITTEST is not set
+# CONFIG_OF_ALL_DTBS is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_KOBJ=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_RESERVED_MEM=y
+# CONFIG_OF_OVERLAY is not set
+# CONFIG_PARPORT is not set
+
+#
+# NVME Support
+#
+# end of NVME Support
+
+#
+# Misc devices
+#
+# CONFIG_AD525X_DPOT is not set
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_ICS932S401 is not set
+# CONFIG_ATMEL_SSC is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_SMPRO_ERRMON is not set
+# CONFIG_SMPRO_MISC is not set
+# CONFIG_GEHC_ACHC is not set
+# CONFIG_QCOM_COINCELL is not set
+# CONFIG_QCOM_FASTRPC is not set
+# CONFIG_APDS9802ALS is not set
+# CONFIG_ISL29003 is not set
+# CONFIG_ISL29020 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_SENSORS_BH1770 is not set
+# CONFIG_SENSORS_APDS990X is not set
+# CONFIG_HMC6352 is not set
+# CONFIG_DS1682 is not set
+# CONFIG_LATTICE_ECP3_CONFIG is not set
+# CONFIG_SRAM is not set
+# CONFIG_XILINX_SDFEC is not set
+# CONFIG_OPEN_DICE is not set
+# CONFIG_VCPU_STALL_DETECTOR is not set
+# CONFIG_NSM is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_AT24 is not set
+# CONFIG_EEPROM_AT25 is not set
+# CONFIG_EEPROM_MAX6875 is not set
+# CONFIG_EEPROM_93CX6 is not set
+# CONFIG_EEPROM_93XX46 is not set
+# CONFIG_EEPROM_IDT_89HPESX is not set
+# CONFIG_EEPROM_EE1004 is not set
+# end of EEPROM support
+
+#
+# Texas Instruments shared transport line discipline
+#
+# end of Texas Instruments shared transport line discipline
+
+# CONFIG_SENSORS_LIS3_SPI is not set
+# CONFIG_SENSORS_LIS3_I2C is not set
+# CONFIG_ALTERA_STAPL is not set
+# CONFIG_ECHO is not set
+# CONFIG_MISC_RTSX_USB is not set
+# CONFIG_PVPANIC is not set
+# end of Misc devices
+
+#
+# SCSI device support
+#
+# end of SCSI device support
+
+#
+# IEEE 1394 (FireWire) support
+#
+# CONFIG_FIREWIRE is not set
+# end of IEEE 1394 (FireWire) support
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+# CONFIG_INPUT_MATRIXKMAP is not set
+CONFIG_INPUT_VIVALDIFMAP=y
+
+#
+# Userland interfaces
+#
+CONFIG_INPUT_MOUSEDEV=y
+# CONFIG_INPUT_MOUSEDEV_PSAUX is not set
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+# CONFIG_INPUT_JOYDEV is not set
+# CONFIG_INPUT_EVDEV is not set
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADP5588 is not set
+# CONFIG_KEYBOARD_ADP5589 is not set
+CONFIG_KEYBOARD_ATKBD=y
+# CONFIG_KEYBOARD_QT1050 is not set
+# CONFIG_KEYBOARD_QT1070 is not set
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_CLPS711X is not set
+# CONFIG_KEYBOARD_DLINK_DIR685 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
+# CONFIG_KEYBOARD_EP93XX is not set
+# CONFIG_KEYBOARD_GPIO is not set
+# CONFIG_KEYBOARD_GPIO_POLLED is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_TCA8418 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+# CONFIG_KEYBOARD_LM8333 is not set
+# CONFIG_KEYBOARD_LPC32XX is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_MCS is not set
+# CONFIG_KEYBOARD_MPR121 is not set
+# CONFIG_KEYBOARD_SNVS_PWRKEY is not set
+# CONFIG_KEYBOARD_IMX is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+# CONFIG_KEYBOARD_NOMADIK is not set
+# CONFIG_KEYBOARD_TEGRA is not set
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_PXA27x is not set
+# CONFIG_KEYBOARD_SAMSUNG is not set
+# CONFIG_KEYBOARD_GOLDFISH_EVENTS is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_ST_KEYSCAN is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+# CONFIG_KEYBOARD_SH_KEYSC is not set
+# CONFIG_KEYBOARD_OMAP4 is not set
+# CONFIG_KEYBOARD_SPEAR is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+# CONFIG_KEYBOARD_CAP11XX is not set
+# CONFIG_KEYBOARD_BCM is not set
+# CONFIG_KEYBOARD_MT6779 is not set
+# CONFIG_KEYBOARD_MTK_PMIC is not set
+# CONFIG_KEYBOARD_CYPRESS_SF is not set
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_BYD=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_SYNAPTICS_SMBUS=y
+CONFIG_MOUSE_PS2_CYPRESS=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_PS2_ELANTECH is not set
+# CONFIG_MOUSE_PS2_SENTELIC is not set
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_PS2_FOCALTECH=y
+CONFIG_MOUSE_PS2_SMBUS=y
+# CONFIG_MOUSE_SERIAL is not set
+# CONFIG_MOUSE_APPLETOUCH is not set
+# CONFIG_MOUSE_BCM5974 is not set
+# CONFIG_MOUSE_CYAPA is not set
+# CONFIG_MOUSE_ELAN_I2C is not set
+# CONFIG_MOUSE_VSXXXAA is not set
+# CONFIG_MOUSE_GPIO is not set
+# CONFIG_MOUSE_SYNAPTICS_I2C is not set
+# CONFIG_MOUSE_SYNAPTICS_USB is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+# CONFIG_INPUT_TOUCHSCREEN is not set
+# CONFIG_INPUT_MISC is not set
+# CONFIG_RMI4_CORE is not set
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_SERPORT=y
+CONFIG_SERIO_LIBPS2=y
+# CONFIG_SERIO_RAW is not set
+# CONFIG_SERIO_ALTERA_PS2 is not set
+# CONFIG_SERIO_PS2MULT is not set
+# CONFIG_SERIO_ARC_PS2 is not set
+# CONFIG_SERIO_APBPS2 is not set
+# CONFIG_SERIO_OLPC_APSP is not set
+# CONFIG_SERIO_SUN4I_PS2 is not set
+# CONFIG_SERIO_GPIO_PS2 is not set
+# CONFIG_USERIO is not set
+# CONFIG_GAMEPORT is not set
+# end of Hardware I/O ports
+# end of Input device support
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+CONFIG_VT_CONSOLE_SLEEP=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_UNIX98_PTYS=y
+CONFIG_LEGACY_PTYS=y
+CONFIG_LEGACY_PTY_COUNT=256
+CONFIG_LEGACY_TIOCSTI=y
+CONFIG_LDISC_AUTOLOAD=y
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_EARLYCON=y
+CONFIG_SERIAL_8250=y
+CONFIG_SERIAL_8250_DEPRECATED_OPTIONS=y
+CONFIG_SERIAL_8250_16550A_VARIANTS=y
+# CONFIG_SERIAL_8250_FINTEK is not set
+CONFIG_SERIAL_8250_CONSOLE=y
+CONFIG_SERIAL_8250_DMA=y
+CONFIG_SERIAL_8250_NR_UARTS=4
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+# CONFIG_SERIAL_8250_EXTENDED is not set
+# CONFIG_SERIAL_8250_ASPEED_VUART is not set
+CONFIG_SERIAL_8250_DWLIB=y
+# CONFIG_SERIAL_8250_FSL is not set
+CONFIG_SERIAL_8250_DW=y
+# CONFIG_SERIAL_8250_EM is not set
+# CONFIG_SERIAL_8250_IOC3 is not set
+# CONFIG_SERIAL_8250_RT288X is not set
+# CONFIG_SERIAL_8250_OMAP is not set
+# CONFIG_SERIAL_8250_LPC18XX is not set
+# CONFIG_SERIAL_8250_MT6577 is not set
+# CONFIG_SERIAL_8250_UNIPHIER is not set
+# CONFIG_SERIAL_8250_INGENIC is not set
+# CONFIG_SERIAL_8250_PXA is not set
+CONFIG_SERIAL_8250_TEGRA=y
+# CONFIG_SERIAL_8250_BCM7271 is not set
+CONFIG_SERIAL_OF_PLATFORM=y
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_AMBA_PL010 is not set
+# CONFIG_SERIAL_EARLYCON_SEMIHOST is not set
+# CONFIG_SERIAL_EARLYCON_RISCV_SBI is not set
+# CONFIG_SERIAL_ATMEL is not set
+# CONFIG_SERIAL_MESON is not set
+# CONFIG_SERIAL_CLPS711X is not set
+# CONFIG_SERIAL_SAMSUNG is not set
+# CONFIG_SERIAL_TEGRA is not set
+# CONFIG_SERIAL_MAX3100 is not set
+# CONFIG_SERIAL_MAX310X is not set
+# CONFIG_SERIAL_IMX is not set
+# CONFIG_SERIAL_IMX_EARLYCON is not set
+# CONFIG_SERIAL_UARTLITE is not set
+# CONFIG_SERIAL_SH_SCI is not set
+# CONFIG_SERIAL_HS_LPC32XX is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_MSM is not set
+# CONFIG_SERIAL_VT8500 is not set
+# CONFIG_SERIAL_OMAP is not set
+CONFIG_SERIAL_SIFIVE=y
+CONFIG_SERIAL_SIFIVE_CONSOLE=y
+# CONFIG_SERIAL_LANTIQ is not set
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_SC16IS7XX is not set
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_BCM63XX is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_MXS_AUART is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_SERIAL_MPS2_UART is not set
+# CONFIG_SERIAL_ARC is not set
+# CONFIG_SERIAL_FSL_LPUART is not set
+# CONFIG_SERIAL_FSL_LINFLEXUART is not set
+# CONFIG_SERIAL_CONEXANT_DIGICOLOR is not set
+# CONFIG_SERIAL_ST_ASC is not set
+# CONFIG_SERIAL_SPRD is not set
+# CONFIG_SERIAL_STM32 is not set
+# CONFIG_SERIAL_MVEBU_UART is not set
+# CONFIG_SERIAL_OWL is not set
+# CONFIG_SERIAL_RDA is not set
+# CONFIG_SERIAL_MILBEAUT_USIO is not set
+# CONFIG_SERIAL_LITEUART is not set
+# CONFIG_SERIAL_SUNPLUS is not set
+# CONFIG_SERIAL_NUVOTON_MA35D1 is not set
+# CONFIG_SERIAL_ESP32 is not set
+# CONFIG_SERIAL_ESP32_ACM is not set
+# end of Serial drivers
+
+CONFIG_SERIAL_MCTRL_GPIO=y
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_GOLDFISH_TTY is not set
+# CONFIG_NULL_TTY is not set
+CONFIG_HVC_DRIVER=y
+# CONFIG_HVC_RISCV_SBI is not set
+# CONFIG_RPMSG_TTY is not set
+# CONFIG_SERIAL_DEV_BUS is not set
+# CONFIG_TTY_PRINTK is not set
+CONFIG_VIRTIO_CONSOLE=y
+# CONFIG_IPMI_HANDLER is not set
+# CONFIG_ASPEED_KCS_IPMI_BMC is not set
+# CONFIG_NPCM7XX_KCS_IPMI_BMC is not set
+# CONFIG_ASPEED_BT_IPMI_BMC is not set
+CONFIG_HW_RANDOM=y
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+CONFIG_HW_RANDOM_ATMEL=y
+# CONFIG_HW_RANDOM_BA431 is not set
+CONFIG_HW_RANDOM_BCM2835=y
+CONFIG_HW_RANDOM_IPROC_RNG200=y
+CONFIG_HW_RANDOM_IXP4XX=y
+CONFIG_HW_RANDOM_OMAP=y
+CONFIG_HW_RANDOM_OMAP3_ROM=y
+CONFIG_HW_RANDOM_VIRTIO=y
+CONFIG_HW_RANDOM_MXC_RNGA=y
+CONFIG_HW_RANDOM_IMX_RNGC=y
+CONFIG_HW_RANDOM_INGENIC_RNG=y
+CONFIG_HW_RANDOM_INGENIC_TRNG=y
+CONFIG_HW_RANDOM_NOMADIK=y
+CONFIG_HW_RANDOM_HISI=y
+# CONFIG_HW_RANDOM_HISTB is not set
+# CONFIG_HW_RANDOM_ST is not set
+CONFIG_HW_RANDOM_XGENE=y
+CONFIG_HW_RANDOM_STM32=y
+# CONFIG_HW_RANDOM_PIC32 is not set
+CONFIG_HW_RANDOM_MESON=y
+CONFIG_HW_RANDOM_MTK=y
+CONFIG_HW_RANDOM_EXYNOS=y
+CONFIG_HW_RANDOM_NPCM=y
+CONFIG_HW_RANDOM_KEYSTONE=y
+# CONFIG_HW_RANDOM_CCTRNG is not set
+# CONFIG_HW_RANDOM_XIPHERA is not set
+# CONFIG_HW_RANDOM_JH7110 is not set
+CONFIG_DEVMEM=y
+CONFIG_DEVPORT=y
+# CONFIG_TCG_TPM is not set
+# CONFIG_XILLYBUS is not set
+# CONFIG_XILLYUSB is not set
+# end of Character devices
+
+#
+# I2C support
+#
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+# CONFIG_I2C_CHARDEV is not set
+# CONFIG_I2C_MUX is not set
+# CONFIG_I2C_ATR is not set
+CONFIG_I2C_HELPER_AUTO=y
+
+#
+# I2C Hardware Bus support
+#
+# CONFIG_I2C_HIX5HD2 is not set
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_ALTERA is not set
+# CONFIG_I2C_ASPEED is not set
+# CONFIG_I2C_AT91 is not set
+# CONFIG_I2C_AXXIA is not set
+# CONFIG_I2C_BCM2835 is not set
+# CONFIG_I2C_BCM_IPROC is not set
+# CONFIG_I2C_BCM_KONA is not set
+CONFIG_I2C_BRCMSTB=y
+# CONFIG_I2C_CADENCE is not set
+# CONFIG_I2C_CBUS_GPIO is not set
+# CONFIG_I2C_DAVINCI is not set
+# CONFIG_I2C_DESIGNWARE_PLATFORM is not set
+# CONFIG_I2C_DIGICOLOR is not set
+# CONFIG_I2C_EMEV2 is not set
+# CONFIG_I2C_EXYNOS5 is not set
+# CONFIG_I2C_GPIO is not set
+# CONFIG_I2C_GXP is not set
+# CONFIG_I2C_HIGHLANDER is not set
+# CONFIG_I2C_HISI is not set
+# CONFIG_I2C_IMG is not set
+# CONFIG_I2C_IMX is not set
+# CONFIG_I2C_IMX_LPI2C is not set
+# CONFIG_I2C_IOP3XX is not set
+# CONFIG_I2C_JZ4780 is not set
+# CONFIG_I2C_LPC2K is not set
+# CONFIG_I2C_LS2X is not set
+# CONFIG_I2C_MESON is not set
+# CONFIG_I2C_MICROCHIP_CORE is not set
+# CONFIG_I2C_MT65XX is not set
+# CONFIG_I2C_MT7621 is not set
+# CONFIG_I2C_MV64XXX is not set
+# CONFIG_I2C_MXS is not set
+# CONFIG_I2C_NPCM is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_OMAP is not set
+# CONFIG_I2C_OWL is not set
+# CONFIG_I2C_APPLE is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_PNX is not set
+# CONFIG_I2C_PXA is not set
+# CONFIG_I2C_QCOM_CCI is not set
+# CONFIG_I2C_QUP is not set
+# CONFIG_I2C_RIIC is not set
+# CONFIG_I2C_RK3X is not set
+# CONFIG_I2C_RZV2M is not set
+# CONFIG_I2C_S3C2410 is not set
+# CONFIG_I2C_SH_MOBILE is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_SPRD is not set
+# CONFIG_I2C_ST is not set
+# CONFIG_I2C_STM32F4 is not set
+# CONFIG_I2C_STM32F7 is not set
+# CONFIG_I2C_SUN6I_P2WI is not set
+# CONFIG_I2C_SYNQUACER is not set
+# CONFIG_I2C_TEGRA is not set
+# CONFIG_I2C_TEGRA_BPMP is not set
+# CONFIG_I2C_UNIPHIER is not set
+# CONFIG_I2C_UNIPHIER_F is not set
+# CONFIG_I2C_VERSATILE is not set
+# CONFIG_I2C_WMT is not set
+# CONFIG_I2C_XILINX is not set
+# CONFIG_I2C_XLP9XX is not set
+# CONFIG_I2C_RCAR is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_DIOLAN_U2C is not set
+# CONFIG_I2C_CP2615 is not set
+# CONFIG_I2C_ROBOTFUZZ_OSIF is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+# CONFIG_I2C_MLXCPLD is not set
+# CONFIG_I2C_VIRTIO is not set
+# end of I2C Hardware Bus support
+
+# CONFIG_I2C_SLAVE is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+# end of I2C support
+
+# CONFIG_I3C is not set
+CONFIG_SPI=y
+# CONFIG_SPI_DEBUG is not set
+CONFIG_SPI_MASTER=y
+# CONFIG_SPI_MEM is not set
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_ALTERA is not set
+# CONFIG_SPI_ALTERA_CORE is not set
+# CONFIG_SPI_AMLOGIC_SPIFC_A1 is not set
+# CONFIG_SPI_AR934X is not set
+# CONFIG_SPI_ATH79 is not set
+# CONFIG_SPI_ARMADA_3700 is not set
+# CONFIG_SPI_ASPEED_SMC is not set
+# CONFIG_SPI_ATMEL is not set
+# CONFIG_SPI_ATMEL_QUADSPI is not set
+# CONFIG_SPI_AXI_SPI_ENGINE is not set
+# CONFIG_SPI_BCM2835 is not set
+# CONFIG_SPI_BCM2835AUX is not set
+# CONFIG_SPI_BCM63XX is not set
+# CONFIG_SPI_BCM63XX_HSSPI is not set
+# CONFIG_SPI_BCM_QSPI is not set
+# CONFIG_SPI_BCMBCA_HSSPI is not set
+# CONFIG_SPI_BITBANG is not set
+# CONFIG_SPI_CADENCE is not set
+# CONFIG_SPI_CADENCE_QUADSPI is not set
+# CONFIG_SPI_CLPS711X is not set
+# CONFIG_SPI_DAVINCI is not set
+# CONFIG_SPI_DESIGNWARE is not set
+# CONFIG_SPI_EP93XX is not set
+# CONFIG_SPI_FSL_LPSPI is not set
+# CONFIG_SPI_FSL_QUADSPI is not set
+# CONFIG_SPI_GXP is not set
+# CONFIG_SPI_HISI_KUNPENG is not set
+# CONFIG_SPI_HISI_SFC_V3XX is not set
+# CONFIG_SPI_NXP_FLEXSPI is not set
+# CONFIG_SPI_GPIO is not set
+# CONFIG_SPI_IMG_SPFI is not set
+# CONFIG_SPI_IMX is not set
+# CONFIG_SPI_INGENIC is not set
+# CONFIG_SPI_JCORE is not set
+# CONFIG_SPI_LOONGSON_PLATFORM is not set
+# CONFIG_SPI_LP8841_RTC is not set
+# CONFIG_SPI_FSL_SPI is not set
+# CONFIG_SPI_FSL_DSPI is not set
+# CONFIG_SPI_MESON_SPICC is not set
+# CONFIG_SPI_MESON_SPIFC is not set
+# CONFIG_SPI_MICROCHIP_CORE is not set
+# CONFIG_SPI_MICROCHIP_CORE_QSPI is not set
+# CONFIG_SPI_MT65XX is not set
+# CONFIG_SPI_MT7621 is not set
+# CONFIG_SPI_MTK_NOR is not set
+# CONFIG_SPI_WPCM_FIU is not set
+# CONFIG_SPI_NPCM_FIU is not set
+# CONFIG_SPI_NPCM_PSPI is not set
+# CONFIG_SPI_LANTIQ_SSC is not set
+# CONFIG_SPI_OC_TINY is not set
+# CONFIG_SPI_OMAP24XX is not set
+# CONFIG_SPI_TI_QSPI is not set
+# CONFIG_SPI_ORION is not set
+# CONFIG_SPI_PIC32 is not set
+# CONFIG_SPI_PIC32_SQI is not set
+# CONFIG_SPI_PXA2XX is not set
+# CONFIG_SPI_ROCKCHIP is not set
+# CONFIG_SPI_ROCKCHIP_SFC is not set
+# CONFIG_SPI_RSPI is not set
+# CONFIG_SPI_RZV2M_CSI is not set
+# CONFIG_SPI_QCOM_QSPI is not set
+# CONFIG_SPI_QUP is not set
+# CONFIG_SPI_S3C64XX is not set
+# CONFIG_SPI_SC18IS602 is not set
+# CONFIG_SPI_SH_MSIOF is not set
+# CONFIG_SPI_SH is not set
+# CONFIG_SPI_SH_HSPI is not set
+CONFIG_SPI_SIFIVE=y
+# CONFIG_SPI_SPRD is not set
+# CONFIG_SPI_SPRD_ADI is not set
+# CONFIG_SPI_STM32 is not set
+# CONFIG_SPI_ST_SSC4 is not set
+# CONFIG_SPI_SUN4I is not set
+# CONFIG_SPI_SUN6I is not set
+# CONFIG_SPI_SUNPLUS_SP7021 is not set
+# CONFIG_SPI_SYNQUACER is not set
+# CONFIG_SPI_MXIC is not set
+# CONFIG_SPI_TEGRA210_QUAD is not set
+# CONFIG_SPI_TEGRA114 is not set
+# CONFIG_SPI_TEGRA20_SFLASH is not set
+# CONFIG_SPI_TEGRA20_SLINK is not set
+# CONFIG_SPI_UNIPHIER is not set
+# CONFIG_SPI_XCOMM is not set
+# CONFIG_SPI_XILINX is not set
+# CONFIG_SPI_XLP is not set
+# CONFIG_SPI_XTENSA_XTFPGA is not set
+# CONFIG_SPI_ZYNQMP_GQSPI is not set
+# CONFIG_SPI_AMD is not set
+
+#
+# SPI Multiplexer support
+#
+# CONFIG_SPI_MUX is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+# CONFIG_SPI_TLE62X0 is not set
+# CONFIG_SPI_SLAVE is not set
+# CONFIG_SPMI is not set
+# CONFIG_HSI is not set
+# CONFIG_PPS is not set
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK_OPTIONAL=y
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# end of PTP clock support
+
+CONFIG_PINCTRL=y
+CONFIG_PINMUX=y
+CONFIG_PINCONF=y
+CONFIG_GENERIC_PINCONF=y
+# CONFIG_DEBUG_PINCTRL is not set
+# CONFIG_PINCTRL_AMD is not set
+# CONFIG_PINCTRL_AT91PIO4 is not set
+# CONFIG_PINCTRL_AW9523 is not set
+# CONFIG_PINCTRL_BM1880 is not set
+# CONFIG_PINCTRL_CY8C95X0 is not set
+# CONFIG_PINCTRL_DA850_PUPD is not set
+# CONFIG_PINCTRL_EQUILIBRIUM is not set
+# CONFIG_PINCTRL_INGENIC is not set
+# CONFIG_PINCTRL_LOONGSON2 is not set
+# CONFIG_PINCTRL_LPC18XX is not set
+# CONFIG_PINCTRL_MCP23S08 is not set
+# CONFIG_PINCTRL_MICROCHIP_SGPIO is not set
+# CONFIG_PINCTRL_OCELOT is not set
+# CONFIG_PINCTRL_PISTACHIO is not set
+# CONFIG_PINCTRL_ROCKCHIP is not set
+# CONFIG_PINCTRL_SINGLE is not set
+# CONFIG_PINCTRL_STMFX is not set
+# CONFIG_PINCTRL_SX150X is not set
+# CONFIG_PINCTRL_MLXBF3 is not set
+# CONFIG_PINCTRL_OWL is not set
+# CONFIG_PINCTRL_ASPEED_G4 is not set
+# CONFIG_PINCTRL_ASPEED_G5 is not set
+# CONFIG_PINCTRL_ASPEED_G6 is not set
+# CONFIG_PINCTRL_BCM281XX is not set
+# CONFIG_PINCTRL_BCM2835 is not set
+# CONFIG_PINCTRL_BCM4908 is not set
+# CONFIG_PINCTRL_BCM6318 is not set
+# CONFIG_PINCTRL_BCM6328 is not set
+# CONFIG_PINCTRL_BCM6358 is not set
+# CONFIG_PINCTRL_BCM6362 is not set
+# CONFIG_PINCTRL_BCM6368 is not set
+# CONFIG_PINCTRL_BCM63268 is not set
+# CONFIG_PINCTRL_IPROC_GPIO is not set
+# CONFIG_PINCTRL_CYGNUS_MUX is not set
+# CONFIG_PINCTRL_NS is not set
+# CONFIG_PINCTRL_NSP_GPIO is not set
+# CONFIG_PINCTRL_NS2_MUX is not set
+# CONFIG_PINCTRL_NSP_MUX is not set
+# CONFIG_PINCTRL_AS370 is not set
+# CONFIG_PINCTRL_BERLIN_BG4CT is not set
+
+#
+# Intel pinctrl drivers
+#
+# CONFIG_PINCTRL_BAYTRAIL is not set
+# CONFIG_PINCTRL_CHERRYVIEW is not set
+# CONFIG_PINCTRL_LYNXPOINT is not set
+# CONFIG_PINCTRL_ALDERLAKE is not set
+# CONFIG_PINCTRL_BROXTON is not set
+# CONFIG_PINCTRL_CANNONLAKE is not set
+# CONFIG_PINCTRL_CEDARFORK is not set
+# CONFIG_PINCTRL_DENVERTON is not set
+# CONFIG_PINCTRL_ELKHARTLAKE is not set
+# CONFIG_PINCTRL_EMMITSBURG is not set
+# CONFIG_PINCTRL_GEMINILAKE is not set
+# CONFIG_PINCTRL_ICELAKE is not set
+# CONFIG_PINCTRL_JASPERLAKE is not set
+# CONFIG_PINCTRL_LAKEFIELD is not set
+# CONFIG_PINCTRL_LEWISBURG is not set
+# CONFIG_PINCTRL_METEORLAKE is not set
+# CONFIG_PINCTRL_SUNRISEPOINT is not set
+# CONFIG_PINCTRL_TIGERLAKE is not set
+# CONFIG_PINCTRL_MERRIFIELD is not set
+# CONFIG_PINCTRL_MOOREFIELD is not set
+# end of Intel pinctrl drivers
+
+#
+# MediaTek pinctrl drivers
+#
+# CONFIG_EINT_MTK is not set
+# CONFIG_PINCTRL_MT2701 is not set
+# CONFIG_PINCTRL_MT7623 is not set
+# CONFIG_PINCTRL_MT7629 is not set
+# CONFIG_PINCTRL_MT8135 is not set
+# CONFIG_PINCTRL_MT8127 is not set
+# CONFIG_PINCTRL_MT2712 is not set
+# CONFIG_PINCTRL_MT6765 is not set
+# CONFIG_PINCTRL_MT6779 is not set
+# CONFIG_PINCTRL_MT6795 is not set
+# CONFIG_PINCTRL_MT6797 is not set
+# CONFIG_PINCTRL_MT7622 is not set
+# CONFIG_PINCTRL_MT7981 is not set
+# CONFIG_PINCTRL_MT7986 is not set
+# CONFIG_PINCTRL_MT8167 is not set
+# CONFIG_PINCTRL_MT8173 is not set
+# CONFIG_PINCTRL_MT8183 is not set
+# CONFIG_PINCTRL_MT8186 is not set
+# CONFIG_PINCTRL_MT8188 is not set
+# CONFIG_PINCTRL_MT8192 is not set
+# CONFIG_PINCTRL_MT8195 is not set
+# CONFIG_PINCTRL_MT8365 is not set
+# CONFIG_PINCTRL_MT8516 is not set
+# CONFIG_PINCTRL_MT6397 is not set
+# end of MediaTek pinctrl drivers
+
+CONFIG_PINCTRL_MESON=y
+# CONFIG_PINCTRL_NOMADIK is not set
+# CONFIG_PINCTRL_WPCM450 is not set
+# CONFIG_PINCTRL_NPCM7XX is not set
+# CONFIG_PINCTRL_NPCM8XX is not set
+# CONFIG_PINCTRL_PXA25X is not set
+# CONFIG_PINCTRL_PXA27X is not set
+# CONFIG_PINCTRL_MSM is not set
+# CONFIG_PINCTRL_QCOM_SSBI_PMIC is not set
+# CONFIG_PINCTRL_LPASS_LPI is not set
+
+#
+# Renesas pinctrl drivers
+#
+# CONFIG_PINCTRL_RENESAS is not set
+# CONFIG_PINCTRL_PFC_EMEV2 is not set
+# CONFIG_PINCTRL_PFC_R8A77995 is not set
+# CONFIG_PINCTRL_PFC_R8A7794 is not set
+# CONFIG_PINCTRL_PFC_R8A77990 is not set
+# CONFIG_PINCTRL_PFC_R8A7779 is not set
+# CONFIG_PINCTRL_PFC_R8A7790 is not set
+# CONFIG_PINCTRL_PFC_R8A77951 is not set
+# CONFIG_PINCTRL_PFC_R8A7778 is not set
+# CONFIG_PINCTRL_PFC_R8A7793 is not set
+# CONFIG_PINCTRL_PFC_R8A7791 is not set
+# CONFIG_PINCTRL_PFC_R8A77965 is not set
+# CONFIG_PINCTRL_PFC_R8A77960 is not set
+# CONFIG_PINCTRL_PFC_R8A77961 is not set
+# CONFIG_PINCTRL_PFC_R8A779F0 is not set
+# CONFIG_PINCTRL_PFC_R8A7792 is not set
+# CONFIG_PINCTRL_PFC_R8A77980 is not set
+# CONFIG_PINCTRL_PFC_R8A77970 is not set
+# CONFIG_PINCTRL_PFC_R8A779A0 is not set
+# CONFIG_PINCTRL_PFC_R8A779G0 is not set
+# CONFIG_PINCTRL_PFC_R8A779H0 is not set
+# CONFIG_PINCTRL_PFC_R8A7740 is not set
+# CONFIG_PINCTRL_PFC_R8A73A4 is not set
+# CONFIG_PINCTRL_RZA1 is not set
+# CONFIG_PINCTRL_RZA2 is not set
+# CONFIG_PINCTRL_RZG2L is not set
+# CONFIG_PINCTRL_PFC_R8A77470 is not set
+# CONFIG_PINCTRL_PFC_R8A7745 is not set
+# CONFIG_PINCTRL_PFC_R8A7742 is not set
+# CONFIG_PINCTRL_PFC_R8A7743 is not set
+# CONFIG_PINCTRL_PFC_R8A7744 is not set
+# CONFIG_PINCTRL_PFC_R8A774C0 is not set
+# CONFIG_PINCTRL_PFC_R8A774E1 is not set
+# CONFIG_PINCTRL_PFC_R8A774A1 is not set
+# CONFIG_PINCTRL_PFC_R8A774B1 is not set
+# CONFIG_PINCTRL_RZN1 is not set
+# CONFIG_PINCTRL_RZV2M is not set
+# CONFIG_PINCTRL_PFC_SH7203 is not set
+# CONFIG_PINCTRL_PFC_SH7264 is not set
+# CONFIG_PINCTRL_PFC_SH7269 is not set
+# CONFIG_PINCTRL_PFC_SH7720 is not set
+# CONFIG_PINCTRL_PFC_SH7722 is not set
+# CONFIG_PINCTRL_PFC_SH7734 is not set
+# CONFIG_PINCTRL_PFC_SH7757 is not set
+# CONFIG_PINCTRL_PFC_SH7785 is not set
+# CONFIG_PINCTRL_PFC_SH7786 is not set
+# CONFIG_PINCTRL_PFC_SH73A0 is not set
+# CONFIG_PINCTRL_PFC_SH7723 is not set
+# CONFIG_PINCTRL_PFC_SH7724 is not set
+# CONFIG_PINCTRL_PFC_SHX3 is not set
+# end of Renesas pinctrl drivers
+
+# CONFIG_PINCTRL_EXYNOS is not set
+# CONFIG_PINCTRL_S3C64XX is not set
+# CONFIG_PINCTRL_SPRD_SC9860 is not set
+# CONFIG_PINCTRL_STARFIVE_JH7100 is not set
+# CONFIG_PINCTRL_STARFIVE_JH7110_SYS is not set
+# CONFIG_PINCTRL_STARFIVE_JH7110_AON is not set
+# CONFIG_PINCTRL_STM32F429 is not set
+# CONFIG_PINCTRL_STM32F469 is not set
+# CONFIG_PINCTRL_STM32F746 is not set
+# CONFIG_PINCTRL_STM32F769 is not set
+# CONFIG_PINCTRL_STM32H743 is not set
+# CONFIG_PINCTRL_STM32MP135 is not set
+# CONFIG_PINCTRL_STM32MP157 is not set
+# CONFIG_PINCTRL_STM32MP257 is not set
+# CONFIG_PINCTRL_TI_IODELAY is not set
+CONFIG_PINCTRL_UNIPHIER=y
+# CONFIG_PINCTRL_UNIPHIER_LD4 is not set
+# CONFIG_PINCTRL_UNIPHIER_PRO4 is not set
+# CONFIG_PINCTRL_UNIPHIER_SLD8 is not set
+# CONFIG_PINCTRL_UNIPHIER_PRO5 is not set
+# CONFIG_PINCTRL_UNIPHIER_PXS2 is not set
+# CONFIG_PINCTRL_UNIPHIER_LD6B is not set
+# CONFIG_PINCTRL_UNIPHIER_LD11 is not set
+# CONFIG_PINCTRL_UNIPHIER_LD20 is not set
+# CONFIG_PINCTRL_UNIPHIER_PXS3 is not set
+# CONFIG_PINCTRL_UNIPHIER_NX1 is not set
+# CONFIG_PINCTRL_TMPV7700 is not set
+CONFIG_GPIOLIB=y
+CONFIG_GPIOLIB_FASTPATH_LIMIT=512
+CONFIG_OF_GPIO=y
+CONFIG_GPIOLIB_IRQCHIP=y
+# CONFIG_DEBUG_GPIO is not set
+# CONFIG_GPIO_SYSFS is not set
+CONFIG_GPIO_CDEV=y
+CONFIG_GPIO_CDEV_V1=y
+CONFIG_GPIO_GENERIC=y
+
+#
+# Memory mapped GPIO drivers
+#
+# CONFIG_GPIO_74XX_MMIO is not set
+# CONFIG_GPIO_ALTERA is not set
+# CONFIG_GPIO_ASPEED is not set
+# CONFIG_GPIO_ASPEED_SGPIO is not set
+# CONFIG_GPIO_ATH79 is not set
+# CONFIG_GPIO_RASPBERRYPI_EXP is not set
+# CONFIG_GPIO_BCM_KONA is not set
+# CONFIG_GPIO_BCM_XGS_IPROC is not set
+# CONFIG_GPIO_BRCMSTB is not set
+# CONFIG_GPIO_CADENCE is not set
+# CONFIG_GPIO_CLPS711X is not set
+# CONFIG_GPIO_DWAPB is not set
+# CONFIG_GPIO_EIC_SPRD is not set
+# CONFIG_GPIO_EM is not set
+# CONFIG_GPIO_GE_FPGA is not set
+# CONFIG_GPIO_FTGPIO010 is not set
+# CONFIG_GPIO_GENERIC_PLATFORM is not set
+# CONFIG_GPIO_GRGPIO is not set
+# CONFIG_GPIO_HISI is not set
+# CONFIG_GPIO_HLWD is not set
+# CONFIG_GPIO_LOGICVC is not set
+# CONFIG_GPIO_LOONGSON_64BIT is not set
+# CONFIG_GPIO_LPC18XX is not set
+# CONFIG_GPIO_LPC32XX is not set
+# CONFIG_GPIO_MB86S7X is not set
+# CONFIG_GPIO_MPC8XXX is not set
+# CONFIG_GPIO_MT7621 is not set
+# CONFIG_GPIO_MXC is not set
+# CONFIG_GPIO_MXS is not set
+# CONFIG_GPIO_NOMADIK is not set
+# CONFIG_GPIO_NPCM_SGPIO is not set
+# CONFIG_GPIO_PXA is not set
+# CONFIG_GPIO_RCAR is not set
+# CONFIG_GPIO_RDA is not set
+# CONFIG_GPIO_ROCKCHIP is not set
+# CONFIG_GPIO_SAMA5D2_PIOBU is not set
+CONFIG_GPIO_SIFIVE=y
+# CONFIG_GPIO_SNPS_CREG is not set
+# CONFIG_GPIO_SPRD is not set
+# CONFIG_GPIO_STP_XWAY is not set
+# CONFIG_GPIO_SYSCON is not set
+# CONFIG_GPIO_TEGRA is not set
+# CONFIG_GPIO_TEGRA186 is not set
+# CONFIG_GPIO_TS4800 is not set
+# CONFIG_GPIO_UNIPHIER is not set
+# CONFIG_GPIO_VF610 is not set
+# CONFIG_GPIO_VISCONTI is not set
+# CONFIG_GPIO_XGENE_SB is not set
+# CONFIG_GPIO_XILINX is not set
+# CONFIG_GPIO_XLP is not set
+# CONFIG_GPIO_AMD_FCH is not set
+# CONFIG_GPIO_IDT3243X is not set
+# end of Memory mapped GPIO drivers
+
+#
+# I2C GPIO expanders
+#
+# CONFIG_GPIO_ADNP is not set
+# CONFIG_GPIO_FXL6408 is not set
+# CONFIG_GPIO_DS4520 is not set
+# CONFIG_GPIO_GW_PLD is not set
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_GPIO_PCA9570 is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_TPIC2810 is not set
+# CONFIG_GPIO_TS4900 is not set
+# end of I2C GPIO expanders
+
+#
+# MFD GPIO expanders
+#
+# CONFIG_GPIO_ELKHARTLAKE is not set
+# CONFIG_GPIO_PMIC_EIC_SPRD is not set
+# CONFIG_GPIO_SL28CPLD is not set
+# CONFIG_GPIO_TQMX86 is not set
+# end of MFD GPIO expanders
+
+#
+# SPI GPIO expanders
+#
+# CONFIG_GPIO_74X164 is not set
+# CONFIG_GPIO_MAX3191X is not set
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MC33880 is not set
+# CONFIG_GPIO_PISOSR is not set
+# CONFIG_GPIO_XRA1403 is not set
+# end of SPI GPIO expanders
+
+#
+# USB GPIO expanders
+#
+# end of USB GPIO expanders
+
+#
+# Virtual GPIO drivers
+#
+# CONFIG_GPIO_AGGREGATOR is not set
+# CONFIG_GPIO_LATCH is not set
+# CONFIG_GPIO_MOCKUP is not set
+# CONFIG_GPIO_VIRTIO is not set
+# CONFIG_GPIO_SIM is not set
+# end of Virtual GPIO drivers
+
+# CONFIG_W1 is not set
+CONFIG_POWER_RESET=y
+# CONFIG_POWER_RESET_BRCMKONA is not set
+# CONFIG_POWER_RESET_BRCMSTB is not set
+# CONFIG_POWER_RESET_GEMINI_POWEROFF is not set
+# CONFIG_POWER_RESET_GPIO is not set
+# CONFIG_POWER_RESET_GPIO_RESTART is not set
+# CONFIG_POWER_RESET_OCELOT_RESET is not set
+# CONFIG_POWER_RESET_ODROID_GO_ULTRA_POWEROFF is not set
+# CONFIG_POWER_RESET_LTC2952 is not set
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_RESET_KEYSTONE is not set
+CONFIG_POWER_RESET_SYSCON=y
+CONFIG_POWER_RESET_SYSCON_POWEROFF=y
+# CONFIG_POWER_RESET_RMOBILE is not set
+# CONFIG_SYSCON_REBOOT_MODE is not set
+# CONFIG_POWER_RESET_SC27XX is not set
+# CONFIG_NVMEM_REBOOT_MODE is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_IP5XXX_POWER is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_CHARGER_ADP5061 is not set
+# CONFIG_BATTERY_ACT8945A is not set
+# CONFIG_BATTERY_CW2015 is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_DS2782 is not set
+# CONFIG_BATTERY_SAMSUNG_SDI is not set
+# CONFIG_BATTERY_SBS is not set
+# CONFIG_CHARGER_SBS is not set
+# CONFIG_BATTERY_BQ27XXX is not set
+# CONFIG_BATTERY_MAX17042 is not set
+# CONFIG_CHARGER_ISP1704 is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_LP8727 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_LT3651 is not set
+# CONFIG_CHARGER_LTC4162L is not set
+# CONFIG_CHARGER_DETECTOR_MAX14656 is not set
+# CONFIG_CHARGER_MAX77976 is not set
+# CONFIG_BATTERY_PM8916_BMS_VM is not set
+# CONFIG_CHARGER_PM8916_LBC is not set
+# CONFIG_CHARGER_BQ2415X is not set
+# CONFIG_CHARGER_BQ24190 is not set
+# CONFIG_CHARGER_BQ24257 is not set
+# CONFIG_CHARGER_BQ24735 is not set
+# CONFIG_CHARGER_BQ2515X is not set
+# CONFIG_CHARGER_BQ25890 is not set
+# CONFIG_CHARGER_BQ25980 is not set
+# CONFIG_CHARGER_BQ256XX is not set
+# CONFIG_BATTERY_GAUGE_LTC2941 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_BATTERY_RT5033 is not set
+# CONFIG_CHARGER_RT9455 is not set
+# CONFIG_CHARGER_SC2731 is not set
+# CONFIG_CHARGER_BD99954 is not set
+# CONFIG_BATTERY_UG3105 is not set
+# CONFIG_FUEL_GAUGE_MM8013 is not set
+# CONFIG_HWMON is not set
+# CONFIG_THERMAL is not set
+CONFIG_WATCHDOG=y
+CONFIG_WATCHDOG_CORE=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+CONFIG_WATCHDOG_HANDLE_BOOT_ENABLED=y
+CONFIG_WATCHDOG_OPEN_TIMEOUT=0
+# CONFIG_WATCHDOG_SYSFS is not set
+# CONFIG_WATCHDOG_HRTIMER_PRETIMEOUT is not set
+
+#
+# Watchdog Pretimeout Governors
+#
+# CONFIG_WATCHDOG_PRETIMEOUT_GOV is not set
+
+#
+# Watchdog Device Drivers
+#
+# CONFIG_SOFT_WATCHDOG is not set
+# CONFIG_DA9052_WATCHDOG is not set
+# CONFIG_DA9055_WATCHDOG is not set
+# CONFIG_DA9063_WATCHDOG is not set
+# CONFIG_DA9062_WATCHDOG is not set
+# CONFIG_GPIO_WATCHDOG is not set
+# CONFIG_MENF21BMC_WATCHDOG is not set
+# CONFIG_XILINX_WATCHDOG is not set
+# CONFIG_XILINX_WINDOW_WATCHDOG is not set
+# CONFIG_ZIIRAVE_WATCHDOG is not set
+# CONFIG_MLX_WDT is not set
+# CONFIG_SL28CPLD_WATCHDOG is not set
+# CONFIG_ARMADA_37XX_WATCHDOG is not set
+# CONFIG_ASM9260_WATCHDOG is not set
+# CONFIG_AT91RM9200_WATCHDOG is not set
+# CONFIG_AT91SAM9X_WATCHDOG is not set
+# CONFIG_SAMA5D4_WATCHDOG is not set
+# CONFIG_CADENCE_WATCHDOG is not set
+# CONFIG_FTWDT010_WATCHDOG is not set
+# CONFIG_S3C2410_WATCHDOG is not set
+# CONFIG_SA1100_WATCHDOG is not set
+# CONFIG_DW_WATCHDOG is not set
+# CONFIG_EP93XX_WATCHDOG is not set
+# CONFIG_OMAP_WATCHDOG is not set
+# CONFIG_PNX4008_WATCHDOG is not set
+# CONFIG_DAVINCI_WATCHDOG is not set
+# CONFIG_K3_RTI_WATCHDOG is not set
+# CONFIG_RN5T618_WATCHDOG is not set
+# CONFIG_SUNXI_WATCHDOG is not set
+# CONFIG_NPCM7XX_WATCHDOG is not set
+# CONFIG_STMP3XXX_RTC_WATCHDOG is not set
+# CONFIG_TS4800_WATCHDOG is not set
+# CONFIG_TS72XX_WATCHDOG is not set
+# CONFIG_MAX63XX_WATCHDOG is not set
+# CONFIG_MAX77620_WATCHDOG is not set
+# CONFIG_IMX2_WDT is not set
+# CONFIG_IMX7ULP_WDT is not set
+# CONFIG_MOXART_WDT is not set
+# CONFIG_ST_LPC_WATCHDOG is not set
+# CONFIG_TEGRA_WATCHDOG is not set
+# CONFIG_QCOM_WDT is not set
+# CONFIG_MESON_GXBB_WATCHDOG is not set
+# CONFIG_MESON_WATCHDOG is not set
+# CONFIG_MEDIATEK_WATCHDOG is not set
+# CONFIG_DIGICOLOR_WATCHDOG is not set
+# CONFIG_LPC18XX_WATCHDOG is not set
+# CONFIG_RENESAS_WDT is not set
+# CONFIG_RENESAS_RZAWDT is not set
+# CONFIG_RENESAS_RZN1WDT is not set
+# CONFIG_RENESAS_RZG2LWDT is not set
+# CONFIG_ASPEED_WATCHDOG is not set
+CONFIG_STM32_WATCHDOG=y
+# CONFIG_UNIPHIER_WATCHDOG is not set
+# CONFIG_RTD119X_WATCHDOG is not set
+# CONFIG_REALTEK_OTTO_WDT is not set
+# CONFIG_SPRD_WATCHDOG is not set
+# CONFIG_VISCONTI_WATCHDOG is not set
+# CONFIG_MSC313E_WATCHDOG is not set
+# CONFIG_APPLE_WATCHDOG is not set
+# CONFIG_SUNPLUS_WATCHDOG is not set
+# CONFIG_ADVANTECH_WDT is not set
+# CONFIG_ADVANTECH_EC_WDT is not set
+# CONFIG_EBC_C384_WDT is not set
+# CONFIG_EXAR_WDT is not set
+# CONFIG_F71808E_WDT is not set
+# CONFIG_SC520_WDT is not set
+# CONFIG_SBC_FITPC2_WATCHDOG is not set
+# CONFIG_EUROTECH_WDT is not set
+# CONFIG_IB700_WDT is not set
+# CONFIG_IBMASR is not set
+# CONFIG_WAFER_WDT is not set
+# CONFIG_IT8712F_WDT is not set
+# CONFIG_IT87_WDT is not set
+# CONFIG_SC1200_WDT is not set
+# CONFIG_PC87413_WDT is not set
+# CONFIG_60XX_WDT is not set
+# CONFIG_CPU5_WDT is not set
+# CONFIG_SMSC_SCH311X_WDT is not set
+# CONFIG_SMSC37B787_WDT is not set
+# CONFIG_TQMX86_WDT is not set
+# CONFIG_W83627HF_WDT is not set
+# CONFIG_W83877F_WDT is not set
+# CONFIG_W83977F_WDT is not set
+# CONFIG_MACHZ_WDT is not set
+# CONFIG_SBC_EPX_C3_WATCHDOG is not set
+# CONFIG_BCM47XX_WDT is not set
+# CONFIG_JZ4740_WDT is not set
+# CONFIG_BCM2835_WDT is not set
+# CONFIG_BCM_KONA_WDT is not set
+# CONFIG_BCM_KONA_WDT_DEBUG is not set
+# CONFIG_BCM7038_WDT is not set
+# CONFIG_IMGPDC_WDT is not set
+# CONFIG_LOONGSON1_WDT is not set
+# CONFIG_GXP_WATCHDOG is not set
+# CONFIG_MT7621_WDT is not set
+# CONFIG_MPC5200_WDT is not set
+# CONFIG_MEN_A21_WDT is not set
+# CONFIG_STARFIVE_WATCHDOG is not set
+# CONFIG_UML_WATCHDOG is not set
+
+#
+# USB-based Watchdog Cards
+#
+# CONFIG_USBPCWATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+# CONFIG_MFD_ACT8945A is not set
+# CONFIG_MFD_SUN4I_GPADC is not set
+# CONFIG_MFD_AS3711 is not set
+# CONFIG_MFD_SMPRO is not set
+# CONFIG_MFD_AS3722 is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_AAT2870_CORE is not set
+# CONFIG_MFD_AT91_USART is not set
+# CONFIG_MFD_ATMEL_FLEXCOM is not set
+# CONFIG_MFD_ATMEL_HLCDC is not set
+# CONFIG_MFD_BCM590XX is not set
+# CONFIG_MFD_BD9571MWV is not set
+# CONFIG_MFD_AXP20X_I2C is not set
+# CONFIG_MFD_CS42L43_I2C is not set
+# CONFIG_MFD_MADERA is not set
+# CONFIG_MFD_MAX5970 is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_MFD_DA9052_SPI is not set
+# CONFIG_MFD_DA9052_I2C is not set
+# CONFIG_MFD_DA9055 is not set
+# CONFIG_MFD_DA9062 is not set
+# CONFIG_MFD_DA9063 is not set
+# CONFIG_MFD_DA9150 is not set
+# CONFIG_MFD_DLN2 is not set
+# CONFIG_MFD_ENE_KB3930 is not set
+# CONFIG_MFD_EXYNOS_LPASS is not set
+# CONFIG_MFD_GATEWORKS_GSC is not set
+# CONFIG_MFD_MC13XXX_SPI is not set
+# CONFIG_MFD_MC13XXX_I2C is not set
+# CONFIG_MFD_MP2629 is not set
+# CONFIG_MFD_MXS_LRADC is not set
+# CONFIG_MFD_MX25_TSADC is not set
+# CONFIG_MFD_HI6421_PMIC is not set
+# CONFIG_MFD_HI655X_PMIC is not set
+# CONFIG_INTEL_SOC_PMIC is not set
+# CONFIG_MFD_IQS62X is not set
+# CONFIG_MFD_KEMPLD is not set
+# CONFIG_MFD_88PM800 is not set
+# CONFIG_MFD_88PM805 is not set
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_MAX14577 is not set
+# CONFIG_MFD_MAX77541 is not set
+# CONFIG_MFD_MAX77620 is not set
+# CONFIG_MFD_MAX77650 is not set
+# CONFIG_MFD_MAX77686 is not set
+# CONFIG_MFD_MAX77693 is not set
+# CONFIG_MFD_MAX77714 is not set
+# CONFIG_MFD_MAX77843 is not set
+# CONFIG_MFD_MAX8907 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_MAX8997 is not set
+# CONFIG_MFD_MAX8998 is not set
+# CONFIG_MFD_MT6360 is not set
+# CONFIG_MFD_MT6370 is not set
+# CONFIG_MFD_MT6397 is not set
+# CONFIG_MFD_MENF21BMC is not set
+# CONFIG_MFD_OCELOT is not set
+# CONFIG_EZX_PCAP is not set
+# CONFIG_MFD_CPCAP is not set
+# CONFIG_MFD_VIPERBOARD is not set
+# CONFIG_MFD_NTXEC is not set
+# CONFIG_MFD_RETU is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_MFD_PM8XXX is not set
+# CONFIG_MFD_SY7636A is not set
+# CONFIG_MFD_RT4831 is not set
+# CONFIG_MFD_RT5033 is not set
+# CONFIG_MFD_RT5120 is not set
+# CONFIG_MFD_RC5T583 is not set
+# CONFIG_MFD_RK8XX_I2C is not set
+# CONFIG_MFD_RK8XX_SPI is not set
+# CONFIG_MFD_RN5T618 is not set
+# CONFIG_MFD_SEC_CORE is not set
+# CONFIG_MFD_SI476X_CORE is not set
+# CONFIG_MFD_SL28CPLD is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_SKY81452 is not set
+# CONFIG_MFD_SC27XX_PMIC is not set
+# CONFIG_RZ_MTU3 is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_MFD_STMPE is not set
+# CONFIG_MFD_SUN6I_PRCM is not set
+CONFIG_MFD_SYSCON=y
+# CONFIG_MFD_TI_AM335X_TSCADC is not set
+# CONFIG_MFD_LP3943 is not set
+# CONFIG_MFD_LP8788 is not set
+# CONFIG_MFD_TI_LMU is not set
+CONFIG_MFD_OMAP_USB_HOST=y
+# CONFIG_MFD_PALMAS is not set
+# CONFIG_TPS6105X is not set
+# CONFIG_TPS65010 is not set
+# CONFIG_TPS6507X is not set
+# CONFIG_MFD_TPS65086 is not set
+# CONFIG_MFD_TPS65090 is not set
+# CONFIG_MFD_TPS65217 is not set
+# CONFIG_MFD_TI_LP873X is not set
+# CONFIG_MFD_TI_LP87565 is not set
+# CONFIG_MFD_TPS65218 is not set
+# CONFIG_MFD_TPS65219 is not set
+# CONFIG_MFD_TPS6586X is not set
+# CONFIG_MFD_TPS65910 is not set
+# CONFIG_MFD_TPS65912_I2C is not set
+# CONFIG_MFD_TPS65912_SPI is not set
+# CONFIG_MFD_TPS6594_I2C is not set
+# CONFIG_MFD_TPS6594_SPI is not set
+# CONFIG_TWL4030_CORE is not set
+# CONFIG_TWL6040_CORE is not set
+# CONFIG_MFD_WL1273_CORE is not set
+# CONFIG_MFD_LM3533 is not set
+# CONFIG_MFD_TC3589X is not set
+# CONFIG_MFD_TQMX86 is not set
+# CONFIG_MFD_LOCHNAGAR is not set
+# CONFIG_MFD_ARIZONA_I2C is not set
+# CONFIG_MFD_ARIZONA_SPI is not set
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X_I2C is not set
+# CONFIG_MFD_WM831X_SPI is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_MFD_STW481X is not set
+# CONFIG_MFD_ROHM_BD718XX is not set
+# CONFIG_MFD_ROHM_BD71828 is not set
+# CONFIG_MFD_ROHM_BD957XMUF is not set
+# CONFIG_MFD_STM32_LPTIMER is not set
+# CONFIG_MFD_STM32_TIMERS is not set
+# CONFIG_MFD_STPMIC1 is not set
+# CONFIG_MFD_STMFX is not set
+# CONFIG_MFD_ATC260X_I2C is not set
+# CONFIG_MFD_KHADAS_MCU is not set
+# CONFIG_MFD_ACER_A500_EC is not set
+# CONFIG_MFD_QCOM_PM8008 is not set
+# CONFIG_MFD_INTEL_M10_BMC_SPI is not set
+# CONFIG_MFD_RSMU_I2C is not set
+# CONFIG_MFD_RSMU_SPI is not set
+# end of Multifunction device drivers
+
+# CONFIG_REGULATOR is not set
+# CONFIG_RC_CORE is not set
+
+#
+# CEC support
+#
+# CONFIG_MEDIA_CEC_SUPPORT is not set
+# end of CEC support
+
+# CONFIG_MEDIA_SUPPORT is not set
+
+#
+# Graphics support
+#
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_TEGRA_HOST1X is not set
+# CONFIG_IMX_IPUV3_CORE is not set
+# CONFIG_DRM is not set
+# CONFIG_DRM_DEBUG_MODESET_LOCK is not set
+
+#
+# Frame buffer Devices
+#
+# CONFIG_FB is not set
+# CONFIG_MMP_DISP is not set
+# end of Frame buffer Devices
+
+#
+# Backlight & LCD device support
+#
+# CONFIG_LCD_CLASS_DEVICE is not set
+# CONFIG_BACKLIGHT_CLASS_DEVICE is not set
+# end of Backlight & LCD device support
+
+#
+# Console display driver support
+#
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_DUMMY_CONSOLE_COLUMNS=80
+CONFIG_DUMMY_CONSOLE_ROWS=25
+# end of Console display driver support
+# end of Graphics support
+
+# CONFIG_SOUND is not set
+CONFIG_HID_SUPPORT=y
+CONFIG_HID=y
+# CONFIG_HID_BATTERY_STRENGTH is not set
+# CONFIG_HIDRAW is not set
+# CONFIG_UHID is not set
+CONFIG_HID_GENERIC=y
+
+#
+# Special HID drivers
+#
+# CONFIG_HID_A4TECH is not set
+# CONFIG_HID_ACCUTOUCH is not set
+# CONFIG_HID_ACRUX is not set
+# CONFIG_HID_APPLEIR is not set
+# CONFIG_HID_AUREAL is not set
+# CONFIG_HID_BELKIN is not set
+# CONFIG_HID_BETOP_FF is not set
+# CONFIG_HID_CHERRY is not set
+# CONFIG_HID_CHICONY is not set
+# CONFIG_HID_COUGAR is not set
+# CONFIG_HID_MACALLY is not set
+# CONFIG_HID_CMEDIA is not set
+# CONFIG_HID_CREATIVE_SB0540 is not set
+# CONFIG_HID_CYPRESS is not set
+# CONFIG_HID_DRAGONRISE is not set
+# CONFIG_HID_EMS_FF is not set
+# CONFIG_HID_ELECOM is not set
+# CONFIG_HID_ELO is not set
+# CONFIG_HID_EVISION is not set
+# CONFIG_HID_EZKEY is not set
+# CONFIG_HID_GEMBIRD is not set
+# CONFIG_HID_GFRM is not set
+# CONFIG_HID_GLORIOUS is not set
+# CONFIG_HID_HOLTEK is not set
+# CONFIG_HID_GOOGLE_STADIA_FF is not set
+# CONFIG_HID_VIVALDI is not set
+# CONFIG_HID_KEYTOUCH is not set
+# CONFIG_HID_KYE is not set
+# CONFIG_HID_UCLOGIC is not set
+# CONFIG_HID_WALTOP is not set
+# CONFIG_HID_VIEWSONIC is not set
+# CONFIG_HID_VRC2 is not set
+# CONFIG_HID_XIAOMI is not set
+# CONFIG_HID_GYRATION is not set
+# CONFIG_HID_ICADE is not set
+# CONFIG_HID_ITE is not set
+# CONFIG_HID_JABRA is not set
+# CONFIG_HID_TWINHAN is not set
+# CONFIG_HID_KENSINGTON is not set
+# CONFIG_HID_LCPOWER is not set
+# CONFIG_HID_LENOVO is not set
+# CONFIG_HID_LETSKETCH is not set
+# CONFIG_HID_MAGICMOUSE is not set
+# CONFIG_HID_MALTRON is not set
+# CONFIG_HID_MAYFLASH is not set
+# CONFIG_HID_MEGAWORLD_FF is not set
+# CONFIG_HID_REDRAGON is not set
+# CONFIG_HID_MICROSOFT is not set
+# CONFIG_HID_MONTEREY is not set
+# CONFIG_HID_MULTITOUCH is not set
+# CONFIG_HID_NTI is not set
+# CONFIG_HID_NTRIG is not set
+# CONFIG_HID_ORTEK is not set
+# CONFIG_HID_PANTHERLORD is not set
+# CONFIG_HID_PENMOUNT is not set
+# CONFIG_HID_PETALYNX is not set
+# CONFIG_HID_PICOLCD is not set
+# CONFIG_HID_PLANTRONICS is not set
+# CONFIG_HID_PXRC is not set
+# CONFIG_HID_RAZER is not set
+# CONFIG_HID_PRIMAX is not set
+# CONFIG_HID_RETRODE is not set
+# CONFIG_HID_ROCCAT is not set
+# CONFIG_HID_SAITEK is not set
+# CONFIG_HID_SAMSUNG is not set
+# CONFIG_HID_SEMITEK is not set
+# CONFIG_HID_SIGMAMICRO is not set
+# CONFIG_HID_SPEEDLINK is not set
+# CONFIG_HID_STEAM is not set
+# CONFIG_HID_STEELSERIES is not set
+# CONFIG_HID_SUNPLUS is not set
+# CONFIG_HID_RMI is not set
+# CONFIG_HID_GREENASIA is not set
+# CONFIG_HID_SMARTJOYPLUS is not set
+# CONFIG_HID_TIVO is not set
+# CONFIG_HID_TOPSEED is not set
+# CONFIG_HID_TOPRE is not set
+# CONFIG_HID_THRUSTMASTER is not set
+# CONFIG_HID_UDRAW_PS3 is not set
+# CONFIG_HID_WACOM is not set
+# CONFIG_HID_XINMO is not set
+# CONFIG_HID_ZEROPLUS is not set
+# CONFIG_HID_ZYDACRON is not set
+# CONFIG_HID_SENSOR_HUB is not set
+# CONFIG_HID_ALPS is not set
+# CONFIG_HID_MCP2200 is not set
+# CONFIG_HID_MCP2221 is not set
+# end of Special HID drivers
+
+#
+# HID-BPF support
+#
+# end of HID-BPF support
+
+#
+# USB HID support
+#
+CONFIG_USB_HID=y
+# CONFIG_HID_PID is not set
+# CONFIG_USB_HIDDEV is not set
+# end of USB HID support
+
+CONFIG_I2C_HID=y
+# CONFIG_I2C_HID_OF is not set
+# CONFIG_I2C_HID_OF_ELAN is not set
+# CONFIG_I2C_HID_OF_GOODIX is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_COMMON=y
+# CONFIG_USB_ULPI_BUS is not set
+# CONFIG_USB_CONN_GPIO is not set
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB=y
+# CONFIG_USB_ANNOUNCE_NEW_DEVICES is not set
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEFAULT_PERSIST=y
+# CONFIG_USB_FEW_INIT_RETRIES is not set
+# CONFIG_USB_DYNAMIC_MINORS is not set
+# CONFIG_USB_OTG is not set
+# CONFIG_USB_OTG_PRODUCTLIST is not set
+# CONFIG_USB_OTG_DISABLE_EXTERNAL_HUB is not set
+CONFIG_USB_AUTOSUSPEND_DELAY=2
+CONFIG_USB_DEFAULT_AUTHORIZATION_MODE=1
+# CONFIG_USB_MON is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+CONFIG_USB_XHCI_HCD=y
+# CONFIG_USB_XHCI_DBGCAP is not set
+# CONFIG_USB_XHCI_PCI_RENESAS is not set
+CONFIG_USB_XHCI_PLATFORM=y
+# CONFIG_USB_XHCI_HISTB is not set
+# CONFIG_USB_XHCI_MTK is not set
+# CONFIG_USB_XHCI_MVEBU is not set
+# CONFIG_USB_XHCI_RCAR is not set
+# CONFIG_USB_BRCMSTB is not set
+CONFIG_USB_EHCI_HCD=y
+# CONFIG_USB_EHCI_ROOT_HUB_TT is not set
+CONFIG_USB_EHCI_TT_NEWSCHED=y
+# CONFIG_USB_EHCI_FSL is not set
+# CONFIG_USB_EHCI_HCD_NPCM7XX is not set
+CONFIG_USB_EHCI_HCD_OMAP=y
+# CONFIG_USB_EHCI_HCD_ORION is not set
+# CONFIG_USB_EHCI_HCD_SPEAR is not set
+# CONFIG_USB_EHCI_HCD_STI is not set
+# CONFIG_USB_EHCI_HCD_AT91 is not set
+# CONFIG_USB_EHCI_SH is not set
+# CONFIG_USB_EHCI_EXYNOS is not set
+# CONFIG_USB_EHCI_MV is not set
+CONFIG_USB_EHCI_HCD_PLATFORM=y
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+# CONFIG_USB_MAX3421_HCD is not set
+CONFIG_USB_OHCI_HCD=y
+# CONFIG_USB_OHCI_HCD_SPEAR is not set
+# CONFIG_USB_OHCI_HCD_STI is not set
+# CONFIG_USB_OHCI_HCD_S3C2410 is not set
+# CONFIG_USB_OHCI_HCD_AT91 is not set
+# CONFIG_USB_OHCI_HCD_OMAP3 is not set
+# CONFIG_USB_OHCI_HCD_DAVINCI is not set
+# CONFIG_USB_OHCI_EXYNOS is not set
+CONFIG_USB_OHCI_HCD_PLATFORM=y
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_HCD_TEST_MODE is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+# CONFIG_USB_WDM is not set
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+
+#
+# USB dual-mode controller drivers
+#
+# CONFIG_USB_CDNS_SUPPORT is not set
+# CONFIG_USB_FOTG210 is not set
+# CONFIG_USB_MTU3 is not set
+CONFIG_USB_MUSB_HDRC=y
+CONFIG_USB_MUSB_HOST=y
+
+#
+# Platform Glue Layer
+#
+# CONFIG_USB_MUSB_TUSB6010 is not set
+# CONFIG_USB_MUSB_DSPS is not set
+# CONFIG_USB_MUSB_UX500 is not set
+# CONFIG_USB_MUSB_MEDIATEK is not set
+# CONFIG_USB_MUSB_POLARFIRE_SOC is not set
+
+#
+# MUSB DMA mode
+#
+# CONFIG_MUSB_PIO_ONLY is not set
+# CONFIG_USB_DWC3 is not set
+# CONFIG_USB_DWC2 is not set
+# CONFIG_USB_CHIPIDEA is not set
+# CONFIG_USB_ISP1760 is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_QCOM_EUD is not set
+# CONFIG_APPLE_MFI_FASTCHARGE is not set
+# CONFIG_USB_SISUSBVGA is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_EHSET_TEST_FIXTURE is not set
+# CONFIG_USB_ISIGHTFW is not set
+# CONFIG_USB_YUREX is not set
+# CONFIG_USB_EZUSB_FX2 is not set
+# CONFIG_USB_HUB_USB251XB is not set
+# CONFIG_USB_HSIC_USB3503 is not set
+# CONFIG_USB_HSIC_USB4604 is not set
+# CONFIG_USB_LINK_LAYER_TEST is not set
+# CONFIG_USB_CHAOSKEY is not set
+# CONFIG_BRCM_USB_PINMAP is not set
+# CONFIG_USB_ONBOARD_HUB is not set
+
+#
+# USB Physical Layer drivers
+#
+CONFIG_USB_PHY=y
+# CONFIG_KEYSTONE_USB_PHY is not set
+CONFIG_NOP_USB_XCEIV=y
+# CONFIG_AM335X_PHY_USB is not set
+# CONFIG_USB_GPIO_VBUS is not set
+# CONFIG_USB_ISP1301 is not set
+# CONFIG_USB_TEGRA_PHY is not set
+# CONFIG_USB_ULPI is not set
+# end of USB Physical Layer drivers
+
+# CONFIG_USB_GADGET is not set
+# CONFIG_TYPEC is not set
+# CONFIG_USB_ROLE_SWITCH is not set
+CONFIG_MMC=y
+CONFIG_PWRSEQ_EMMC=y
+CONFIG_PWRSEQ_SIMPLE=y
+# CONFIG_SDIO_UART is not set
+# CONFIG_MMC_TEST is not set
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+# CONFIG_MMC_DEBUG is not set
+# CONFIG_MMC_SUNPLUS is not set
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_IO_ACCESSORS=y
+CONFIG_MMC_SDHCI_PLTFM=y
+# CONFIG_MMC_SDHCI_OF_ARASAN is not set
+# CONFIG_MMC_SDHCI_OF_ASPEED is not set
+# CONFIG_MMC_SDHCI_OF_AT91 is not set
+# CONFIG_MMC_SDHCI_OF_ESDHC is not set
+# CONFIG_MMC_SDHCI_OF_DWCMSHC is not set
+# CONFIG_MMC_SDHCI_OF_SPARX5 is not set
+CONFIG_MMC_SDHCI_CADENCE=y
+# CONFIG_MMC_SDHCI_ESDHC_IMX is not set
+# CONFIG_MMC_SDHCI_DOVE is not set
+# CONFIG_MMC_SDHCI_TEGRA is not set
+# CONFIG_MMC_SDHCI_S3C is not set
+# CONFIG_MMC_SDHCI_PXAV3 is not set
+# CONFIG_MMC_SDHCI_PXAV2 is not set
+# CONFIG_MMC_SDHCI_SPEAR is not set
+# CONFIG_MMC_SDHCI_BCM_KONA is not set
+# CONFIG_MMC_SDHCI_F_SDH30 is not set
+# CONFIG_MMC_SDHCI_MILBEAUT is not set
+# CONFIG_MMC_SDHCI_IPROC is not set
+# CONFIG_MMC_SDHCI_NPCM is not set
+# CONFIG_MMC_MESON_GX is not set
+# CONFIG_MMC_MESON_MX_SDHC is not set
+# CONFIG_MMC_MESON_MX_SDIO is not set
+# CONFIG_MMC_MOXART is not set
+# CONFIG_MMC_SDHCI_ST is not set
+# CONFIG_MMC_OMAP_HS is not set
+# CONFIG_MMC_SDHCI_MSM is not set
+# CONFIG_MMC_DAVINCI is not set
+CONFIG_MMC_SPI=y
+# CONFIG_MMC_SDHCI_SPRD is not set
+# CONFIG_MMC_SDHI is not set
+# CONFIG_MMC_UNIPHIER is not set
+# CONFIG_MMC_DW is not set
+# CONFIG_MMC_SH_MMCIF is not set
+# CONFIG_MMC_VUB300 is not set
+# CONFIG_MMC_USHC is not set
+# CONFIG_MMC_USDHI6ROL0 is not set
+# CONFIG_MMC_CQHCI is not set
+# CONFIG_MMC_HSQ is not set
+# CONFIG_MMC_BCM2835 is not set
+# CONFIG_MMC_MTK is not set
+# CONFIG_MMC_SDHCI_BRCMSTB is not set
+# CONFIG_MMC_SDHCI_XENON is not set
+# CONFIG_MMC_SDHCI_OMAP is not set
+# CONFIG_MMC_SDHCI_AM654 is not set
+# CONFIG_MMC_OWL is not set
+# CONFIG_MMC_LITEX is not set
+# CONFIG_MEMSTICK is not set
+# CONFIG_NEW_LEDS is not set
+# CONFIG_ACCESSIBILITY is not set
+CONFIG_EDAC_SUPPORT=y
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+CONFIG_RTC_SYSTOHC=y
+CONFIG_RTC_SYSTOHC_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+CONFIG_RTC_NVMEM=y
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+# CONFIG_RTC_DRV_ABB5ZES3 is not set
+# CONFIG_RTC_DRV_ABEOZ9 is not set
+# CONFIG_RTC_DRV_ABX80X is not set
+# CONFIG_RTC_DRV_BRCMSTB is not set
+# CONFIG_RTC_DRV_DS1307 is not set
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_HYM8563 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_MAX8907 is not set
+# CONFIG_RTC_DRV_MAX31335 is not set
+# CONFIG_RTC_DRV_MAX77686 is not set
+# CONFIG_RTC_DRV_NCT3018Y is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_ISL12022 is not set
+# CONFIG_RTC_DRV_ISL12026 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8523 is not set
+# CONFIG_RTC_DRV_PCF85063 is not set
+# CONFIG_RTC_DRV_PCF85363 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8010 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+# CONFIG_RTC_DRV_EM3027 is not set
+# CONFIG_RTC_DRV_RV3028 is not set
+# CONFIG_RTC_DRV_RV3032 is not set
+# CONFIG_RTC_DRV_RV8803 is not set
+# CONFIG_RTC_DRV_S5M is not set
+# CONFIG_RTC_DRV_SD3078 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T93 is not set
+# CONFIG_RTC_DRV_M41T94 is not set
+# CONFIG_RTC_DRV_DS1302 is not set
+# CONFIG_RTC_DRV_DS1305 is not set
+# CONFIG_RTC_DRV_DS1343 is not set
+# CONFIG_RTC_DRV_DS1347 is not set
+# CONFIG_RTC_DRV_DS1390 is not set
+# CONFIG_RTC_DRV_MAX6916 is not set
+# CONFIG_RTC_DRV_R9701 is not set
+# CONFIG_RTC_DRV_RX4581 is not set
+# CONFIG_RTC_DRV_RS5C348 is not set
+# CONFIG_RTC_DRV_MAX6902 is not set
+# CONFIG_RTC_DRV_PCF2123 is not set
+# CONFIG_RTC_DRV_MCP795 is not set
+CONFIG_RTC_I2C_AND_SPI=y
+
+#
+# SPI and I2C RTC drivers
+#
+# CONFIG_RTC_DRV_DS3232 is not set
+# CONFIG_RTC_DRV_PCF2127 is not set
+# CONFIG_RTC_DRV_RV3029C2 is not set
+# CONFIG_RTC_DRV_RX6110 is not set
+
+#
+# Platform RTC drivers
+#
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1685_FAMILY is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_DS2404 is not set
+# CONFIG_RTC_DRV_EFI is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_GAMECUBE is not set
+# CONFIG_RTC_DRV_SC27XX is not set
+CONFIG_RTC_DRV_SPEAR=y
+# CONFIG_RTC_DRV_ZYNQMP is not set
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_RTC_DRV_ASM9260 is not set
+# CONFIG_RTC_DRV_DIGICOLOR is not set
+# CONFIG_RTC_DRV_IMXDI is not set
+# CONFIG_RTC_DRV_FSL_FTM_ALARM is not set
+# CONFIG_RTC_DRV_MESON is not set
+# CONFIG_RTC_DRV_MESON_VRTC is not set
+# CONFIG_RTC_DRV_OMAP is not set
+# CONFIG_RTC_DRV_S3C is not set
+# CONFIG_RTC_DRV_EP93XX is not set
+# CONFIG_RTC_DRV_AT91RM9200 is not set
+# CONFIG_RTC_DRV_AT91SAM9 is not set
+# CONFIG_RTC_DRV_RZN1 is not set
+# CONFIG_RTC_DRV_GENERIC is not set
+# CONFIG_RTC_DRV_VT8500 is not set
+# CONFIG_RTC_DRV_SUN6I is not set
+# CONFIG_RTC_DRV_SUNXI is not set
+# CONFIG_RTC_DRV_MV is not set
+# CONFIG_RTC_DRV_ARMADA38X is not set
+# CONFIG_RTC_DRV_CADENCE is not set
+# CONFIG_RTC_DRV_FTRTC010 is not set
+# CONFIG_RTC_DRV_STMP is not set
+# CONFIG_RTC_DRV_JZ4740 is not set
+# CONFIG_RTC_DRV_LOONGSON is not set
+# CONFIG_RTC_DRV_LPC24XX is not set
+# CONFIG_RTC_DRV_LPC32XX is not set
+# CONFIG_RTC_DRV_PM8XXX is not set
+# CONFIG_RTC_DRV_TEGRA is not set
+# CONFIG_RTC_DRV_MXC is not set
+# CONFIG_RTC_DRV_MXC_V2 is not set
+# CONFIG_RTC_DRV_SNVS is not set
+# CONFIG_RTC_DRV_BBNSM is not set
+# CONFIG_RTC_DRV_MOXART is not set
+# CONFIG_RTC_DRV_MT2712 is not set
+# CONFIG_RTC_DRV_MT6397 is not set
+# CONFIG_RTC_DRV_MT7622 is not set
+# CONFIG_RTC_DRV_XGENE is not set
+# CONFIG_RTC_DRV_R7301 is not set
+# CONFIG_RTC_DRV_STM32 is not set
+# CONFIG_RTC_DRV_RTD119X is not set
+# CONFIG_RTC_DRV_ASPEED is not set
+# CONFIG_RTC_DRV_TI_K3 is not set
+# CONFIG_RTC_DRV_MA35D1 is not set
+
+#
+# HID Sensor RTC drivers
+#
+CONFIG_RTC_DRV_GOLDFISH=y
+# CONFIG_RTC_DRV_MSC313 is not set
+# CONFIG_RTC_DRV_SSD202D is not set
+CONFIG_DMADEVICES=y
+# CONFIG_DMADEVICES_DEBUG is not set
+
+#
+# DMA Devices
+#
+CONFIG_DMA_ENGINE=y
+CONFIG_DMA_VIRTUAL_CHANNELS=y
+CONFIG_DMA_OF=y
+# CONFIG_ALTERA_MSGDMA is not set
+# CONFIG_APPLE_ADMAC is not set
+# CONFIG_AXI_DMAC is not set
+# CONFIG_DMA_JZ4780 is not set
+# CONFIG_DMA_SA11X0 is not set
+# CONFIG_DMA_SUN6I is not set
+# CONFIG_DW_AXI_DMAC is not set
+# CONFIG_EP93XX_DMA is not set
+# CONFIG_FSL_EDMA is not set
+# CONFIG_IMG_MDC_DMA is not set
+# CONFIG_INTEL_IDMA64 is not set
+# CONFIG_K3_DMA is not set
+# CONFIG_LS2X_APB_DMA is not set
+# CONFIG_MCF_EDMA is not set
+# CONFIG_MILBEAUT_HDMAC is not set
+# CONFIG_MILBEAUT_XDMAC is not set
+# CONFIG_MMP_PDMA is not set
+# CONFIG_MMP_TDMA is not set
+# CONFIG_MV_XOR is not set
+# CONFIG_MXS_DMA is not set
+# CONFIG_NBPFAXI_DMA is not set
+# CONFIG_STM32_DMA is not set
+# CONFIG_STM32_DMAMUX is not set
+# CONFIG_STM32_MDMA is not set
+# CONFIG_SPRD_DMA is not set
+# CONFIG_TEGRA20_APB_DMA is not set
+# CONFIG_TEGRA210_ADMA is not set
+# CONFIG_TIMB_DMA is not set
+# CONFIG_UNIPHIER_MDMAC is not set
+# CONFIG_UNIPHIER_XDMAC is not set
+# CONFIG_XGENE_DMA is not set
+# CONFIG_XILINX_DMA is not set
+# CONFIG_XILINX_XDMA is not set
+# CONFIG_XILINX_ZYNQMP_DMA is not set
+# CONFIG_XILINX_ZYNQMP_DPDMA is not set
+# CONFIG_MTK_HSDMA is not set
+# CONFIG_MTK_CQDMA is not set
+# CONFIG_QCOM_ADM is not set
+# CONFIG_QCOM_HIDMA_MGMT is not set
+# CONFIG_QCOM_HIDMA is not set
+# CONFIG_DW_DMAC is not set
+# CONFIG_SF_PDMA is not set
+CONFIG_RENESAS_DMA=y
+CONFIG_SH_DMAE_BASE=y
+# CONFIG_SH_DMAE is not set
+# CONFIG_RCAR_DMAC is not set
+# CONFIG_RENESAS_USB_DMAC is not set
+# CONFIG_RZ_DMAC is not set
+CONFIG_TI_EDMA=y
+CONFIG_DMA_OMAP=y
+CONFIG_TI_DMA_CROSSBAR=y
+# CONFIG_INTEL_LDMA is not set
+
+#
+# DMA Clients
+#
+# CONFIG_ASYNC_TX_DMA is not set
+# CONFIG_DMATEST is not set
+
+#
+# DMABUF options
+#
+CONFIG_SYNC_FILE=y
+# CONFIG_SW_SYNC is not set
+# CONFIG_UDMABUF is not set
+# CONFIG_DMABUF_MOVE_NOTIFY is not set
+# CONFIG_DMABUF_DEBUG is not set
+# CONFIG_DMABUF_SELFTESTS is not set
+# CONFIG_DMABUF_HEAPS is not set
+# CONFIG_DMABUF_SYSFS_STATS is not set
+# end of DMABUF options
+
+# CONFIG_UIO is not set
+# CONFIG_VFIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+CONFIG_VIRTIO_ANCHOR=y
+CONFIG_VIRTIO=y
+# CONFIG_VIRTIO_MENU is not set
+# CONFIG_VHOST_MENU is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+# end of Microsoft Hyper-V guest support
+
+# CONFIG_GREYBUS is not set
+# CONFIG_COMEDI is not set
+# CONFIG_STAGING is not set
+CONFIG_GOLDFISH=y
+# CONFIG_GOLDFISH_PIPE is not set
+# CONFIG_CHROME_PLATFORMS is not set
+# CONFIG_MELLANOX_PLATFORM is not set
+# CONFIG_OLPC_XO175 is not set
+CONFIG_SURFACE_PLATFORMS=y
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Clock driver for ARM Reference designs
+#
+# CONFIG_CLK_ICST is not set
+# CONFIG_CLK_SP810 is not set
+# end of Clock driver for ARM Reference designs
+
+# CONFIG_CLK_HSDK is not set
+# CONFIG_LMK04832 is not set
+# CONFIG_COMMON_CLK_APPLE_NCO is not set
+# CONFIG_COMMON_CLK_MAX77686 is not set
+# CONFIG_COMMON_CLK_MAX9485 is not set
+# CONFIG_COMMON_CLK_HI655X is not set
+# CONFIG_COMMON_CLK_SCMI is not set
+# CONFIG_COMMON_CLK_SCPI is not set
+# CONFIG_COMMON_CLK_SI5341 is not set
+# CONFIG_COMMON_CLK_SI5351 is not set
+# CONFIG_COMMON_CLK_SI514 is not set
+# CONFIG_COMMON_CLK_SI544 is not set
+# CONFIG_COMMON_CLK_SI570 is not set
+# CONFIG_COMMON_CLK_BM1880 is not set
+# CONFIG_COMMON_CLK_CDCE706 is not set
+# CONFIG_COMMON_CLK_TPS68470 is not set
+# CONFIG_COMMON_CLK_CDCE925 is not set
+# CONFIG_COMMON_CLK_CS2000_CP is not set
+# CONFIG_COMMON_CLK_EN7523 is not set
+# CONFIG_COMMON_CLK_FSL_FLEXSPI is not set
+# CONFIG_COMMON_CLK_FSL_SAI is not set
+# CONFIG_COMMON_CLK_GEMINI is not set
+# CONFIG_COMMON_CLK_LAN966X is not set
+# CONFIG_COMMON_CLK_ASPEED is not set
+# CONFIG_COMMON_CLK_S2MPS11 is not set
+# CONFIG_COMMON_CLK_AXI_CLKGEN is not set
+# CONFIG_CLK_QORIQ is not set
+# CONFIG_CLK_LS1028A_PLLDIG is not set
+# CONFIG_COMMON_CLK_XGENE is not set
+# CONFIG_COMMON_CLK_LOONGSON2 is not set
+# CONFIG_COMMON_CLK_RS9_PCIE is not set
+# CONFIG_COMMON_CLK_SI521XX is not set
+# CONFIG_COMMON_CLK_VC3 is not set
+# CONFIG_COMMON_CLK_VC5 is not set
+# CONFIG_COMMON_CLK_VC7 is not set
+# CONFIG_COMMON_CLK_MMP2_AUDIO is not set
+# CONFIG_COMMON_CLK_FIXED_MMIO is not set
+# CONFIG_COMMON_CLK_SP7021 is not set
+# CONFIG_CLK_ACTIONS is not set
+CONFIG_CLK_ANALOGBITS_WRPLL_CLN28HPC=y
+# CONFIG_CLK_BAIKAL_T1 is not set
+# CONFIG_CLK_BCM2711_DVP is not set
+# CONFIG_CLK_BCM2835 is not set
+# CONFIG_CLK_BCM_63XX is not set
+# CONFIG_CLK_BCM_63XX_GATE is not set
+# CONFIG_CLK_BCM63268_TIMER is not set
+# CONFIG_CLK_BCM_KONA is not set
+# CONFIG_CLK_BCM_CYGNUS is not set
+# CONFIG_CLK_BCM_HR2 is not set
+# CONFIG_CLK_BCM_NSP is not set
+# CONFIG_CLK_BCM_NS2 is not set
+# CONFIG_CLK_BCM_SR is not set
+# CONFIG_CLK_RASPBERRYPI is not set
+# CONFIG_COMMON_CLK_HI3516CV300 is not set
+# CONFIG_COMMON_CLK_HI3519 is not set
+# CONFIG_COMMON_CLK_HI3559A is not set
+# CONFIG_COMMON_CLK_HI3660 is not set
+# CONFIG_COMMON_CLK_HI3670 is not set
+# CONFIG_COMMON_CLK_HI3798CV200 is not set
+# CONFIG_COMMON_CLK_HI6220 is not set
+# CONFIG_RESET_HISI is not set
+# CONFIG_COMMON_CLK_BOSTON is not set
+# CONFIG_MXC_CLK is not set
+# CONFIG_CLK_IMX8MM is not set
+# CONFIG_CLK_IMX8MN is not set
+# CONFIG_CLK_IMX8MP is not set
+# CONFIG_CLK_IMX8MQ is not set
+# CONFIG_CLK_IMX8ULP is not set
+# CONFIG_CLK_IMX93 is not set
+# CONFIG_CLK_IMXRT1050 is not set
+
+#
+# Ingenic SoCs drivers
+#
+# CONFIG_INGENIC_CGU_JZ4740 is not set
+# CONFIG_INGENIC_CGU_JZ4755 is not set
+# CONFIG_INGENIC_CGU_JZ4725B is not set
+# CONFIG_INGENIC_CGU_JZ4760 is not set
+# CONFIG_INGENIC_CGU_JZ4770 is not set
+# CONFIG_INGENIC_CGU_JZ4780 is not set
+# CONFIG_INGENIC_CGU_X1000 is not set
+# CONFIG_INGENIC_CGU_X1830 is not set
+# CONFIG_INGENIC_TCU_CLK is not set
+# end of Ingenic SoCs drivers
+
+# CONFIG_COMMON_CLK_KEYSTONE is not set
+# CONFIG_TI_SYSCON_CLK is not set
+
+#
+# Clock driver for MediaTek SoC
+#
+# CONFIG_COMMON_CLK_MEDIATEK_FHCTL is not set
+# CONFIG_COMMON_CLK_MT2701 is not set
+# CONFIG_COMMON_CLK_MT2712 is not set
+# CONFIG_COMMON_CLK_MT6765 is not set
+# CONFIG_COMMON_CLK_MT6779 is not set
+# CONFIG_COMMON_CLK_MT6795 is not set
+# CONFIG_COMMON_CLK_MT6797 is not set
+# CONFIG_COMMON_CLK_MT7622 is not set
+# CONFIG_COMMON_CLK_MT7629 is not set
+# CONFIG_COMMON_CLK_MT7981 is not set
+# CONFIG_COMMON_CLK_MT7986 is not set
+# CONFIG_COMMON_CLK_MT7988 is not set
+# CONFIG_COMMON_CLK_MT8135 is not set
+# CONFIG_COMMON_CLK_MT8167 is not set
+# CONFIG_COMMON_CLK_MT8173 is not set
+# CONFIG_COMMON_CLK_MT8183 is not set
+# CONFIG_COMMON_CLK_MT8186 is not set
+# CONFIG_COMMON_CLK_MT8188 is not set
+# CONFIG_COMMON_CLK_MT8192 is not set
+# CONFIG_COMMON_CLK_MT8195 is not set
+# CONFIG_COMMON_CLK_MT8365 is not set
+# CONFIG_COMMON_CLK_MT8516 is not set
+# end of Clock driver for MediaTek SoC
+
+#
+# Clock support for Amlogic platforms
+#
+# end of Clock support for Amlogic platforms
+
+# CONFIG_MSTAR_MSC313_CPUPLL is not set
+# CONFIG_MSTAR_MSC313_MPLL is not set
+# CONFIG_MCHP_CLK_MPFS is not set
+CONFIG_COMMON_CLK_NUVOTON=y
+CONFIG_CLK_MA35D1=y
+# CONFIG_COMMON_CLK_PISTACHIO is not set
+# CONFIG_COMMON_CLK_QCOM is not set
+# CONFIG_CLK_MT7621 is not set
+# CONFIG_CLK_MTMIPS is not set
+# CONFIG_CLK_RENESAS is not set
+# CONFIG_COMMON_CLK_SAMSUNG is not set
+CONFIG_CLK_SIFIVE=y
+CONFIG_CLK_SIFIVE_PRCI=y
+# CONFIG_CLK_INTEL_SOCFPGA is not set
+# CONFIG_SPRD_COMMON_CLK is not set
+# CONFIG_CLK_STARFIVE_JH7100 is not set
+# CONFIG_CLK_STARFIVE_JH7110_PLL is not set
+# CONFIG_CLK_STARFIVE_JH7110_SYS is not set
+CONFIG_CLK_SUNXI=y
+CONFIG_CLK_SUNXI_CLOCKS=y
+CONFIG_CLK_SUNXI_PRCM_SUN6I=y
+CONFIG_CLK_SUNXI_PRCM_SUN8I=y
+CONFIG_CLK_SUNXI_PRCM_SUN9I=y
+# CONFIG_SUNXI_CCU is not set
+CONFIG_COMMON_CLK_STM32MP=y
+CONFIG_COMMON_CLK_STM32MP135=y
+CONFIG_COMMON_CLK_STM32MP157=y
+# CONFIG_COMMON_CLK_TI_ADPLL is not set
+# CONFIG_CLK_UNIPHIER is not set
+# CONFIG_COMMON_CLK_VISCONTI is not set
+# CONFIG_CLK_LGM_CGU is not set
+# CONFIG_XILINX_VCU is not set
+# CONFIG_COMMON_CLK_XLNX_CLKWZRD is not set
+# CONFIG_COMMON_CLK_ZYNQMP is not set
+# CONFIG_HWSPINLOCK is not set
+
+#
+# Clock Source drivers
+#
+CONFIG_TIMER_OF=y
+CONFIG_TIMER_PROBE=y
+# CONFIG_BCM2835_TIMER is not set
+# CONFIG_BCM_KONA_TIMER is not set
+# CONFIG_DAVINCI_TIMER is not set
+# CONFIG_DIGICOLOR_TIMER is not set
+# CONFIG_OMAP_DM_TIMER is not set
+# CONFIG_DW_APB_TIMER is not set
+# CONFIG_FTTMR010_TIMER is not set
+# CONFIG_IXP4XX_TIMER is not set
+# CONFIG_MESON6_TIMER is not set
+# CONFIG_OWL_TIMER is not set
+# CONFIG_RDA_TIMER is not set
+# CONFIG_SUN4I_TIMER is not set
+# CONFIG_SUN5I_HSTIMER is not set
+# CONFIG_TEGRA_TIMER is not set
+# CONFIG_TEGRA186_TIMER is not set
+# CONFIG_VT8500_TIMER is not set
+# CONFIG_NPCM7XX_TIMER is not set
+# CONFIG_CADENCE_TTC_TIMER is not set
+# CONFIG_ASM9260_TIMER is not set
+# CONFIG_CLKSRC_DBX500_PRCMU is not set
+# CONFIG_CLPS711X_TIMER is not set
+# CONFIG_MXS_TIMER is not set
+# CONFIG_NSPIRE_TIMER is not set
+# CONFIG_INTEGRATOR_AP_TIMER is not set
+# CONFIG_CLKSRC_PISTACHIO is not set
+# CONFIG_CLKSRC_TI_32K is not set
+# CONFIG_CLKSRC_STM32_LP is not set
+# CONFIG_CLKSRC_MPS2 is not set
+# CONFIG_ARC_TIMERS is not set
+# CONFIG_ARM_TIMER_SP804 is not set
+# CONFIG_ARMV7M_SYSTICK is not set
+# CONFIG_ATMEL_PIT is not set
+# CONFIG_ATMEL_ST is not set
+# CONFIG_CLKSRC_SAMSUNG_PWM is not set
+# CONFIG_FSL_FTM_TIMER is not set
+# CONFIG_MTK_TIMER is not set
+# CONFIG_MTK_CPUX_TIMER is not set
+# CONFIG_SPRD_TIMER is not set
+# CONFIG_CLKSRC_JCORE_PIT is not set
+# CONFIG_SH_TIMER_CMT is not set
+# CONFIG_SH_TIMER_MTU2 is not set
+# CONFIG_RENESAS_OSTM is not set
+# CONFIG_SH_TIMER_TMU is not set
+# CONFIG_EM_TIMER_STI is not set
+# CONFIG_CLKSRC_VERSATILE is not set
+# CONFIG_CLKSRC_PXA is not set
+# CONFIG_TIMER_IMX_SYS_CTR is not set
+# CONFIG_CLKSRC_LOONGSON1_PWM is not set
+# CONFIG_CLKSRC_ST_LPC is not set
+# CONFIG_GXP_TIMER is not set
+CONFIG_RISCV_TIMER=y
+# CONFIG_CLINT_TIMER is not set
+# CONFIG_MSC313E_TIMER is not set
+# CONFIG_INGENIC_TIMER is not set
+# CONFIG_INGENIC_SYSOST is not set
+# CONFIG_INGENIC_OST is not set
+# CONFIG_GOLDFISH_TIMER is not set
+# end of Clock Source drivers
+
+# CONFIG_MAILBOX is not set
+CONFIG_IOMMU_SUPPORT=y
+
+#
+# Generic IOMMU Pagetable Support
+#
+# CONFIG_IOMMU_IO_PGTABLE_ARMV7S is not set
+# end of Generic IOMMU Pagetable Support
+
+# CONFIG_IOMMU_DEBUGFS is not set
+# CONFIG_IOMMUFD is not set
+# CONFIG_OMAP_IOMMU is not set
+# CONFIG_ROCKCHIP_IOMMU is not set
+# CONFIG_SUN50I_IOMMU is not set
+# CONFIG_EXYNOS_IOMMU is not set
+# CONFIG_MTK_IOMMU is not set
+# CONFIG_SPRD_IOMMU is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_REMOTEPROC is not set
+# end of Remoteproc drivers
+
+#
+# Rpmsg drivers
+#
+CONFIG_RPMSG=y
+CONFIG_RPMSG_CTRL=y
+CONFIG_RPMSG_NS=y
+CONFIG_RPMSG_VIRTIO=y
+# end of Rpmsg drivers
+
+# CONFIG_SOUNDWIRE is not set
+
+#
+# SOC (System On Chip) specific Drivers
+#
+
+#
+# Amlogic SoC drivers
+#
+# CONFIG_MESON_CANVAS is not set
+# CONFIG_MESON_CLK_MEASURE is not set
+# CONFIG_MESON_GX_SOCINFO is not set
+# CONFIG_MESON_MX_SOCINFO is not set
+# end of Amlogic SoC drivers
+
+#
+# Apple SoC drivers
+#
+# CONFIG_APPLE_SART is not set
+# end of Apple SoC drivers
+
+#
+# ASPEED SoC drivers
+#
+# CONFIG_ASPEED_LPC_CTRL is not set
+# CONFIG_ASPEED_LPC_SNOOP is not set
+# CONFIG_ASPEED_UART_ROUTING is not set
+# CONFIG_ASPEED_P2A_CTRL is not set
+# CONFIG_ASPEED_SOCINFO is not set
+# end of ASPEED SoC drivers
+
+# CONFIG_AT91_SOC_ID is not set
+# CONFIG_AT91_SOC_SFR is not set
+
+#
+# Broadcom SoC drivers
+#
+# CONFIG_SOC_BRCMSTB is not set
+# end of Broadcom SoC drivers
+
+#
+# NXP/Freescale QorIQ SoC drivers
+#
+# CONFIG_QUICC_ENGINE is not set
+CONFIG_DPAA2_CONSOLE=y
+# end of NXP/Freescale QorIQ SoC drivers
+
+#
+# fujitsu SoC drivers
+#
+# end of fujitsu SoC drivers
+
+#
+# Hisilicon SoC drivers
+#
+# end of Hisilicon SoC drivers
+
+#
+# i.MX SoC drivers
+#
+# CONFIG_SOC_IMX8M is not set
+# CONFIG_SOC_IMX9 is not set
+# end of i.MX SoC drivers
+
+#
+# IXP4xx SoC drivers
+#
+# CONFIG_IXP4XX_QMGR is not set
+# CONFIG_IXP4XX_NPE is not set
+# end of IXP4xx SoC drivers
+
+#
+# Enable LiteX SoC Builder specific drivers
+#
+# CONFIG_LITEX_SOC_CONTROLLER is not set
+# end of Enable LiteX SoC Builder specific drivers
+
+# CONFIG_LOONGSON2_GUTS is not set
+
+#
+# MediaTek SoC drivers
+#
+# CONFIG_MTK_CMDQ is not set
+# CONFIG_MTK_DEVAPC is not set
+# CONFIG_MTK_INFRACFG is not set
+# CONFIG_MTK_PMIC_WRAP is not set
+# CONFIG_MTK_MMSYS is not set
+# end of MediaTek SoC drivers
+
+# CONFIG_WPCM450_SOC is not set
+
+#
+# Qualcomm SoC drivers
+#
+# CONFIG_QCOM_COMMAND_DB is not set
+# CONFIG_QCOM_GENI_SE is not set
+# CONFIG_QCOM_GSBI is not set
+# CONFIG_QCOM_LLCC is not set
+# CONFIG_QCOM_RAMP_CTRL is not set
+# CONFIG_QCOM_RPM_MASTER_STATS is not set
+# CONFIG_QCOM_RPMH is not set
+# CONFIG_QCOM_SMD_RPM is not set
+# CONFIG_QCOM_SPM is not set
+# CONFIG_QCOM_WCNSS_CTRL is not set
+# CONFIG_QCOM_ICC_BWMON is not set
+# end of Qualcomm SoC drivers
+
+# CONFIG_SOC_RENESAS is not set
+# CONFIG_ROCKCHIP_GRF is not set
+# CONFIG_ROCKCHIP_IODOMAIN is not set
+# CONFIG_SOC_SAMSUNG is not set
+# CONFIG_SOC_TI is not set
+# CONFIG_UX500_SOC_ID is not set
+
+#
+# Xilinx SoC drivers
+#
+# end of Xilinx SoC drivers
+# end of SOC (System On Chip) specific Drivers
+
+#
+# PM Domains
+#
+# CONFIG_OWL_PM_DOMAINS is not set
+
+#
+# Amlogic PM Domains
+#
+# CONFIG_MESON_GX_PM_DOMAINS is not set
+# CONFIG_MESON_EE_PM_DOMAINS is not set
+# end of Amlogic PM Domains
+
+# CONFIG_APPLE_PMGR_PWRSTATE is not set
+CONFIG_ARM_SCMI_PERF_DOMAIN=y
+CONFIG_ARM_SCMI_POWER_DOMAIN=y
+CONFIG_ARM_SCPI_POWER_DOMAIN=y
+
+#
+# Broadcom PM Domains
+#
+# CONFIG_BCM2835_POWER is not set
+# CONFIG_BCM_PMB is not set
+# CONFIG_BCM63XX_POWER is not set
+# end of Broadcom PM Domains
+
+#
+# i.MX PM Domains
+#
+# CONFIG_IMX_GPCV2_PM_DOMAINS is not set
+# end of i.MX PM Domains
+
+#
+# MediaTek PM Domains
+#
+# CONFIG_MTK_SCPSYS is not set
+# CONFIG_MTK_SCPSYS_PM_DOMAINS is not set
+# end of MediaTek PM Domains
+
+#
+# Qualcomm PM Domains
+#
+# end of Qualcomm PM Domains
+
+# CONFIG_ROCKCHIP_PM_DOMAINS is not set
+# CONFIG_UX500_PM_DOMAIN is not set
+# CONFIG_JH71XX_PMU is not set
+# CONFIG_SUN20I_PPU is not set
+# end of PM Domains
+
+# CONFIG_PM_DEVFREQ is not set
+CONFIG_EXTCON=y
+
+#
+# Extcon Device Drivers
+#
+# CONFIG_EXTCON_FSA9480 is not set
+# CONFIG_EXTCON_GPIO is not set
+# CONFIG_EXTCON_MAX3355 is not set
+# CONFIG_EXTCON_PTN5150 is not set
+# CONFIG_EXTCON_QCOM_SPMI_MISC is not set
+# CONFIG_EXTCON_RT8973A is not set
+# CONFIG_EXTCON_SM5502 is not set
+# CONFIG_EXTCON_USB_GPIO is not set
+# CONFIG_MEMORY is not set
+# CONFIG_IIO is not set
+# CONFIG_PWM is not set
+
+#
+# IRQ chip support
+#
+CONFIG_IRQCHIP=y
+# CONFIG_AL_FIC is not set
+# CONFIG_JCORE_AIC is not set
+# CONFIG_RENESAS_INTC_IRQPIN is not set
+# CONFIG_RENESAS_IRQC is not set
+# CONFIG_RENESAS_RZA1_IRQC is not set
+# CONFIG_RENESAS_RZG2L_IRQC is not set
+# CONFIG_SL28CPLD_INTC is not set
+# CONFIG_TS4800_IRQ is not set
+# CONFIG_XILINX_INTC is not set
+# CONFIG_INGENIC_TCU_IRQ is not set
+# CONFIG_IRQ_UNIPHIER_AIDET is not set
+# CONFIG_MESON_IRQ_GPIO is not set
+# CONFIG_IMX_IRQSTEER is not set
+# CONFIG_IMX_INTMUX is not set
+# CONFIG_IMX_MU_MSI is not set
+CONFIG_RISCV_INTC=y
+CONFIG_SIFIVE_PLIC=y
+# CONFIG_STARFIVE_JH8100_INTC is not set
+# CONFIG_EXYNOS_IRQ_COMBINER is not set
+# CONFIG_MST_IRQ is not set
+# CONFIG_MCHP_EIC is not set
+# CONFIG_SUNPLUS_SP7021_INTC is not set
+# end of IRQ chip support
+
+# CONFIG_IPACK_BUS is not set
+CONFIG_RESET_CONTROLLER=y
+# CONFIG_RESET_A10SR is not set
+# CONFIG_RESET_ATH79 is not set
+# CONFIG_RESET_AXS10X is not set
+# CONFIG_RESET_BCM6345 is not set
+# CONFIG_RESET_BERLIN is not set
+# CONFIG_RESET_BRCMSTB is not set
+# CONFIG_RESET_BRCMSTB_RESCAL is not set
+# CONFIG_RESET_GPIO is not set
+# CONFIG_RESET_HSDK is not set
+# CONFIG_RESET_IMX7 is not set
+# CONFIG_RESET_INTEL_GW is not set
+# CONFIG_RESET_K210 is not set
+# CONFIG_RESET_LANTIQ is not set
+# CONFIG_RESET_LPC18XX is not set
+# CONFIG_RESET_MCHP_SPARX5 is not set
+# CONFIG_RESET_MESON is not set
+# CONFIG_RESET_MESON_AUDIO_ARB is not set
+# CONFIG_RESET_NPCM is not set
+# CONFIG_RESET_NUVOTON_MA35D1 is not set
+# CONFIG_RESET_PISTACHIO is not set
+# CONFIG_RESET_QCOM_AOSS is not set
+# CONFIG_RESET_QCOM_PDC is not set
+# CONFIG_RESET_RASPBERRYPI is not set
+# CONFIG_RESET_RZG2L_USBPHY_CTRL is not set
+# CONFIG_RESET_SCMI is not set
+CONFIG_RESET_SIMPLE=y
+# CONFIG_RESET_SOCFPGA is not set
+# CONFIG_RESET_SUNPLUS is not set
+# CONFIG_RESET_SUNXI is not set
+# CONFIG_RESET_TI_SCI is not set
+# CONFIG_RESET_TI_SYSCON is not set
+# CONFIG_RESET_TI_TPS380X is not set
+# CONFIG_RESET_TN48M_CPLD is not set
+# CONFIG_RESET_UNIPHIER is not set
+# CONFIG_RESET_UNIPHIER_GLUE is not set
+# CONFIG_RESET_ZYNQ is not set
+# CONFIG_RESET_STARFIVE_JH7100 is not set
+# CONFIG_COMMON_RESET_HI3660 is not set
+# CONFIG_COMMON_RESET_HI6220 is not set
+
+#
+# PHY Subsystem
+#
+CONFIG_GENERIC_PHY=y
+# CONFIG_PHY_LPC18XX_USB_OTG is not set
+# CONFIG_PHY_PISTACHIO_USB is not set
+# CONFIG_PHY_XGENE is not set
+# CONFIG_USB_LGM_PHY is not set
+# CONFIG_PHY_CAN_TRANSCEIVER is not set
+# CONFIG_PHY_SUN4I_USB is not set
+# CONFIG_PHY_SUN6I_MIPI_DPHY is not set
+# CONFIG_PHY_SUN9I_USB is not set
+# CONFIG_PHY_SUN50I_USB3 is not set
+# CONFIG_PHY_MESON8_HDMI_TX is not set
+# CONFIG_PHY_MESON8B_USB2 is not set
+# CONFIG_PHY_MESON_GXL_USB2 is not set
+# CONFIG_PHY_MESON_G12A_MIPI_DPHY_ANALOG is not set
+# CONFIG_PHY_MESON_G12A_USB2 is not set
+# CONFIG_PHY_MESON_G12A_USB3_PCIE is not set
+# CONFIG_PHY_MESON_AXG_PCIE is not set
+# CONFIG_PHY_MESON_AXG_MIPI_PCIE_ANALOG is not set
+# CONFIG_PHY_MESON_AXG_MIPI_DPHY is not set
+
+#
+# PHY drivers for Broadcom platforms
+#
+# CONFIG_PHY_BCM63XX_USBH is not set
+# CONFIG_PHY_CYGNUS_PCIE is not set
+# CONFIG_PHY_BCM_SR_USB is not set
+# CONFIG_BCM_KONA_USB2_PHY is not set
+# CONFIG_PHY_BCM_NS_USB2 is not set
+# CONFIG_PHY_NS2_USB_DRD is not set
+# CONFIG_PHY_BRCM_SATA is not set
+# CONFIG_PHY_BRCM_USB is not set
+# CONFIG_PHY_BCM_SR_PCIE is not set
+# end of PHY drivers for Broadcom platforms
+
+# CONFIG_PHY_CADENCE_TORRENT is not set
+# CONFIG_PHY_CADENCE_DPHY is not set
+# CONFIG_PHY_CADENCE_DPHY_RX is not set
+# CONFIG_PHY_CADENCE_SIERRA is not set
+# CONFIG_PHY_CADENCE_SALVO is not set
+# CONFIG_PHY_FSL_IMX8MQ_USB is not set
+# CONFIG_PHY_MIXEL_LVDS_PHY is not set
+# CONFIG_PHY_MIXEL_MIPI_DPHY is not set
+# CONFIG_PHY_FSL_IMX8M_PCIE is not set
+# CONFIG_PHY_FSL_LYNX_28G is not set
+# CONFIG_PHY_HI6220_USB is not set
+# CONFIG_PHY_HI3660_USB is not set
+# CONFIG_PHY_HI3670_USB is not set
+# CONFIG_PHY_HI3670_PCIE is not set
+# CONFIG_PHY_HISTB_COMBPHY is not set
+# CONFIG_PHY_HISI_INNO_USB2 is not set
+# CONFIG_PHY_INGENIC_USB is not set
+# CONFIG_PHY_LANTIQ_VRX200_PCIE is not set
+# CONFIG_PHY_LANTIQ_RCU_USB2 is not set
+# CONFIG_ARMADA375_USBCLUSTER_PHY is not set
+# CONFIG_PHY_BERLIN_SATA is not set
+# CONFIG_PHY_BERLIN_USB is not set
+CONFIG_PHY_MVEBU_A3700_UTMI=y
+# CONFIG_PHY_MVEBU_A38X_COMPHY is not set
+# CONFIG_PHY_MVEBU_CP110_UTMI is not set
+# CONFIG_PHY_PXA_28NM_HSIC is not set
+# CONFIG_PHY_PXA_28NM_USB2 is not set
+# CONFIG_PHY_PXA_USB is not set
+# CONFIG_PHY_MMP3_USB is not set
+# CONFIG_PHY_MMP3_HSIC is not set
+# CONFIG_PHY_MTK_PCIE is not set
+# CONFIG_PHY_MTK_TPHY is not set
+# CONFIG_PHY_MTK_UFS is not set
+# CONFIG_PHY_MTK_XSPHY is not set
+# CONFIG_PHY_MTK_HDMI is not set
+# CONFIG_PHY_MTK_MIPI_CSI_0_5 is not set
+# CONFIG_PHY_MTK_MIPI_DSI is not set
+# CONFIG_PHY_MTK_DP is not set
+# CONFIG_PHY_SPARX5_SERDES is not set
+# CONFIG_PHY_LAN966X_SERDES is not set
+# CONFIG_PHY_MAPPHONE_MDM6600 is not set
+# CONFIG_PHY_OCELOT_SERDES is not set
+CONFIG_PHY_ATH79_USB=y
+# CONFIG_PHY_QCOM_EDP is not set
+# CONFIG_PHY_QCOM_IPQ4019_USB is not set
+# CONFIG_PHY_QCOM_PCIE2 is not set
+# CONFIG_PHY_QCOM_QMP is not set
+# CONFIG_PHY_QCOM_QUSB2 is not set
+# CONFIG_PHY_QCOM_SNPS_EUSB2 is not set
+# CONFIG_PHY_QCOM_EUSB2_REPEATER is not set
+# CONFIG_PHY_QCOM_M31_USB is not set
+# CONFIG_PHY_QCOM_USB_SNPS_FEMTO_V2 is not set
+# CONFIG_PHY_QCOM_USB_HS_28NM is not set
+# CONFIG_PHY_QCOM_USB_SS is not set
+# CONFIG_PHY_QCOM_IPQ806X_USB is not set
+# CONFIG_PHY_QCOM_SGMII_ETH is not set
+# CONFIG_PHY_MT7621_PCI is not set
+# CONFIG_PHY_RALINK_USB is not set
+# CONFIG_PHY_RTK_RTD_USB2PHY is not set
+# CONFIG_PHY_RTK_RTD_USB3PHY is not set
+# CONFIG_PHY_R8A779F0_ETHERNET_SERDES is not set
+# CONFIG_PHY_RCAR_GEN3_USB3 is not set
+# CONFIG_PHY_ROCKCHIP_DPHY_RX0 is not set
+# CONFIG_PHY_ROCKCHIP_INNO_HDMI is not set
+# CONFIG_PHY_ROCKCHIP_INNO_USB2 is not set
+# CONFIG_PHY_ROCKCHIP_INNO_CSIDPHY is not set
+# CONFIG_PHY_ROCKCHIP_INNO_DSIDPHY is not set
+# CONFIG_PHY_ROCKCHIP_PCIE is not set
+# CONFIG_PHY_ROCKCHIP_SAMSUNG_HDPTX is not set
+# CONFIG_PHY_ROCKCHIP_SNPS_PCIE3 is not set
+# CONFIG_PHY_ROCKCHIP_TYPEC is not set
+# CONFIG_PHY_EXYNOS_DP_VIDEO is not set
+# CONFIG_PHY_EXYNOS_MIPI_VIDEO is not set
+# CONFIG_PHY_EXYNOS_PCIE is not set
+# CONFIG_PHY_SAMSUNG_UFS is not set
+# CONFIG_PHY_SAMSUNG_USB2 is not set
+# CONFIG_PHY_UNIPHIER_USB2 is not set
+# CONFIG_PHY_UNIPHIER_USB3 is not set
+# CONFIG_PHY_UNIPHIER_PCIE is not set
+# CONFIG_PHY_UNIPHIER_AHCI is not set
+# CONFIG_PHY_ST_SPEAR1310_MIPHY is not set
+# CONFIG_PHY_ST_SPEAR1340_MIPHY is not set
+# CONFIG_PHY_STIH407_USB is not set
+# CONFIG_PHY_STM32_USBPHYC is not set
+# CONFIG_PHY_STARFIVE_JH7110_DPHY_RX is not set
+# CONFIG_PHY_STARFIVE_JH7110_PCIE is not set
+# CONFIG_PHY_STARFIVE_JH7110_USB is not set
+# CONFIG_PHY_SUNPLUS_USB is not set
+# CONFIG_PHY_TEGRA194_P2U is not set
+# CONFIG_PHY_DA8XX_USB is not set
+# CONFIG_PHY_DM816X_USB is not set
+# CONFIG_PHY_AM654_SERDES is not set
+# CONFIG_PHY_J721E_WIZ is not set
+# CONFIG_OMAP_CONTROL_PHY is not set
+# CONFIG_TI_PIPE3 is not set
+# CONFIG_PHY_INTEL_KEEMBAY_EMMC is not set
+# CONFIG_PHY_INTEL_KEEMBAY_USB is not set
+# CONFIG_PHY_INTEL_LGM_COMBO is not set
+# CONFIG_PHY_INTEL_LGM_EMMC is not set
+# CONFIG_PHY_XILINX_ZYNQMP is not set
+# end of PHY Subsystem
+
+# CONFIG_POWERCAP is not set
+# CONFIG_MCB is not set
+
+#
+# Performance monitor support
+#
+# CONFIG_ARM_CCN is not set
+# CONFIG_ARM_CMN is not set
+CONFIG_RISCV_PMU=y
+CONFIG_RISCV_PMU_LEGACY=y
+CONFIG_RISCV_PMU_SBI=y
+# CONFIG_FSL_IMX8_DDR_PMU is not set
+# CONFIG_ARM_DMC620_PMU is not set
+# CONFIG_ALIBABA_UNCORE_DRW_PMU is not set
+# CONFIG_ARM_CORESIGHT_PMU_ARCH_SYSTEM_PMU is not set
+# CONFIG_MESON_DDR_PMU is not set
+# end of Performance monitor support
+
+# CONFIG_RAS is not set
+
+#
+# Android
+#
+# CONFIG_ANDROID_BINDER_IPC is not set
+# end of Android
+
+CONFIG_DAX=y
+CONFIG_NVMEM=y
+CONFIG_NVMEM_SYSFS=y
+CONFIG_NVMEM_LAYOUTS=y
+
+#
+# Layout Types
+#
+# CONFIG_NVMEM_LAYOUT_SL28_VPD is not set
+# CONFIG_NVMEM_LAYOUT_ONIE_TLV is not set
+# end of Layout Types
+
+# CONFIG_NVMEM_APPLE_EFUSES is not set
+# CONFIG_NVMEM_BCM_OCOTP is not set
+# CONFIG_NVMEM_BRCM_NVRAM is not set
+# CONFIG_NVMEM_IMX_IIM is not set
+# CONFIG_NVMEM_IMX_OCOTP is not set
+# CONFIG_NVMEM_IMX_OCOTP_ELE is not set
+# CONFIG_NVMEM_JZ4780_EFUSE is not set
+# CONFIG_NVMEM_LAN9662_OTPC is not set
+# CONFIG_NVMEM_LAYERSCAPE_SFP is not set
+# CONFIG_NVMEM_LPC18XX_EEPROM is not set
+# CONFIG_NVMEM_LPC18XX_OTP is not set
+# CONFIG_NVMEM_MESON_MX_EFUSE is not set
+# CONFIG_NVMEM_MICROCHIP_OTPC is not set
+# CONFIG_NVMEM_MTK_EFUSE is not set
+# CONFIG_NVMEM_MXS_OCOTP is not set
+# CONFIG_NVMEM_NINTENDO_OTP is not set
+# CONFIG_NVMEM_QCOM_QFPROM is not set
+# CONFIG_NVMEM_QCOM_SEC_QFPROM is not set
+# CONFIG_NVMEM_RMEM is not set
+# CONFIG_NVMEM_ROCKCHIP_EFUSE is not set
+# CONFIG_NVMEM_ROCKCHIP_OTP is not set
+# CONFIG_NVMEM_SC27XX_EFUSE is not set
+# CONFIG_NVMEM_SNVS_LPGPR is not set
+# CONFIG_NVMEM_SPRD_EFUSE is not set
+# CONFIG_NVMEM_STM32_ROMEM is not set
+# CONFIG_NVMEM_SUNPLUS_OCOTP is not set
+# CONFIG_NVMEM_UNIPHIER_EFUSE is not set
+# CONFIG_NVMEM_VF610_OCOTP is not set
+# CONFIG_NVMEM_QORIQ_EFUSE is not set
+
+#
+# HW tracing support
+#
+# CONFIG_STM is not set
+# CONFIG_INTEL_TH is not set
+# end of HW tracing support
+
+# CONFIG_FPGA is not set
+# CONFIG_FSI is not set
+CONFIG_TEE=y
+CONFIG_MBEDTEE=y
+# CONFIG_SIOX is not set
+# CONFIG_SLIMBUS is not set
+# CONFIG_INTERCONNECT is not set
+# CONFIG_COUNTER is not set
+# CONFIG_PECI is not set
+# CONFIG_HTE is not set
+# end of Device Drivers
+
+#
+# File systems
+#
+# CONFIG_VALIDATE_FS_PARSER is not set
+CONFIG_FS_STACK=y
+CONFIG_FS_POSIX_ACL=y
+CONFIG_EXPORTFS=y
+# CONFIG_EXPORTFS_BLOCK_OPS is not set
+CONFIG_FILE_LOCKING=y
+# CONFIG_FS_ENCRYPTION is not set
+# CONFIG_FS_VERITY is not set
+CONFIG_FSNOTIFY=y
+CONFIG_DNOTIFY=y
+CONFIG_INOTIFY_USER=y
+# CONFIG_FANOTIFY is not set
+# CONFIG_QUOTA is not set
+CONFIG_AUTOFS_FS=y
+# CONFIG_FUSE_FS is not set
+CONFIG_OVERLAY_FS=y
+# CONFIG_OVERLAY_FS_REDIRECT_DIR is not set
+CONFIG_OVERLAY_FS_REDIRECT_ALWAYS_FOLLOW=y
+# CONFIG_OVERLAY_FS_INDEX is not set
+# CONFIG_OVERLAY_FS_METACOPY is not set
+# CONFIG_OVERLAY_FS_DEBUG is not set
+
+#
+# Caches
+#
+# end of Caches
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+# CONFIG_PROC_KCORE is not set
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_PROC_CHILDREN=y
+CONFIG_KERNFS=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_TMPFS_XATTR=y
+# CONFIG_TMPFS_QUOTA is not set
+CONFIG_ARCH_SUPPORTS_HUGETLBFS=y
+CONFIG_HUGETLBFS=y
+CONFIG_HUGETLB_PAGE=y
+CONFIG_ARCH_HAS_GIGANTIC_PAGE=y
+# CONFIG_CONFIGFS_FS is not set
+CONFIG_EFIVAR_FS=y
+# end of Pseudo filesystems
+
+CONFIG_MISC_FILESYSTEMS=y
+# CONFIG_ORANGEFS_FS is not set
+# CONFIG_ECRYPT_FS is not set
+# CONFIG_CRAMFS is not set
+# CONFIG_PSTORE is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
+CONFIG_NLS_ISO8859_1=y
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+# CONFIG_NLS_UTF8 is not set
+# CONFIG_UNICODE is not set
+CONFIG_IO_WQ=y
+# end of File systems
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_KEYS_REQUEST_CACHE is not set
+# CONFIG_PERSISTENT_KEYRINGS is not set
+# CONFIG_TRUSTED_KEYS is not set
+# CONFIG_ENCRYPTED_KEYS is not set
+# CONFIG_KEY_DH_OPERATIONS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+CONFIG_SECURITY=y
+CONFIG_SECURITYFS=y
+CONFIG_SECURITY_NETWORK=y
+CONFIG_SECURITY_PATH=y
+# CONFIG_HARDENED_USERCOPY is not set
+# CONFIG_FORTIFY_SOURCE is not set
+# CONFIG_STATIC_USERMODEHELPER is not set
+# CONFIG_SECURITY_YAMA is not set
+# CONFIG_SECURITY_SAFESETID is not set
+# CONFIG_SECURITY_LOCKDOWN_LSM is not set
+# CONFIG_SECURITY_LANDLOCK is not set
+CONFIG_INTEGRITY=y
+# CONFIG_INTEGRITY_SIGNATURE is not set
+# CONFIG_IMA is not set
+# CONFIG_EVM is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_LSM="landlock,lockdown,yama,loadpin,safesetid,bpf"
+
+#
+# Kernel hardening options
+#
+
+#
+# Memory initialization
+#
+CONFIG_CC_HAS_AUTO_VAR_INIT_PATTERN=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO_BARE=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO=y
+# CONFIG_INIT_STACK_NONE is not set
+# CONFIG_INIT_STACK_ALL_PATTERN is not set
+CONFIG_INIT_STACK_ALL_ZERO=y
+# CONFIG_INIT_ON_ALLOC_DEFAULT_ON is not set
+# CONFIG_INIT_ON_FREE_DEFAULT_ON is not set
+CONFIG_CC_HAS_ZERO_CALL_USED_REGS=y
+# CONFIG_ZERO_CALL_USED_REGS is not set
+# end of Memory initialization
+
+#
+# Hardening of kernel data structures
+#
+CONFIG_LIST_HARDENED=y
+# CONFIG_BUG_ON_DATA_CORRUPTION is not set
+# end of Hardening of kernel data structures
+
+CONFIG_RANDSTRUCT_NONE=y
+# end of Kernel hardening options
+# end of Security options
+
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_SIG2=y
+CONFIG_CRYPTO_SKCIPHER=y
+CONFIG_CRYPTO_SKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_RNG_DEFAULT=y
+CONFIG_CRYPTO_AKCIPHER2=y
+CONFIG_CRYPTO_AKCIPHER=y
+CONFIG_CRYPTO_KPP2=y
+CONFIG_CRYPTO_ACOMP2=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+CONFIG_CRYPTO_NULL=y
+CONFIG_CRYPTO_NULL2=y
+# CONFIG_CRYPTO_PCRYPT is not set
+# CONFIG_CRYPTO_CRYPTD is not set
+CONFIG_CRYPTO_AUTHENC=y
+# CONFIG_CRYPTO_TEST is not set
+CONFIG_CRYPTO_ENGINE=y
+# end of Crypto core or helper
+
+#
+# Public-key cryptography
+#
+CONFIG_CRYPTO_RSA=y
+# CONFIG_CRYPTO_DH is not set
+# CONFIG_CRYPTO_ECDH is not set
+# CONFIG_CRYPTO_ECDSA is not set
+# CONFIG_CRYPTO_ECRDSA is not set
+# CONFIG_CRYPTO_SM2 is not set
+# CONFIG_CRYPTO_CURVE25519 is not set
+# end of Public-key cryptography
+
+#
+# Block ciphers
+#
+CONFIG_CRYPTO_AES=y
+# CONFIG_CRYPTO_AES_TI is not set
+# CONFIG_CRYPTO_ARIA is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+# CONFIG_CRYPTO_DES is not set
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_SM4_GENERIC is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+# end of Block ciphers
+
+#
+# Length-preserving ciphers and modes
+#
+# CONFIG_CRYPTO_ADIANTUM is not set
+# CONFIG_CRYPTO_CHACHA20 is not set
+CONFIG_CRYPTO_CBC=y
+CONFIG_CRYPTO_CTR=y
+# CONFIG_CRYPTO_CTS is not set
+CONFIG_CRYPTO_ECB=y
+# CONFIG_CRYPTO_HCTR2 is not set
+# CONFIG_CRYPTO_KEYWRAP is not set
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+# end of Length-preserving ciphers and modes
+
+#
+# AEAD (authenticated encryption with associated data) ciphers
+#
+# CONFIG_CRYPTO_AEGIS128 is not set
+# CONFIG_CRYPTO_CHACHA20POLY1305 is not set
+# CONFIG_CRYPTO_CCM is not set
+CONFIG_CRYPTO_GCM=y
+CONFIG_CRYPTO_GENIV=y
+CONFIG_CRYPTO_SEQIV=y
+CONFIG_CRYPTO_ECHAINIV=y
+# CONFIG_CRYPTO_ESSIV is not set
+# end of AEAD (authenticated encryption with associated data) ciphers
+
+#
+# Hashes, digests, and MACs
+#
+CONFIG_CRYPTO_BLAKE2B=y
+# CONFIG_CRYPTO_CMAC is not set
+CONFIG_CRYPTO_GHASH=y
+CONFIG_CRYPTO_HMAC=y
+# CONFIG_CRYPTO_MD4 is not set
+# CONFIG_CRYPTO_MD5 is not set
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_POLY1305 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+CONFIG_CRYPTO_SHA1=y
+CONFIG_CRYPTO_SHA256=y
+CONFIG_CRYPTO_SHA512=y
+CONFIG_CRYPTO_SHA3=y
+# CONFIG_CRYPTO_SM3_GENERIC is not set
+# CONFIG_CRYPTO_STREEBOG is not set
+# CONFIG_CRYPTO_VMAC is not set
+# CONFIG_CRYPTO_WP512 is not set
+# CONFIG_CRYPTO_XCBC is not set
+CONFIG_CRYPTO_XXHASH=y
+# end of Hashes, digests, and MACs
+
+#
+# CRCs (cyclic redundancy checks)
+#
+CONFIG_CRYPTO_CRC32C=y
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_CRCT10DIF is not set
+# end of CRCs (cyclic redundancy checks)
+
+#
+# Compression
+#
+# CONFIG_CRYPTO_DEFLATE is not set
+# CONFIG_CRYPTO_LZO is not set
+# CONFIG_CRYPTO_842 is not set
+# CONFIG_CRYPTO_LZ4 is not set
+# CONFIG_CRYPTO_LZ4HC is not set
+# CONFIG_CRYPTO_ZSTD is not set
+# end of Compression
+
+#
+# Random number generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+CONFIG_CRYPTO_DRBG_MENU=y
+CONFIG_CRYPTO_DRBG_HMAC=y
+# CONFIG_CRYPTO_DRBG_HASH is not set
+# CONFIG_CRYPTO_DRBG_CTR is not set
+CONFIG_CRYPTO_DRBG=y
+CONFIG_CRYPTO_JITTERENTROPY=y
+CONFIG_CRYPTO_JITTERENTROPY_MEMORY_BLOCKS=64
+CONFIG_CRYPTO_JITTERENTROPY_MEMORY_BLOCKSIZE=32
+CONFIG_CRYPTO_JITTERENTROPY_OSR=1
+# end of Random number generation
+
+#
+# Userspace interface
+#
+# end of Userspace interface
+
+#
+# Accelerated Cryptographic Algorithms for CPU (riscv)
+#
+# end of Accelerated Cryptographic Algorithms for CPU (riscv)
+
+CONFIG_CRYPTO_HW=y
+# CONFIG_CRYPTO_DEV_ALLWINNER is not set
+# CONFIG_CRYPTO_DEV_SL3516 is not set
+# CONFIG_CRYPTO_DEV_EXYNOS_RNG is not set
+# CONFIG_CRYPTO_DEV_S5P is not set
+# CONFIG_CRYPTO_DEV_ATMEL_AES is not set
+# CONFIG_CRYPTO_DEV_ATMEL_TDES is not set
+# CONFIG_CRYPTO_DEV_ATMEL_SHA is not set
+# CONFIG_CRYPTO_DEV_ATMEL_ECC is not set
+# CONFIG_CRYPTO_DEV_ATMEL_SHA204A is not set
+# CONFIG_CRYPTO_DEV_KEEMBAY_OCS_AES_SM4 is not set
+# CONFIG_CRYPTO_DEV_KEEMBAY_OCS_ECC is not set
+# CONFIG_CRYPTO_DEV_KEEMBAY_OCS_HCU is not set
+# CONFIG_CRYPTO_DEV_QCE is not set
+# CONFIG_CRYPTO_DEV_QCOM_RNG is not set
+# CONFIG_CRYPTO_DEV_IMGTEC_HASH is not set
+# CONFIG_CRYPTO_DEV_ZYNQMP_AES is not set
+# CONFIG_CRYPTO_DEV_ZYNQMP_SHA3 is not set
+CONFIG_CRYPTO_DEV_VIRTIO=y
+# CONFIG_CRYPTO_DEV_SAFEXCEL is not set
+# CONFIG_CRYPTO_DEV_CCREE is not set
+# CONFIG_CRYPTO_DEV_HISI_SEC is not set
+# CONFIG_CRYPTO_DEV_AMLOGIC_GXL is not set
+# CONFIG_CRYPTO_DEV_SA2UL is not set
+# CONFIG_CRYPTO_DEV_ASPEED is not set
+# CONFIG_CRYPTO_DEV_JH7110 is not set
+# CONFIG_ASYMMETRIC_KEY_TYPE is not set
+
+#
+# Certificates for signature checking
+#
+# CONFIG_SYSTEM_BLACKLIST_KEYRING is not set
+# end of Certificates for signature checking
+
+CONFIG_BINARY_PRINTF=y
+
+#
+# Library routines
+#
+# CONFIG_PACKING is not set
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+# CONFIG_CORDIC is not set
+# CONFIG_PRIME_NUMBERS is not set
+CONFIG_RATIONAL=y
+
+#
+# Crypto library routines
+#
+CONFIG_CRYPTO_LIB_UTILS=y
+CONFIG_CRYPTO_LIB_AES=y
+CONFIG_CRYPTO_LIB_GF128MUL=y
+CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
+# CONFIG_CRYPTO_LIB_CHACHA is not set
+# CONFIG_CRYPTO_LIB_CURVE25519 is not set
+CONFIG_CRYPTO_LIB_POLY1305_RSIZE=1
+# CONFIG_CRYPTO_LIB_POLY1305 is not set
+# CONFIG_CRYPTO_LIB_CHACHA20POLY1305 is not set
+CONFIG_CRYPTO_LIB_SHA1=y
+CONFIG_CRYPTO_LIB_SHA256=y
+# end of Crypto library routines
+
+CONFIG_CRC_CCITT=y
+CONFIG_CRC16=y
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC64_ROCKSOFT is not set
+CONFIG_CRC_ITU_T=y
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC64 is not set
+# CONFIG_CRC4 is not set
+CONFIG_CRC7=y
+CONFIG_LIBCRC32C=y
+# CONFIG_CRC8 is not set
+CONFIG_XXHASH=y
+# CONFIG_RANDOM32_SELFTEST is not set
+CONFIG_ZLIB_INFLATE=y
+CONFIG_XZ_DEC=y
+CONFIG_XZ_DEC_X86=y
+CONFIG_XZ_DEC_POWERPC=y
+CONFIG_XZ_DEC_ARM=y
+CONFIG_XZ_DEC_ARMTHUMB=y
+CONFIG_XZ_DEC_SPARC=y
+# CONFIG_XZ_DEC_MICROLZMA is not set
+CONFIG_XZ_DEC_BCJ=y
+# CONFIG_XZ_DEC_TEST is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_XARRAY_MULTI=y
+CONFIG_ASSOCIATIVE_ARRAY=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_IOPORT_MAP=y
+CONFIG_HAS_DMA=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_DMA_DECLARE_COHERENT=y
+CONFIG_ARCH_HAS_SETUP_DMA_OPS=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_DEVICE=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_CPU=y
+CONFIG_ARCH_HAS_DMA_PREP_COHERENT=y
+CONFIG_ARCH_DMA_DEFAULT_COHERENT=y
+CONFIG_DMA_NONCOHERENT_MMAP=y
+CONFIG_DMA_COHERENT_POOL=y
+CONFIG_DMA_DIRECT_REMAP=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_DMA_MAP_BENCHMARK is not set
+CONFIG_SGL_ALLOC=y
+# CONFIG_CPUMASK_OFFSTACK is not set
+CONFIG_GENERIC_ATOMIC64=y
+CONFIG_CLZ_TAB=y
+# CONFIG_IRQ_POLL is not set
+CONFIG_MPILIB=y
+CONFIG_LIBFDT=y
+CONFIG_UCS2_STRING=y
+CONFIG_FONT_SUPPORT=y
+CONFIG_FONT_8x16=y
+CONFIG_FONT_AUTOSELECT=y
+CONFIG_ARCH_HAS_PMEM_API=y
+CONFIG_ARCH_STACKWALK=y
+CONFIG_STACKDEPOT=y
+CONFIG_STACKDEPOT_MAX_FRAMES=64
+# CONFIG_PARMAN is not set
+# CONFIG_OBJAGG is not set
+# CONFIG_LWQ_TEST is not set
+# end of Library routines
+
+CONFIG_GENERIC_IOREMAP=y
+CONFIG_GENERIC_LIB_ASHLDI3=y
+CONFIG_GENERIC_LIB_ASHRDI3=y
+CONFIG_GENERIC_LIB_LSHRDI3=y
+CONFIG_GENERIC_LIB_UCMPDI2=y
+CONFIG_GENERIC_LIB_DEVMEM_IS_ALLOWED=y
+
+#
+# Kernel hacking
+#
+
+#
+# printk and dmesg options
+#
+CONFIG_PRINTK_TIME=y
+# CONFIG_PRINTK_CALLER is not set
+# CONFIG_STACKTRACE_BUILD_ID is not set
+CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7
+CONFIG_CONSOLE_LOGLEVEL_QUIET=4
+CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_DYNAMIC_DEBUG_CORE is not set
+CONFIG_SYMBOLIC_ERRNAME=y
+CONFIG_DEBUG_BUGVERBOSE=y
+# end of printk and dmesg options
+
+CONFIG_DEBUG_KERNEL=y
+CONFIG_DEBUG_MISC=y
+
+#
+# Compile-time checks and compiler options
+#
+CONFIG_AS_HAS_NON_CONST_ULEB128=y
+CONFIG_DEBUG_INFO_NONE=y
+# CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set
+# CONFIG_DEBUG_INFO_DWARF4 is not set
+# CONFIG_DEBUG_INFO_DWARF5 is not set
+CONFIG_FRAME_WARN=2048
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_HEADERS_INSTALL is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_SECTION_MISMATCH_WARN_ONLY=y
+# CONFIG_DEBUG_FORCE_FUNCTION_ALIGN_64B is not set
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+CONFIG_FRAME_POINTER=y
+# CONFIG_VMLINUX_MAP is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# end of Compile-time checks and compiler options
+
+#
+# Generic Kernel Debugging Instruments
+#
+# CONFIG_MAGIC_SYSRQ is not set
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_FS_ALLOW_ALL=y
+# CONFIG_DEBUG_FS_DISALLOW_MOUNT is not set
+# CONFIG_DEBUG_FS_ALLOW_NONE is not set
+CONFIG_HAVE_ARCH_KGDB=y
+CONFIG_HAVE_ARCH_KGDB_QXFER_PKT=y
+# CONFIG_KGDB is not set
+CONFIG_ARCH_HAS_UBSAN=y
+# CONFIG_UBSAN is not set
+CONFIG_HAVE_KCSAN_COMPILER=y
+# end of Generic Kernel Debugging Instruments
+
+#
+# Networking Debugging
+#
+# end of Networking Debugging
+
+#
+# Memory Debugging
+#
+# CONFIG_PAGE_EXTENSION is not set
+CONFIG_DEBUG_PAGEALLOC=y
+# CONFIG_DEBUG_PAGEALLOC_ENABLE_DEFAULT is not set
+CONFIG_SLUB_DEBUG=y
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_PAGE_OWNER is not set
+# CONFIG_PAGE_POISONING is not set
+# CONFIG_DEBUG_RODATA_TEST is not set
+CONFIG_ARCH_HAS_DEBUG_WX=y
+# CONFIG_DEBUG_WX is not set
+CONFIG_GENERIC_PTDUMP=y
+# CONFIG_PTDUMP_DEBUGFS is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_PER_VMA_LOCK_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SHRINKER_DEBUG is not set
+# CONFIG_DEBUG_STACK_USAGE is not set
+CONFIG_SCHED_STACK_END_CHECK=y
+CONFIG_ARCH_HAS_DEBUG_VM_PGTABLE=y
+CONFIG_DEBUG_VM_IRQSOFF=y
+CONFIG_DEBUG_VM=y
+# CONFIG_DEBUG_VM_MAPLE_TREE is not set
+# CONFIG_DEBUG_VM_RB is not set
+CONFIG_DEBUG_VM_PGFLAGS=y
+CONFIG_DEBUG_VM_PGTABLE=y
+CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y
+# CONFIG_DEBUG_VIRTUAL is not set
+CONFIG_DEBUG_MEMORY_INIT=y
+CONFIG_DEBUG_PER_CPU_MAPS=y
+CONFIG_CC_HAS_KASAN_GENERIC=y
+CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y
+# end of Memory Debugging
+
+# CONFIG_DEBUG_SHIRQ is not set
+
+#
+# Debug Oops, Lockups and Hangs
+#
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+CONFIG_PANIC_TIMEOUT=0
+CONFIG_LOCKUP_DETECTOR=y
+CONFIG_SOFTLOCKUP_DETECTOR=y
+# CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC is not set
+CONFIG_HAVE_HARDLOCKUP_DETECTOR_BUDDY=y
+# CONFIG_HARDLOCKUP_DETECTOR is not set
+CONFIG_DETECT_HUNG_TASK=y
+CONFIG_DEFAULT_HUNG_TASK_TIMEOUT=120
+# CONFIG_BOOTPARAM_HUNG_TASK_PANIC is not set
+CONFIG_WQ_WATCHDOG=y
+# CONFIG_WQ_CPU_INTENSIVE_REPORT is not set
+# end of Debug Oops, Lockups and Hangs
+
+#
+# Scheduler Debugging
+#
+CONFIG_SCHED_DEBUG=y
+# CONFIG_SCHEDSTATS is not set
+# end of Scheduler Debugging
+
+CONFIG_DEBUG_TIMEKEEPING=y
+
+#
+# Lock Debugging (spinlocks, mutexes, etc...)
+#
+CONFIG_LOCK_DEBUGGING_SUPPORT=y
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+CONFIG_DEBUG_RT_MUTEXES=y
+CONFIG_DEBUG_SPINLOCK=y
+CONFIG_DEBUG_MUTEXES=y
+# CONFIG_DEBUG_WW_MUTEX_SLOWPATH is not set
+CONFIG_DEBUG_RWSEMS=y
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+CONFIG_DEBUG_ATOMIC_SLEEP=y
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+# CONFIG_LOCK_TORTURE_TEST is not set
+# CONFIG_WW_MUTEX_SELFTEST is not set
+# CONFIG_SCF_TORTURE_TEST is not set
+# end of Lock Debugging (spinlocks, mutexes, etc...)
+
+# CONFIG_DEBUG_IRQFLAGS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_WARN_ALL_UNSEEDED_RANDOM is not set
+# CONFIG_DEBUG_KOBJECT is not set
+
+#
+# Debug kernel data structures
+#
+CONFIG_DEBUG_LIST=y
+CONFIG_DEBUG_PLIST=y
+CONFIG_DEBUG_SG=y
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_MAPLE_TREE is not set
+# end of Debug kernel data structures
+
+#
+# RCU Debugging
+#
+# CONFIG_RCU_SCALE_TEST is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+# CONFIG_RCU_REF_SCALE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=21
+CONFIG_RCU_EXP_CPU_STALL_TIMEOUT=0
+# CONFIG_RCU_CPU_STALL_CPUTIME is not set
+# CONFIG_RCU_TRACE is not set
+CONFIG_RCU_EQS_DEBUG=y
+# end of RCU Debugging
+
+# CONFIG_DEBUG_WQ_FORCE_RR_CPU is not set
+# CONFIG_CPU_HOTPLUG_STATE_CONTROL is not set
+# CONFIG_LATENCYTOP is not set
+CONFIG_HAVE_RETHOOK=y
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_RETVAL=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_DIRECT_CALLS=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_TRACING_SUPPORT=y
+# CONFIG_FTRACE is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_SAMPLE_FTRACE_DIRECT=y
+CONFIG_HAVE_SAMPLE_FTRACE_DIRECT_MULTI=y
+# CONFIG_STRICT_DEVMEM is not set
+
+#
+# riscv Debugging
+#
+
+#
+# arch/riscv/kernel Testing and Coverage
+#
+CONFIG_AS_HAS_ULEB128=y
+CONFIG_RUNTIME_KERNEL_TESTING_MENU=y
+# end of arch/riscv/kernel Testing and Coverage
+# end of riscv Debugging
+
+#
+# Kernel Testing and Coverage
+#
+# CONFIG_KUNIT is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+CONFIG_ARCH_HAS_KCOV=y
+CONFIG_CC_HAS_SANCOV_TRACE_PC=y
+# CONFIG_KCOV is not set
+# CONFIG_RUNTIME_TESTING_MENU is not set
+CONFIG_ARCH_USE_MEMTEST=y
+CONFIG_MEMTEST=y
+# end of Kernel Testing and Coverage
+
+#
+# Rust hacking
+#
+# end of Rust hacking
+# end of Kernel hacking
+
+#
+# Documentation
+#
+# CONFIG_WARN_MISSING_DOCUMENTS is not set
+# CONFIG_WARN_ABI_ERRORS is not set
+# end of Documentation
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/linux/riscv64_qemu_virt_linux_config buildroot/tee/linux/riscv64_qemu_virt_linux_config
--- buildroot-ori/tee/linux/riscv64_qemu_virt_linux_config	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/linux/riscv64_qemu_virt_linux_config	2025-05-31 23:12:46.410389056 +0800
@@ -0,0 +1,4090 @@
+#
+# Automatically generated file; DO NOT EDIT.
+# Linux/riscv 6.9.10 Kernel Configuration
+#
+CONFIG_CC_VERSION_TEXT="riscv64-linux-gcc.br_real (Buildroot 2021.11-11272-ge2962af) 13.2.0"
+CONFIG_CC_IS_GCC=y
+CONFIG_GCC_VERSION=130200
+CONFIG_CLANG_VERSION=0
+CONFIG_AS_IS_GNU=y
+CONFIG_AS_VERSION=24200
+CONFIG_LD_IS_BFD=y
+CONFIG_LD_VERSION=24200
+CONFIG_LLD_VERSION=0
+CONFIG_CC_CAN_LINK=y
+CONFIG_CC_CAN_LINK_STATIC=y
+CONFIG_CC_HAS_ASM_GOTO_OUTPUT=y
+CONFIG_CC_HAS_ASM_GOTO_TIED_OUTPUT=y
+CONFIG_GCC_ASM_GOTO_OUTPUT_WORKAROUND=y
+CONFIG_CC_HAS_ASM_INLINE=y
+CONFIG_CC_HAS_NO_PROFILE_FN_ATTR=y
+CONFIG_PAHOLE_VERSION=0
+CONFIG_IRQ_WORK=y
+CONFIG_BUILDTIME_TABLE_SORT=y
+CONFIG_THREAD_INFO_IN_TASK=y
+
+#
+# General setup
+#
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_COMPILE_TEST=y
+# CONFIG_WERROR is not set
+CONFIG_LOCALVERSION=""
+CONFIG_BUILD_SALT=""
+CONFIG_DEFAULT_INIT=""
+CONFIG_DEFAULT_HOSTNAME="(none)"
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+# CONFIG_WATCH_QUEUE is not set
+CONFIG_CROSS_MEMORY_ATTACH=y
+# CONFIG_USELIB is not set
+CONFIG_HAVE_ARCH_AUDITSYSCALL=y
+
+#
+# IRQ subsystem
+#
+CONFIG_GENERIC_IRQ_SHOW=y
+CONFIG_GENERIC_IRQ_SHOW_LEVEL=y
+CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK=y
+CONFIG_GENERIC_IRQ_MIGRATION=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_IRQ_DOMAIN=y
+CONFIG_IRQ_DOMAIN_HIERARCHY=y
+CONFIG_GENERIC_IRQ_IPI=y
+CONFIG_GENERIC_IRQ_IPI_MUX=y
+CONFIG_IRQ_FORCED_THREADING=y
+CONFIG_SPARSE_IRQ=y
+# CONFIG_GENERIC_IRQ_DEBUGFS is not set
+# end of IRQ subsystem
+
+CONFIG_GENERIC_IRQ_MULTI_HANDLER=y
+CONFIG_GENERIC_TIME_VSYSCALL=y
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_ARCH_HAS_TICK_BROADCAST=y
+CONFIG_GENERIC_CLOCKEVENTS_BROADCAST=y
+CONFIG_HAVE_POSIX_CPU_TIMERS_TASK_WORK=y
+CONFIG_POSIX_CPU_TIMERS_TASK_WORK=y
+CONFIG_CONTEXT_TRACKING=y
+CONFIG_CONTEXT_TRACKING_IDLE=y
+
+#
+# Timers subsystem
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ_COMMON=y
+# CONFIG_HZ_PERIODIC is not set
+CONFIG_NO_HZ_IDLE=y
+# CONFIG_NO_HZ_FULL is not set
+# CONFIG_NO_HZ is not set
+CONFIG_HIGH_RES_TIMERS=y
+# end of Timers subsystem
+
+CONFIG_BPF=y
+CONFIG_HAVE_EBPF_JIT=y
+
+#
+# BPF subsystem
+#
+CONFIG_BPF_SYSCALL=y
+CONFIG_BPF_UNPRIV_DEFAULT_OFF=y
+# end of BPF subsystem
+
+CONFIG_PREEMPT_NONE_BUILD=y
+CONFIG_PREEMPT_NONE=y
+# CONFIG_PREEMPT_VOLUNTARY is not set
+# CONFIG_PREEMPT is not set
+CONFIG_PREEMPT_COUNT=y
+# CONFIG_PREEMPT_DYNAMIC is not set
+
+#
+# CPU/Task time and stats accounting
+#
+CONFIG_TICK_CPU_ACCOUNTING=y
+# CONFIG_VIRT_CPU_ACCOUNTING_GEN is not set
+# CONFIG_IRQ_TIME_ACCOUNTING is not set
+# CONFIG_BSD_PROCESS_ACCT is not set
+# CONFIG_PSI is not set
+# end of CPU/Task time and stats accounting
+
+CONFIG_CPU_ISOLATION=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+# CONFIG_RCU_EXPERT is not set
+CONFIG_TREE_SRCU=y
+CONFIG_TASKS_RCU_GENERIC=y
+CONFIG_TASKS_TRACE_RCU=y
+CONFIG_RCU_STALL_COMMON=y
+CONFIG_RCU_NEED_SEGCBLIST=y
+# end of RCU Subsystem
+
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+# CONFIG_IKHEADERS is not set
+CONFIG_LOG_BUF_SHIFT=17
+CONFIG_LOG_CPU_MAX_BUF_SHIFT=12
+# CONFIG_PRINTK_INDEX is not set
+CONFIG_GENERIC_SCHED_CLOCK=y
+
+#
+# Scheduler features
+#
+# end of Scheduler features
+
+CONFIG_ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH=y
+CONFIG_CC_HAS_INT128=y
+CONFIG_CC_IMPLICIT_FALLTHROUGH="-Wimplicit-fallthrough=5"
+CONFIG_GCC10_NO_ARRAY_BOUNDS=y
+CONFIG_CC_NO_ARRAY_BOUNDS=y
+CONFIG_GCC_NO_STRINGOP_OVERFLOW=y
+CONFIG_CC_NO_STRINGOP_OVERFLOW=y
+CONFIG_ARCH_SUPPORTS_INT128=y
+CONFIG_CGROUPS=y
+CONFIG_PAGE_COUNTER=y
+# CONFIG_CGROUP_FAVOR_DYNMODS is not set
+CONFIG_MEMCG=y
+CONFIG_MEMCG_KMEM=y
+CONFIG_CGROUP_SCHED=y
+CONFIG_FAIR_GROUP_SCHED=y
+CONFIG_CFS_BANDWIDTH=y
+CONFIG_RT_GROUP_SCHED=y
+CONFIG_SCHED_MM_CID=y
+CONFIG_CGROUP_PIDS=y
+# CONFIG_CGROUP_RDMA is not set
+CONFIG_CGROUP_FREEZER=y
+CONFIG_CGROUP_HUGETLB=y
+CONFIG_CPUSETS=y
+CONFIG_PROC_PID_CPUSET=y
+CONFIG_CGROUP_DEVICE=y
+CONFIG_CGROUP_CPUACCT=y
+CONFIG_CGROUP_PERF=y
+CONFIG_CGROUP_BPF=y
+# CONFIG_CGROUP_MISC is not set
+# CONFIG_CGROUP_DEBUG is not set
+CONFIG_SOCK_CGROUP_DATA=y
+CONFIG_NAMESPACES=y
+CONFIG_UTS_NS=y
+CONFIG_TIME_NS=y
+CONFIG_IPC_NS=y
+CONFIG_USER_NS=y
+CONFIG_PID_NS=y
+CONFIG_CHECKPOINT_RESTORE=y
+# CONFIG_SCHED_AUTOGROUP is not set
+# CONFIG_RELAY is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE="${BR_BINARIES_DIR}/rootfs.cpio"
+CONFIG_INITRAMFS_ROOT_UID=0
+CONFIG_INITRAMFS_ROOT_GID=0
+CONFIG_RD_GZIP=y
+# CONFIG_RD_BZIP2 is not set
+# CONFIG_RD_LZMA is not set
+# CONFIG_RD_XZ is not set
+# CONFIG_RD_LZO is not set
+# CONFIG_RD_LZ4 is not set
+# CONFIG_RD_ZSTD is not set
+CONFIG_INITRAMFS_COMPRESSION_GZIP=y
+# CONFIG_INITRAMFS_COMPRESSION_NONE is not set
+# CONFIG_BOOT_CONFIG is not set
+CONFIG_INITRAMFS_PRESERVE_MTIME=y
+CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE=y
+# CONFIG_CC_OPTIMIZE_FOR_SIZE is not set
+CONFIG_HAVE_LD_DEAD_CODE_DATA_ELIMINATION=y
+# CONFIG_LD_DEAD_CODE_DATA_ELIMINATION is not set
+CONFIG_LD_ORPHAN_WARN=y
+CONFIG_LD_ORPHAN_WARN_LEVEL="warn"
+CONFIG_SYSCTL=y
+CONFIG_SYSCTL_EXCEPTION_TRACE=y
+CONFIG_SYSCTL_ARCH_UNALIGN_ALLOW=y
+CONFIG_EXPERT=y
+CONFIG_MULTIUSER=y
+# CONFIG_SGETMASK_SYSCALL is not set
+# CONFIG_SYSFS_SYSCALL is not set
+CONFIG_FHANDLE=y
+CONFIG_POSIX_TIMERS=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_FUTEX_PI=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+CONFIG_AIO=y
+CONFIG_IO_URING=y
+CONFIG_ADVISE_SYSCALLS=y
+CONFIG_MEMBARRIER=y
+CONFIG_KCMP=y
+CONFIG_RSEQ=y
+# CONFIG_DEBUG_RSEQ is not set
+CONFIG_CACHESTAT_SYSCALL=y
+# CONFIG_PC104 is not set
+CONFIG_KALLSYMS=y
+# CONFIG_KALLSYMS_SELFTEST is not set
+# CONFIG_KALLSYMS_ALL is not set
+CONFIG_KALLSYMS_BASE_RELATIVE=y
+CONFIG_ARCH_HAS_MEMBARRIER_CALLBACKS=y
+CONFIG_ARCH_HAS_MEMBARRIER_SYNC_CORE=y
+CONFIG_HAVE_PERF_EVENTS=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_DEBUG_PERF_USE_VMALLOC is not set
+# end of Kernel Performance Events And Counters
+
+CONFIG_PROFILING=y
+
+#
+# Kexec and crash features
+#
+# CONFIG_KEXEC is not set
+# CONFIG_KEXEC_FILE is not set
+# end of Kexec and crash features
+# end of General setup
+
+CONFIG_64BIT=y
+CONFIG_RISCV=y
+CONFIG_GCC_SUPPORTS_DYNAMIC_FTRACE=y
+CONFIG_RISCV_USE_LINKER_RELAXATION=y
+CONFIG_ARCH_MMAP_RND_BITS_MIN=18
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MIN=8
+CONFIG_ARCH_MMAP_RND_BITS_MAX=24
+CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MAX=17
+CONFIG_RISCV_SBI=y
+CONFIG_MMU=y
+CONFIG_PAGE_OFFSET=0xff60000000000000
+CONFIG_ARCH_FLATMEM_ENABLE=y
+CONFIG_ARCH_SPARSEMEM_ENABLE=y
+CONFIG_ARCH_SELECT_MEMORY_MODEL=y
+CONFIG_ARCH_SUPPORTS_UPROBES=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_GENERIC_BUG=y
+CONFIG_GENERIC_BUG_RELATIVE_POINTERS=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_GENERIC_CSUM=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_FIX_EARLYCON_MEM=y
+CONFIG_PGTABLE_LEVELS=5
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_RISCV_DMA_NONCOHERENT=y
+CONFIG_AS_HAS_INSN=y
+CONFIG_AS_HAS_OPTION_ARCH=y
+
+#
+# SoC selection
+#
+# CONFIG_SOC_MICROCHIP_POLARFIRE is not set
+# CONFIG_ARCH_RENESAS is not set
+CONFIG_ARCH_SIFIVE=y
+CONFIG_SOC_SIFIVE=y
+# CONFIG_ARCH_SOPHGO is not set
+# CONFIG_SOC_STARFIVE is not set
+# CONFIG_ARCH_SUNXI is not set
+# CONFIG_ARCH_THEAD is not set
+CONFIG_ARCH_VIRT=y
+CONFIG_SOC_VIRT=y
+# end of SoC selection
+
+#
+# CPU errata selection
+#
+# CONFIG_ERRATA_ANDES is not set
+CONFIG_ERRATA_SIFIVE=y
+CONFIG_ERRATA_SIFIVE_CIP_453=y
+CONFIG_ERRATA_SIFIVE_CIP_1200=y
+# CONFIG_ERRATA_THEAD is not set
+# end of CPU errata selection
+
+#
+# Platform type
+#
+CONFIG_NONPORTABLE=y
+# CONFIG_ARCH_RV32I is not set
+CONFIG_ARCH_RV64I=y
+# CONFIG_CMODEL_MEDLOW is not set
+CONFIG_CMODEL_MEDANY=y
+CONFIG_SMP=y
+# CONFIG_SCHED_MC is not set
+CONFIG_NR_CPUS=64
+CONFIG_HOTPLUG_CPU=y
+CONFIG_TUNE_GENERIC=y
+# CONFIG_NUMA is not set
+CONFIG_RISCV_ALTERNATIVE=y
+CONFIG_RISCV_ISA_C=y
+CONFIG_RISCV_ISA_SVNAPOT=y
+CONFIG_RISCV_ISA_SVPBMT=y
+CONFIG_TOOLCHAIN_HAS_V=y
+CONFIG_RISCV_ISA_V=y
+CONFIG_RISCV_ISA_V_DEFAULT_ENABLE=y
+CONFIG_RISCV_ISA_V_UCOPY_THRESHOLD=768
+CONFIG_TOOLCHAIN_HAS_ZBB=y
+CONFIG_TOOLCHAIN_HAS_VECTOR_CRYPTO=y
+CONFIG_RISCV_ISA_ZBB=y
+CONFIG_RISCV_ISA_ZICBOM=y
+CONFIG_RISCV_ISA_ZICBOZ=y
+CONFIG_TOOLCHAIN_HAS_ZIHINTPAUSE=y
+CONFIG_TOOLCHAIN_NEEDS_EXPLICIT_ZICSR_ZIFENCEI=y
+CONFIG_FPU=y
+CONFIG_IRQ_STACKS=y
+CONFIG_THREAD_SIZE_ORDER=2
+CONFIG_RISCV_MISALIGNED=y
+CONFIG_RISCV_PROBE_UNALIGNED_ACCESS=y
+# CONFIG_RISCV_EMULATED_UNALIGNED_ACCESS is not set
+# CONFIG_RISCV_SLOW_UNALIGNED_ACCESS is not set
+# CONFIG_RISCV_EFFICIENT_UNALIGNED_ACCESS is not set
+# end of Platform type
+
+#
+# Kernel features
+#
+# CONFIG_HZ_100 is not set
+# CONFIG_HZ_250 is not set
+# CONFIG_HZ_300 is not set
+CONFIG_HZ_1000=y
+CONFIG_HZ=1000
+CONFIG_SCHED_HRTICK=y
+# CONFIG_RISCV_SBI_V01 is not set
+# CONFIG_RISCV_BOOT_SPINWAIT is not set
+CONFIG_ARCH_SUPPORTS_KEXEC=y
+CONFIG_ARCH_SUPPORTS_KEXEC_FILE=y
+CONFIG_ARCH_SUPPORTS_KEXEC_PURGATORY=y
+CONFIG_ARCH_SUPPORTS_CRASH_DUMP=y
+# CONFIG_COMPAT is not set
+# CONFIG_PARAVIRT is not set
+# CONFIG_RELOCATABLE is not set
+# CONFIG_RANDOMIZE_BASE is not set
+# end of Kernel features
+
+#
+# Boot options
+#
+CONFIG_CMDLINE=""
+CONFIG_EFI_STUB=y
+CONFIG_EFI=y
+CONFIG_CC_HAVE_STACKPROTECTOR_TLS=y
+CONFIG_STACKPROTECTOR_PER_TASK=y
+# CONFIG_PHYS_RAM_BASE_FIXED is not set
+CONFIG_RISCV_ISA_FALLBACK=y
+# CONFIG_BUILTIN_DTB is not set
+# end of Boot options
+
+CONFIG_ARCH_PROC_KCORE_TEXT=y
+
+#
+# Power management options
+#
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+# CONFIG_SUSPEND_SKIP_SYNC is not set
+CONFIG_PM_SLEEP=y
+CONFIG_PM_SLEEP_SMP=y
+# CONFIG_PM_AUTOSLEEP is not set
+# CONFIG_PM_USERSPACE_AUTOSLEEP is not set
+# CONFIG_PM_WAKELOCKS is not set
+CONFIG_PM=y
+# CONFIG_PM_DEBUG is not set
+CONFIG_PM_CLK=y
+CONFIG_PM_GENERIC_DOMAINS=y
+# CONFIG_WQ_POWER_EFFICIENT_DEFAULT is not set
+CONFIG_PM_GENERIC_DOMAINS_SLEEP=y
+CONFIG_PM_GENERIC_DOMAINS_OF=y
+CONFIG_CPU_PM=y
+CONFIG_ARCH_HIBERNATION_POSSIBLE=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+# end of Power management options
+
+#
+# CPU Power Management
+#
+
+#
+# CPU Idle
+#
+CONFIG_CPU_IDLE=y
+CONFIG_CPU_IDLE_MULTIPLE_DRIVERS=y
+# CONFIG_CPU_IDLE_GOV_LADDER is not set
+CONFIG_CPU_IDLE_GOV_MENU=y
+# CONFIG_CPU_IDLE_GOV_TEO is not set
+CONFIG_DT_IDLE_STATES=y
+CONFIG_DT_IDLE_GENPD=y
+
+#
+# RISC-V CPU Idle Drivers
+#
+CONFIG_RISCV_SBI_CPUIDLE=y
+# end of RISC-V CPU Idle Drivers
+# end of CPU Idle
+
+#
+# CPU Frequency scaling
+#
+# CONFIG_CPU_FREQ is not set
+# end of CPU Frequency scaling
+# end of CPU Power Management
+
+# CONFIG_VIRTUALIZATION is not set
+CONFIG_ARCH_SUPPORTS_ACPI=y
+# CONFIG_ACPI is not set
+CONFIG_CPU_MITIGATIONS=y
+
+#
+# General architecture-dependent options
+#
+CONFIG_HOTPLUG_CORE_SYNC=y
+CONFIG_HOTPLUG_CORE_SYNC_DEAD=y
+CONFIG_GENERIC_ENTRY=y
+CONFIG_JUMP_LABEL=y
+# CONFIG_STATIC_KEYS_SELFTEST is not set
+CONFIG_HAVE_64BIT_ALIGNED_ACCESS=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_KPROBES_ON_FTRACE=y
+CONFIG_HAVE_FUNCTION_ERROR_INJECTION=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_HAVE_ARCH_TRACEHOOK=y
+CONFIG_HAVE_DMA_CONTIGUOUS=y
+CONFIG_GENERIC_SMP_IDLE_THREAD=y
+CONFIG_GENERIC_IDLE_POLL_SETUP=y
+CONFIG_ARCH_HAS_FORTIFY_SOURCE=y
+CONFIG_ARCH_HAS_SET_MEMORY=y
+CONFIG_ARCH_HAS_SET_DIRECT_MAP=y
+CONFIG_HAVE_ARCH_THREAD_STRUCT_WHITELIST=y
+CONFIG_ARCH_WANTS_NO_INSTR=y
+CONFIG_HAVE_ASM_MODVERSIONS=y
+CONFIG_HAVE_REGS_AND_STACK_ACCESS_API=y
+CONFIG_HAVE_RSEQ=y
+CONFIG_HAVE_FUNCTION_ARG_ACCESS_API=y
+CONFIG_HAVE_PERF_REGS=y
+CONFIG_HAVE_PERF_USER_STACK_DUMP=y
+CONFIG_HAVE_ARCH_JUMP_LABEL=y
+CONFIG_HAVE_ARCH_JUMP_LABEL_RELATIVE=y
+CONFIG_MMU_GATHER_TABLE_FREE=y
+CONFIG_MMU_GATHER_RCU_TABLE_FREE=y
+CONFIG_MMU_LAZY_TLB_REFCOUNT=y
+CONFIG_HAVE_ARCH_SECCOMP=y
+CONFIG_HAVE_ARCH_SECCOMP_FILTER=y
+CONFIG_SECCOMP=y
+CONFIG_HAVE_STACKPROTECTOR=y
+CONFIG_STACKPROTECTOR=y
+CONFIG_STACKPROTECTOR_STRONG=y
+CONFIG_LTO_NONE=y
+CONFIG_ARCH_SUPPORTS_CFI_CLANG=y
+CONFIG_HAVE_CONTEXT_TRACKING_USER=y
+CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN=y
+CONFIG_HAVE_IRQ_TIME_ACCOUNTING=y
+CONFIG_HAVE_MOVE_PUD=y
+CONFIG_HAVE_MOVE_PMD=y
+CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE=y
+CONFIG_HAVE_ARCH_HUGE_VMAP=y
+CONFIG_HAVE_ARCH_HUGE_VMALLOC=y
+CONFIG_ARCH_WANT_HUGE_PMD_SHARE=y
+CONFIG_HAVE_IRQ_EXIT_ON_IRQ_STACK=y
+CONFIG_HAVE_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_SOFTIRQ_ON_OWN_STACK=y
+CONFIG_ARCH_HAS_ELF_RANDOMIZE=y
+CONFIG_HAVE_ARCH_MMAP_RND_BITS=y
+CONFIG_ARCH_MMAP_RND_BITS=18
+CONFIG_HAVE_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_4KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_64KB=y
+CONFIG_PAGE_SIZE_LESS_THAN_256KB=y
+CONFIG_PAGE_SHIFT=12
+CONFIG_ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT=y
+CONFIG_CLONE_BACKWARDS=y
+CONFIG_COMPAT_32BIT_TIME=y
+CONFIG_HAVE_ARCH_VMAP_STACK=y
+CONFIG_VMAP_STACK=y
+CONFIG_HAVE_ARCH_RANDOMIZE_KSTACK_OFFSET=y
+CONFIG_RANDOMIZE_KSTACK_OFFSET=y
+# CONFIG_RANDOMIZE_KSTACK_OFFSET_DEFAULT is not set
+CONFIG_ARCH_OPTIONAL_KERNEL_RWX=y
+CONFIG_ARCH_OPTIONAL_KERNEL_RWX_DEFAULT=y
+CONFIG_ARCH_HAS_STRICT_KERNEL_RWX=y
+CONFIG_STRICT_KERNEL_RWX=y
+CONFIG_ARCH_HAS_STRICT_MODULE_RWX=y
+CONFIG_ARCH_USE_MEMREMAP_PROT=y
+# CONFIG_LOCK_EVENT_COUNTS is not set
+CONFIG_ARCH_HAS_VDSO_DATA=y
+CONFIG_HAVE_PREEMPT_DYNAMIC=y
+CONFIG_HAVE_PREEMPT_DYNAMIC_KEY=y
+CONFIG_ARCH_WANT_LD_ORPHAN_WARN=y
+CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC=y
+CONFIG_ARCH_SUPPORTS_PAGE_TABLE_CHECK=y
+CONFIG_DYNAMIC_SIGFRAME=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+CONFIG_ARCH_HAS_GCOV_PROFILE_ALL=y
+# end of GCOV-based kernel profiling
+
+CONFIG_HAVE_GCC_PLUGINS=y
+# CONFIG_GCC_PLUGINS is not set
+CONFIG_FUNCTION_ALIGNMENT=0
+# end of General architecture-dependent options
+
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+# CONFIG_MODULES is not set
+# CONFIG_BLOCK is not set
+CONFIG_PADATA=y
+CONFIG_ASN1=y
+CONFIG_UNINLINE_SPIN_UNLOCK=y
+CONFIG_ARCH_SUPPORTS_ATOMIC_RMW=y
+CONFIG_MUTEX_SPIN_ON_OWNER=y
+CONFIG_RWSEM_SPIN_ON_OWNER=y
+CONFIG_LOCK_SPIN_ON_OWNER=y
+CONFIG_ARCH_USE_QUEUED_RWLOCKS=y
+CONFIG_QUEUED_RWLOCKS=y
+CONFIG_ARCH_HAS_MMIOWB=y
+CONFIG_MMIOWB=y
+CONFIG_ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE=y
+CONFIG_ARCH_HAS_PREPARE_SYNC_CORE_CMD=y
+CONFIG_ARCH_HAS_SYNC_CORE_BEFORE_USERMODE=y
+CONFIG_ARCH_HAS_SYSCALL_WRAPPER=y
+CONFIG_FREEZER=y
+
+#
+# Executable file formats
+#
+CONFIG_BINFMT_ELF=y
+CONFIG_ELFCORE=y
+CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS=y
+CONFIG_BINFMT_SCRIPT=y
+CONFIG_ARCH_HAS_BINFMT_FLAT=y
+# CONFIG_BINFMT_FLAT is not set
+# CONFIG_BINFMT_MISC is not set
+CONFIG_COREDUMP=y
+# end of Executable file formats
+
+#
+# Memory Management options
+#
+
+#
+# Slab allocator options
+#
+CONFIG_SLUB=y
+# CONFIG_SLUB_TINY is not set
+CONFIG_SLAB_MERGE_DEFAULT=y
+# CONFIG_SLAB_FREELIST_RANDOM is not set
+# CONFIG_SLAB_FREELIST_HARDENED is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_SLUB_CPU_PARTIAL=y
+# CONFIG_RANDOM_KMALLOC_CACHES is not set
+# end of Slab allocator options
+
+# CONFIG_SHUFFLE_PAGE_ALLOCATOR is not set
+CONFIG_COMPAT_BRK=y
+CONFIG_SELECT_MEMORY_MODEL=y
+# CONFIG_FLATMEM_MANUAL is not set
+CONFIG_SPARSEMEM_MANUAL=y
+CONFIG_SPARSEMEM=y
+CONFIG_SPARSEMEM_EXTREME=y
+CONFIG_SPARSEMEM_VMEMMAP_ENABLE=y
+CONFIG_SPARSEMEM_VMEMMAP=y
+CONFIG_ARCH_WANT_OPTIMIZE_HUGETLB_VMEMMAP=y
+CONFIG_HAVE_FAST_GUP=y
+CONFIG_SPLIT_PTLOCK_CPUS=4
+CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK=y
+CONFIG_COMPACTION=y
+CONFIG_COMPACT_UNEVICTABLE_DEFAULT=1
+CONFIG_PAGE_REPORTING=y
+CONFIG_MIGRATION=y
+CONFIG_ARCH_ENABLE_HUGEPAGE_MIGRATION=y
+CONFIG_PCP_BATCH_SCALE_MAX=5
+CONFIG_PHYS_ADDR_T_64BIT=y
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_ARCH_WANTS_THP_SWAP=y
+# CONFIG_TRANSPARENT_HUGEPAGE is not set
+# CONFIG_CMA is not set
+CONFIG_GENERIC_EARLY_IOREMAP=y
+# CONFIG_DEFERRED_STRUCT_PAGE_INIT is not set
+# CONFIG_IDLE_PAGE_TRACKING is not set
+CONFIG_ARCH_HAS_CURRENT_STACK_POINTER=y
+CONFIG_ZONE_DMA32=y
+CONFIG_VM_EVENT_COUNTERS=y
+# CONFIG_PERCPU_STATS is not set
+# CONFIG_GUP_TEST is not set
+# CONFIG_DMAPOOL_TEST is not set
+CONFIG_ARCH_HAS_PTE_SPECIAL=y
+CONFIG_MEMFD_CREATE=y
+CONFIG_SECRETMEM=y
+# CONFIG_ANON_VMA_NAME is not set
+# CONFIG_USERFAULTFD is not set
+# CONFIG_LRU_GEN is not set
+CONFIG_ARCH_SUPPORTS_PER_VMA_LOCK=y
+CONFIG_PER_VMA_LOCK=y
+CONFIG_LOCK_MM_AND_FIND_VMA=y
+
+#
+# Data Access Monitoring
+#
+# CONFIG_DAMON is not set
+# end of Data Access Monitoring
+# end of Memory Management options
+
+# CONFIG_NET is not set
+
+#
+# Device Drivers
+#
+CONFIG_HAVE_PCI=y
+CONFIG_GENERIC_PCI_IOMAP=y
+# CONFIG_PCI is not set
+# CONFIG_PCCARD is not set
+
+#
+# Generic Driver Options
+#
+# CONFIG_UEVENT_HELPER is not set
+CONFIG_DEVTMPFS=y
+CONFIG_DEVTMPFS_MOUNT=y
+# CONFIG_DEVTMPFS_SAFE is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+
+#
+# Firmware loader
+#
+CONFIG_FW_LOADER=y
+CONFIG_EXTRA_FIRMWARE=""
+# CONFIG_FW_LOADER_USER_HELPER is not set
+# CONFIG_FW_LOADER_COMPRESS is not set
+CONFIG_FW_CACHE=y
+# CONFIG_FW_UPLOAD is not set
+# end of Firmware loader
+
+CONFIG_ALLOW_DEV_COREDUMP=y
+# CONFIG_DEBUG_DRIVER is not set
+# CONFIG_DEBUG_DEVRES is not set
+# CONFIG_DEBUG_TEST_DRIVER_REMOVE is not set
+CONFIG_GENERIC_CPU_DEVICES=y
+CONFIG_REGMAP=y
+CONFIG_REGMAP_MMIO=y
+CONFIG_DMA_SHARED_BUFFER=y
+# CONFIG_DMA_FENCE_TRACE is not set
+CONFIG_GENERIC_ARCH_TOPOLOGY=y
+# CONFIG_FW_DEVLINK_SYNC_STATE_TIMEOUT is not set
+# end of Generic Driver Options
+
+#
+# Bus devices
+#
+# CONFIG_ARM_INTEGRATOR_LM is not set
+# CONFIG_BT1_APB is not set
+# CONFIG_BT1_AXI is not set
+# CONFIG_MOXTET is not set
+# CONFIG_HISILICON_LPC is not set
+# CONFIG_INTEL_IXP4XX_EB is not set
+# CONFIG_QCOM_EBI2 is not set
+# CONFIG_MHI_BUS is not set
+# CONFIG_MHI_BUS_EP is not set
+# end of Bus devices
+
+#
+# Cache Drivers
+#
+# CONFIG_AX45MP_L2_CACHE is not set
+# CONFIG_SIFIVE_CCACHE is not set
+# end of Cache Drivers
+
+#
+# Firmware Drivers
+#
+
+#
+# ARM System Control and Management Interface Protocol
+#
+# CONFIG_ARM_SCMI_PROTOCOL is not set
+# CONFIG_ARM_SCMI_POWER_CONTROL is not set
+# end of ARM System Control and Management Interface Protocol
+
+# CONFIG_FIRMWARE_MEMMAP is not set
+# CONFIG_FW_CFG_SYSFS is not set
+# CONFIG_SYSFB_SIMPLEFB is not set
+# CONFIG_BCM47XX_NVRAM is not set
+# CONFIG_TEE_BNXT_FW is not set
+# CONFIG_GOOGLE_FIRMWARE is not set
+
+#
+# EFI (Extensible Firmware Interface) Support
+#
+CONFIG_EFI_ESRT=y
+CONFIG_EFI_PARAMS_FROM_FDT=y
+CONFIG_EFI_RUNTIME_WRAPPERS=y
+CONFIG_EFI_GENERIC_STUB=y
+# CONFIG_EFI_ZBOOT is not set
+# CONFIG_EFI_BOOTLOADER_CONTROL is not set
+# CONFIG_EFI_CAPSULE_LOADER is not set
+# CONFIG_EFI_TEST is not set
+# CONFIG_RESET_ATTACK_MITIGATION is not set
+# CONFIG_EFI_RCI2_TABLE is not set
+# CONFIG_EFI_DISABLE_PCI_DMA is not set
+CONFIG_EFI_EARLYCON=y
+# CONFIG_EFI_DISABLE_RUNTIME is not set
+# CONFIG_EFI_COCO_SECRET is not set
+# end of EFI (Extensible Firmware Interface) Support
+
+#
+# Qualcomm firmware drivers
+#
+# end of Qualcomm firmware drivers
+
+#
+# Tegra firmware driver
+#
+# end of Tegra firmware driver
+# end of Firmware Drivers
+
+# CONFIG_GNSS is not set
+# CONFIG_MTD is not set
+CONFIG_DTC=y
+CONFIG_OF=y
+# CONFIG_OF_UNITTEST is not set
+# CONFIG_OF_ALL_DTBS is not set
+CONFIG_OF_FLATTREE=y
+CONFIG_OF_EARLY_FLATTREE=y
+CONFIG_OF_KOBJ=y
+CONFIG_OF_ADDRESS=y
+CONFIG_OF_IRQ=y
+CONFIG_OF_RESERVED_MEM=y
+# CONFIG_OF_OVERLAY is not set
+# CONFIG_PARPORT is not set
+
+#
+# NVME Support
+#
+# end of NVME Support
+
+#
+# Misc devices
+#
+# CONFIG_AD525X_DPOT is not set
+# CONFIG_DUMMY_IRQ is not set
+# CONFIG_ICS932S401 is not set
+# CONFIG_ATMEL_SSC is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_SMPRO_ERRMON is not set
+# CONFIG_SMPRO_MISC is not set
+# CONFIG_GEHC_ACHC is not set
+# CONFIG_QCOM_COINCELL is not set
+# CONFIG_QCOM_FASTRPC is not set
+# CONFIG_APDS9802ALS is not set
+# CONFIG_ISL29003 is not set
+# CONFIG_ISL29020 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_SENSORS_BH1770 is not set
+# CONFIG_SENSORS_APDS990X is not set
+# CONFIG_HMC6352 is not set
+# CONFIG_DS1682 is not set
+# CONFIG_LATTICE_ECP3_CONFIG is not set
+# CONFIG_SRAM is not set
+# CONFIG_XILINX_SDFEC is not set
+# CONFIG_OPEN_DICE is not set
+# CONFIG_VCPU_STALL_DETECTOR is not set
+# CONFIG_NSM is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_AT24 is not set
+# CONFIG_EEPROM_AT25 is not set
+# CONFIG_EEPROM_MAX6875 is not set
+# CONFIG_EEPROM_93CX6 is not set
+# CONFIG_EEPROM_93XX46 is not set
+# CONFIG_EEPROM_IDT_89HPESX is not set
+# CONFIG_EEPROM_EE1004 is not set
+# end of EEPROM support
+
+#
+# Texas Instruments shared transport line discipline
+#
+# end of Texas Instruments shared transport line discipline
+
+# CONFIG_SENSORS_LIS3_SPI is not set
+# CONFIG_SENSORS_LIS3_I2C is not set
+# CONFIG_ALTERA_STAPL is not set
+# CONFIG_ECHO is not set
+# CONFIG_MISC_RTSX_USB is not set
+# CONFIG_PVPANIC is not set
+# end of Misc devices
+
+#
+# SCSI device support
+#
+# end of SCSI device support
+
+#
+# IEEE 1394 (FireWire) support
+#
+# CONFIG_FIREWIRE is not set
+# end of IEEE 1394 (FireWire) support
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+# CONFIG_INPUT_FF_MEMLESS is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+# CONFIG_INPUT_MATRIXKMAP is not set
+CONFIG_INPUT_VIVALDIFMAP=y
+
+#
+# Userland interfaces
+#
+CONFIG_INPUT_MOUSEDEV=y
+# CONFIG_INPUT_MOUSEDEV_PSAUX is not set
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+# CONFIG_INPUT_JOYDEV is not set
+# CONFIG_INPUT_EVDEV is not set
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADP5588 is not set
+# CONFIG_KEYBOARD_ADP5589 is not set
+CONFIG_KEYBOARD_ATKBD=y
+# CONFIG_KEYBOARD_QT1050 is not set
+# CONFIG_KEYBOARD_QT1070 is not set
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_CLPS711X is not set
+# CONFIG_KEYBOARD_DLINK_DIR685 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
+# CONFIG_KEYBOARD_EP93XX is not set
+# CONFIG_KEYBOARD_GPIO is not set
+# CONFIG_KEYBOARD_GPIO_POLLED is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_TCA8418 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+# CONFIG_KEYBOARD_LM8333 is not set
+# CONFIG_KEYBOARD_LPC32XX is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_MCS is not set
+# CONFIG_KEYBOARD_MPR121 is not set
+# CONFIG_KEYBOARD_SNVS_PWRKEY is not set
+# CONFIG_KEYBOARD_IMX is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+# CONFIG_KEYBOARD_NOMADIK is not set
+# CONFIG_KEYBOARD_TEGRA is not set
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_PXA27x is not set
+# CONFIG_KEYBOARD_SAMSUNG is not set
+# CONFIG_KEYBOARD_GOLDFISH_EVENTS is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_ST_KEYSCAN is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+# CONFIG_KEYBOARD_SH_KEYSC is not set
+# CONFIG_KEYBOARD_OMAP4 is not set
+# CONFIG_KEYBOARD_SPEAR is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+# CONFIG_KEYBOARD_CAP11XX is not set
+# CONFIG_KEYBOARD_BCM is not set
+# CONFIG_KEYBOARD_MT6779 is not set
+# CONFIG_KEYBOARD_MTK_PMIC is not set
+# CONFIG_KEYBOARD_CYPRESS_SF is not set
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_BYD=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_SYNAPTICS_SMBUS=y
+CONFIG_MOUSE_PS2_CYPRESS=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_PS2_ELANTECH is not set
+# CONFIG_MOUSE_PS2_SENTELIC is not set
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_PS2_FOCALTECH=y
+CONFIG_MOUSE_PS2_SMBUS=y
+# CONFIG_MOUSE_SERIAL is not set
+# CONFIG_MOUSE_APPLETOUCH is not set
+# CONFIG_MOUSE_BCM5974 is not set
+# CONFIG_MOUSE_CYAPA is not set
+# CONFIG_MOUSE_ELAN_I2C is not set
+# CONFIG_MOUSE_VSXXXAA is not set
+# CONFIG_MOUSE_GPIO is not set
+# CONFIG_MOUSE_SYNAPTICS_I2C is not set
+# CONFIG_MOUSE_SYNAPTICS_USB is not set
+# CONFIG_INPUT_JOYSTICK is not set
+# CONFIG_INPUT_TABLET is not set
+# CONFIG_INPUT_TOUCHSCREEN is not set
+# CONFIG_INPUT_MISC is not set
+# CONFIG_RMI4_CORE is not set
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_SERPORT=y
+CONFIG_SERIO_LIBPS2=y
+# CONFIG_SERIO_RAW is not set
+# CONFIG_SERIO_ALTERA_PS2 is not set
+# CONFIG_SERIO_PS2MULT is not set
+# CONFIG_SERIO_ARC_PS2 is not set
+# CONFIG_SERIO_APBPS2 is not set
+# CONFIG_SERIO_OLPC_APSP is not set
+# CONFIG_SERIO_SUN4I_PS2 is not set
+# CONFIG_SERIO_GPIO_PS2 is not set
+# CONFIG_USERIO is not set
+# CONFIG_GAMEPORT is not set
+# end of Hardware I/O ports
+# end of Input device support
+
+#
+# Character devices
+#
+CONFIG_TTY=y
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+CONFIG_VT_CONSOLE_SLEEP=y
+CONFIG_VT_HW_CONSOLE_BINDING=y
+CONFIG_UNIX98_PTYS=y
+CONFIG_LEGACY_PTYS=y
+CONFIG_LEGACY_PTY_COUNT=256
+CONFIG_LEGACY_TIOCSTI=y
+CONFIG_LDISC_AUTOLOAD=y
+
+#
+# Serial drivers
+#
+CONFIG_SERIAL_EARLYCON=y
+CONFIG_SERIAL_8250=y
+CONFIG_SERIAL_8250_DEPRECATED_OPTIONS=y
+CONFIG_SERIAL_8250_16550A_VARIANTS=y
+# CONFIG_SERIAL_8250_FINTEK is not set
+CONFIG_SERIAL_8250_CONSOLE=y
+CONFIG_SERIAL_8250_DMA=y
+CONFIG_SERIAL_8250_NR_UARTS=4
+CONFIG_SERIAL_8250_RUNTIME_UARTS=4
+# CONFIG_SERIAL_8250_EXTENDED is not set
+# CONFIG_SERIAL_8250_ASPEED_VUART is not set
+CONFIG_SERIAL_8250_DWLIB=y
+# CONFIG_SERIAL_8250_FSL is not set
+CONFIG_SERIAL_8250_DW=y
+# CONFIG_SERIAL_8250_EM is not set
+# CONFIG_SERIAL_8250_IOC3 is not set
+# CONFIG_SERIAL_8250_RT288X is not set
+# CONFIG_SERIAL_8250_OMAP is not set
+# CONFIG_SERIAL_8250_LPC18XX is not set
+# CONFIG_SERIAL_8250_MT6577 is not set
+# CONFIG_SERIAL_8250_UNIPHIER is not set
+# CONFIG_SERIAL_8250_INGENIC is not set
+# CONFIG_SERIAL_8250_PXA is not set
+CONFIG_SERIAL_8250_TEGRA=y
+# CONFIG_SERIAL_8250_BCM7271 is not set
+CONFIG_SERIAL_OF_PLATFORM=y
+
+#
+# Non-8250 serial port support
+#
+# CONFIG_SERIAL_AMBA_PL010 is not set
+# CONFIG_SERIAL_EARLYCON_SEMIHOST is not set
+# CONFIG_SERIAL_EARLYCON_RISCV_SBI is not set
+# CONFIG_SERIAL_ATMEL is not set
+# CONFIG_SERIAL_MESON is not set
+# CONFIG_SERIAL_CLPS711X is not set
+# CONFIG_SERIAL_SAMSUNG is not set
+# CONFIG_SERIAL_TEGRA is not set
+# CONFIG_SERIAL_MAX3100 is not set
+# CONFIG_SERIAL_MAX310X is not set
+# CONFIG_SERIAL_IMX is not set
+# CONFIG_SERIAL_IMX_EARLYCON is not set
+# CONFIG_SERIAL_UARTLITE is not set
+# CONFIG_SERIAL_SH_SCI is not set
+# CONFIG_SERIAL_HS_LPC32XX is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_MSM is not set
+# CONFIG_SERIAL_VT8500 is not set
+# CONFIG_SERIAL_OMAP is not set
+CONFIG_SERIAL_SIFIVE=y
+CONFIG_SERIAL_SIFIVE_CONSOLE=y
+# CONFIG_SERIAL_LANTIQ is not set
+# CONFIG_SERIAL_SCCNXP is not set
+# CONFIG_SERIAL_SC16IS7XX is not set
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_BCM63XX is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+# CONFIG_SERIAL_MXS_AUART is not set
+# CONFIG_SERIAL_XILINX_PS_UART is not set
+# CONFIG_SERIAL_MPS2_UART is not set
+# CONFIG_SERIAL_ARC is not set
+# CONFIG_SERIAL_FSL_LPUART is not set
+# CONFIG_SERIAL_FSL_LINFLEXUART is not set
+# CONFIG_SERIAL_CONEXANT_DIGICOLOR is not set
+# CONFIG_SERIAL_ST_ASC is not set
+# CONFIG_SERIAL_SPRD is not set
+# CONFIG_SERIAL_STM32 is not set
+# CONFIG_SERIAL_MVEBU_UART is not set
+# CONFIG_SERIAL_OWL is not set
+# CONFIG_SERIAL_RDA is not set
+# CONFIG_SERIAL_MILBEAUT_USIO is not set
+# CONFIG_SERIAL_LITEUART is not set
+# CONFIG_SERIAL_SUNPLUS is not set
+# CONFIG_SERIAL_NUVOTON_MA35D1 is not set
+# CONFIG_SERIAL_ESP32 is not set
+# CONFIG_SERIAL_ESP32_ACM is not set
+# end of Serial drivers
+
+CONFIG_SERIAL_MCTRL_GPIO=y
+# CONFIG_SERIAL_NONSTANDARD is not set
+# CONFIG_GOLDFISH_TTY is not set
+# CONFIG_NULL_TTY is not set
+CONFIG_HVC_DRIVER=y
+# CONFIG_HVC_RISCV_SBI is not set
+# CONFIG_RPMSG_TTY is not set
+# CONFIG_SERIAL_DEV_BUS is not set
+# CONFIG_TTY_PRINTK is not set
+CONFIG_VIRTIO_CONSOLE=y
+# CONFIG_IPMI_HANDLER is not set
+# CONFIG_ASPEED_KCS_IPMI_BMC is not set
+# CONFIG_NPCM7XX_KCS_IPMI_BMC is not set
+# CONFIG_ASPEED_BT_IPMI_BMC is not set
+CONFIG_HW_RANDOM=y
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+CONFIG_HW_RANDOM_ATMEL=y
+# CONFIG_HW_RANDOM_BA431 is not set
+CONFIG_HW_RANDOM_BCM2835=y
+CONFIG_HW_RANDOM_IPROC_RNG200=y
+CONFIG_HW_RANDOM_IXP4XX=y
+CONFIG_HW_RANDOM_OMAP=y
+CONFIG_HW_RANDOM_OMAP3_ROM=y
+CONFIG_HW_RANDOM_VIRTIO=y
+CONFIG_HW_RANDOM_MXC_RNGA=y
+CONFIG_HW_RANDOM_IMX_RNGC=y
+CONFIG_HW_RANDOM_INGENIC_RNG=y
+CONFIG_HW_RANDOM_INGENIC_TRNG=y
+CONFIG_HW_RANDOM_NOMADIK=y
+CONFIG_HW_RANDOM_HISI=y
+# CONFIG_HW_RANDOM_HISTB is not set
+# CONFIG_HW_RANDOM_ST is not set
+CONFIG_HW_RANDOM_XGENE=y
+CONFIG_HW_RANDOM_STM32=y
+# CONFIG_HW_RANDOM_PIC32 is not set
+CONFIG_HW_RANDOM_MESON=y
+CONFIG_HW_RANDOM_MTK=y
+CONFIG_HW_RANDOM_EXYNOS=y
+CONFIG_HW_RANDOM_NPCM=y
+CONFIG_HW_RANDOM_KEYSTONE=y
+# CONFIG_HW_RANDOM_CCTRNG is not set
+# CONFIG_HW_RANDOM_XIPHERA is not set
+# CONFIG_HW_RANDOM_JH7110 is not set
+CONFIG_DEVMEM=y
+CONFIG_DEVPORT=y
+# CONFIG_TCG_TPM is not set
+# CONFIG_XILLYBUS is not set
+# CONFIG_XILLYUSB is not set
+# end of Character devices
+
+#
+# I2C support
+#
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+# CONFIG_I2C_CHARDEV is not set
+# CONFIG_I2C_MUX is not set
+# CONFIG_I2C_ATR is not set
+CONFIG_I2C_HELPER_AUTO=y
+
+#
+# I2C Hardware Bus support
+#
+# CONFIG_I2C_HIX5HD2 is not set
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_ALTERA is not set
+# CONFIG_I2C_ASPEED is not set
+# CONFIG_I2C_AT91 is not set
+# CONFIG_I2C_AXXIA is not set
+# CONFIG_I2C_BCM2835 is not set
+# CONFIG_I2C_BCM_IPROC is not set
+# CONFIG_I2C_BCM_KONA is not set
+CONFIG_I2C_BRCMSTB=y
+# CONFIG_I2C_CADENCE is not set
+# CONFIG_I2C_CBUS_GPIO is not set
+# CONFIG_I2C_DAVINCI is not set
+# CONFIG_I2C_DESIGNWARE_PLATFORM is not set
+# CONFIG_I2C_DIGICOLOR is not set
+# CONFIG_I2C_EMEV2 is not set
+# CONFIG_I2C_EXYNOS5 is not set
+# CONFIG_I2C_GPIO is not set
+# CONFIG_I2C_GXP is not set
+# CONFIG_I2C_HIGHLANDER is not set
+# CONFIG_I2C_HISI is not set
+# CONFIG_I2C_IMG is not set
+# CONFIG_I2C_IMX is not set
+# CONFIG_I2C_IMX_LPI2C is not set
+# CONFIG_I2C_IOP3XX is not set
+# CONFIG_I2C_JZ4780 is not set
+# CONFIG_I2C_LPC2K is not set
+# CONFIG_I2C_LS2X is not set
+# CONFIG_I2C_MESON is not set
+# CONFIG_I2C_MICROCHIP_CORE is not set
+# CONFIG_I2C_MT65XX is not set
+# CONFIG_I2C_MT7621 is not set
+# CONFIG_I2C_MV64XXX is not set
+# CONFIG_I2C_MXS is not set
+# CONFIG_I2C_NPCM is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_OMAP is not set
+# CONFIG_I2C_OWL is not set
+# CONFIG_I2C_APPLE is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_PNX is not set
+# CONFIG_I2C_PXA is not set
+# CONFIG_I2C_QCOM_CCI is not set
+# CONFIG_I2C_QUP is not set
+# CONFIG_I2C_RIIC is not set
+# CONFIG_I2C_RK3X is not set
+# CONFIG_I2C_RZV2M is not set
+# CONFIG_I2C_S3C2410 is not set
+# CONFIG_I2C_SH_MOBILE is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_SPRD is not set
+# CONFIG_I2C_ST is not set
+# CONFIG_I2C_STM32F4 is not set
+# CONFIG_I2C_STM32F7 is not set
+# CONFIG_I2C_SUN6I_P2WI is not set
+# CONFIG_I2C_SYNQUACER is not set
+# CONFIG_I2C_TEGRA is not set
+# CONFIG_I2C_TEGRA_BPMP is not set
+# CONFIG_I2C_UNIPHIER is not set
+# CONFIG_I2C_UNIPHIER_F is not set
+# CONFIG_I2C_VERSATILE is not set
+# CONFIG_I2C_WMT is not set
+# CONFIG_I2C_XILINX is not set
+# CONFIG_I2C_XLP9XX is not set
+# CONFIG_I2C_RCAR is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_DIOLAN_U2C is not set
+# CONFIG_I2C_CP2615 is not set
+# CONFIG_I2C_ROBOTFUZZ_OSIF is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+# CONFIG_I2C_MLXCPLD is not set
+# CONFIG_I2C_VIRTIO is not set
+# end of I2C Hardware Bus support
+
+# CONFIG_I2C_SLAVE is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+# end of I2C support
+
+# CONFIG_I3C is not set
+CONFIG_SPI=y
+# CONFIG_SPI_DEBUG is not set
+CONFIG_SPI_MASTER=y
+# CONFIG_SPI_MEM is not set
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_ALTERA is not set
+# CONFIG_SPI_ALTERA_CORE is not set
+# CONFIG_SPI_AMLOGIC_SPIFC_A1 is not set
+# CONFIG_SPI_AR934X is not set
+# CONFIG_SPI_ATH79 is not set
+# CONFIG_SPI_ARMADA_3700 is not set
+# CONFIG_SPI_ASPEED_SMC is not set
+# CONFIG_SPI_ATMEL is not set
+# CONFIG_SPI_ATMEL_QUADSPI is not set
+# CONFIG_SPI_AXI_SPI_ENGINE is not set
+# CONFIG_SPI_BCM2835 is not set
+# CONFIG_SPI_BCM2835AUX is not set
+# CONFIG_SPI_BCM63XX is not set
+# CONFIG_SPI_BCM63XX_HSSPI is not set
+# CONFIG_SPI_BCM_QSPI is not set
+# CONFIG_SPI_BCMBCA_HSSPI is not set
+# CONFIG_SPI_BITBANG is not set
+# CONFIG_SPI_CADENCE is not set
+# CONFIG_SPI_CADENCE_QUADSPI is not set
+# CONFIG_SPI_CLPS711X is not set
+# CONFIG_SPI_DAVINCI is not set
+# CONFIG_SPI_DESIGNWARE is not set
+# CONFIG_SPI_EP93XX is not set
+# CONFIG_SPI_FSL_LPSPI is not set
+# CONFIG_SPI_FSL_QUADSPI is not set
+# CONFIG_SPI_GXP is not set
+# CONFIG_SPI_HISI_KUNPENG is not set
+# CONFIG_SPI_HISI_SFC_V3XX is not set
+# CONFIG_SPI_NXP_FLEXSPI is not set
+# CONFIG_SPI_GPIO is not set
+# CONFIG_SPI_IMG_SPFI is not set
+# CONFIG_SPI_IMX is not set
+# CONFIG_SPI_INGENIC is not set
+# CONFIG_SPI_JCORE is not set
+# CONFIG_SPI_LOONGSON_PLATFORM is not set
+# CONFIG_SPI_LP8841_RTC is not set
+# CONFIG_SPI_FSL_SPI is not set
+# CONFIG_SPI_FSL_DSPI is not set
+# CONFIG_SPI_MESON_SPICC is not set
+# CONFIG_SPI_MESON_SPIFC is not set
+# CONFIG_SPI_MICROCHIP_CORE is not set
+# CONFIG_SPI_MICROCHIP_CORE_QSPI is not set
+# CONFIG_SPI_MT65XX is not set
+# CONFIG_SPI_MT7621 is not set
+# CONFIG_SPI_MTK_NOR is not set
+# CONFIG_SPI_WPCM_FIU is not set
+# CONFIG_SPI_NPCM_FIU is not set
+# CONFIG_SPI_NPCM_PSPI is not set
+# CONFIG_SPI_LANTIQ_SSC is not set
+# CONFIG_SPI_OC_TINY is not set
+# CONFIG_SPI_OMAP24XX is not set
+# CONFIG_SPI_TI_QSPI is not set
+# CONFIG_SPI_ORION is not set
+# CONFIG_SPI_PIC32 is not set
+# CONFIG_SPI_PIC32_SQI is not set
+# CONFIG_SPI_PXA2XX is not set
+# CONFIG_SPI_ROCKCHIP is not set
+# CONFIG_SPI_ROCKCHIP_SFC is not set
+# CONFIG_SPI_RSPI is not set
+# CONFIG_SPI_RZV2M_CSI is not set
+# CONFIG_SPI_QCOM_QSPI is not set
+# CONFIG_SPI_QUP is not set
+# CONFIG_SPI_S3C64XX is not set
+# CONFIG_SPI_SC18IS602 is not set
+# CONFIG_SPI_SH_MSIOF is not set
+# CONFIG_SPI_SH is not set
+# CONFIG_SPI_SH_HSPI is not set
+CONFIG_SPI_SIFIVE=y
+# CONFIG_SPI_SPRD is not set
+# CONFIG_SPI_SPRD_ADI is not set
+# CONFIG_SPI_STM32 is not set
+# CONFIG_SPI_ST_SSC4 is not set
+# CONFIG_SPI_SUN4I is not set
+# CONFIG_SPI_SUN6I is not set
+# CONFIG_SPI_SUNPLUS_SP7021 is not set
+# CONFIG_SPI_SYNQUACER is not set
+# CONFIG_SPI_MXIC is not set
+# CONFIG_SPI_TEGRA210_QUAD is not set
+# CONFIG_SPI_TEGRA114 is not set
+# CONFIG_SPI_TEGRA20_SFLASH is not set
+# CONFIG_SPI_TEGRA20_SLINK is not set
+# CONFIG_SPI_UNIPHIER is not set
+# CONFIG_SPI_XCOMM is not set
+# CONFIG_SPI_XILINX is not set
+# CONFIG_SPI_XLP is not set
+# CONFIG_SPI_XTENSA_XTFPGA is not set
+# CONFIG_SPI_ZYNQMP_GQSPI is not set
+# CONFIG_SPI_AMD is not set
+
+#
+# SPI Multiplexer support
+#
+# CONFIG_SPI_MUX is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+# CONFIG_SPI_TLE62X0 is not set
+# CONFIG_SPI_SLAVE is not set
+# CONFIG_SPMI is not set
+# CONFIG_HSI is not set
+# CONFIG_PPS is not set
+
+#
+# PTP clock support
+#
+CONFIG_PTP_1588_CLOCK_OPTIONAL=y
+
+#
+# Enable PHYLIB and NETWORK_PHY_TIMESTAMPING to see the additional clocks.
+#
+# end of PTP clock support
+
+CONFIG_PINCTRL=y
+CONFIG_PINMUX=y
+CONFIG_PINCONF=y
+CONFIG_GENERIC_PINCONF=y
+# CONFIG_DEBUG_PINCTRL is not set
+# CONFIG_PINCTRL_AMD is not set
+# CONFIG_PINCTRL_AT91PIO4 is not set
+# CONFIG_PINCTRL_AW9523 is not set
+# CONFIG_PINCTRL_BM1880 is not set
+# CONFIG_PINCTRL_CY8C95X0 is not set
+# CONFIG_PINCTRL_DA850_PUPD is not set
+# CONFIG_PINCTRL_EQUILIBRIUM is not set
+# CONFIG_PINCTRL_INGENIC is not set
+# CONFIG_PINCTRL_LOONGSON2 is not set
+# CONFIG_PINCTRL_LPC18XX is not set
+# CONFIG_PINCTRL_MCP23S08 is not set
+# CONFIG_PINCTRL_MICROCHIP_SGPIO is not set
+# CONFIG_PINCTRL_OCELOT is not set
+# CONFIG_PINCTRL_PISTACHIO is not set
+# CONFIG_PINCTRL_ROCKCHIP is not set
+# CONFIG_PINCTRL_SINGLE is not set
+# CONFIG_PINCTRL_STMFX is not set
+# CONFIG_PINCTRL_SX150X is not set
+# CONFIG_PINCTRL_MLXBF3 is not set
+# CONFIG_PINCTRL_OWL is not set
+# CONFIG_PINCTRL_ASPEED_G4 is not set
+# CONFIG_PINCTRL_ASPEED_G5 is not set
+# CONFIG_PINCTRL_ASPEED_G6 is not set
+# CONFIG_PINCTRL_BCM281XX is not set
+# CONFIG_PINCTRL_BCM2835 is not set
+# CONFIG_PINCTRL_BCM4908 is not set
+# CONFIG_PINCTRL_BCM6318 is not set
+# CONFIG_PINCTRL_BCM6328 is not set
+# CONFIG_PINCTRL_BCM6358 is not set
+# CONFIG_PINCTRL_BCM6362 is not set
+# CONFIG_PINCTRL_BCM6368 is not set
+# CONFIG_PINCTRL_BCM63268 is not set
+# CONFIG_PINCTRL_IPROC_GPIO is not set
+# CONFIG_PINCTRL_CYGNUS_MUX is not set
+# CONFIG_PINCTRL_NS is not set
+# CONFIG_PINCTRL_NSP_GPIO is not set
+# CONFIG_PINCTRL_NS2_MUX is not set
+# CONFIG_PINCTRL_NSP_MUX is not set
+# CONFIG_PINCTRL_AS370 is not set
+# CONFIG_PINCTRL_BERLIN_BG4CT is not set
+
+#
+# Intel pinctrl drivers
+#
+# CONFIG_PINCTRL_BAYTRAIL is not set
+# CONFIG_PINCTRL_CHERRYVIEW is not set
+# CONFIG_PINCTRL_LYNXPOINT is not set
+# CONFIG_PINCTRL_ALDERLAKE is not set
+# CONFIG_PINCTRL_BROXTON is not set
+# CONFIG_PINCTRL_CANNONLAKE is not set
+# CONFIG_PINCTRL_CEDARFORK is not set
+# CONFIG_PINCTRL_DENVERTON is not set
+# CONFIG_PINCTRL_ELKHARTLAKE is not set
+# CONFIG_PINCTRL_EMMITSBURG is not set
+# CONFIG_PINCTRL_GEMINILAKE is not set
+# CONFIG_PINCTRL_ICELAKE is not set
+# CONFIG_PINCTRL_JASPERLAKE is not set
+# CONFIG_PINCTRL_LAKEFIELD is not set
+# CONFIG_PINCTRL_LEWISBURG is not set
+# CONFIG_PINCTRL_METEORLAKE is not set
+# CONFIG_PINCTRL_SUNRISEPOINT is not set
+# CONFIG_PINCTRL_TIGERLAKE is not set
+# CONFIG_PINCTRL_MERRIFIELD is not set
+# CONFIG_PINCTRL_MOOREFIELD is not set
+# end of Intel pinctrl drivers
+
+#
+# MediaTek pinctrl drivers
+#
+# CONFIG_EINT_MTK is not set
+# CONFIG_PINCTRL_MT2701 is not set
+# CONFIG_PINCTRL_MT7623 is not set
+# CONFIG_PINCTRL_MT7629 is not set
+# CONFIG_PINCTRL_MT8135 is not set
+# CONFIG_PINCTRL_MT8127 is not set
+# CONFIG_PINCTRL_MT2712 is not set
+# CONFIG_PINCTRL_MT6765 is not set
+# CONFIG_PINCTRL_MT6779 is not set
+# CONFIG_PINCTRL_MT6795 is not set
+# CONFIG_PINCTRL_MT6797 is not set
+# CONFIG_PINCTRL_MT7622 is not set
+# CONFIG_PINCTRL_MT7981 is not set
+# CONFIG_PINCTRL_MT7986 is not set
+# CONFIG_PINCTRL_MT8167 is not set
+# CONFIG_PINCTRL_MT8173 is not set
+# CONFIG_PINCTRL_MT8183 is not set
+# CONFIG_PINCTRL_MT8186 is not set
+# CONFIG_PINCTRL_MT8188 is not set
+# CONFIG_PINCTRL_MT8192 is not set
+# CONFIG_PINCTRL_MT8195 is not set
+# CONFIG_PINCTRL_MT8365 is not set
+# CONFIG_PINCTRL_MT8516 is not set
+# CONFIG_PINCTRL_MT6397 is not set
+# end of MediaTek pinctrl drivers
+
+CONFIG_PINCTRL_MESON=y
+# CONFIG_PINCTRL_NOMADIK is not set
+# CONFIG_PINCTRL_WPCM450 is not set
+# CONFIG_PINCTRL_NPCM7XX is not set
+# CONFIG_PINCTRL_NPCM8XX is not set
+# CONFIG_PINCTRL_PXA25X is not set
+# CONFIG_PINCTRL_PXA27X is not set
+# CONFIG_PINCTRL_MSM is not set
+# CONFIG_PINCTRL_QCOM_SSBI_PMIC is not set
+# CONFIG_PINCTRL_LPASS_LPI is not set
+
+#
+# Renesas pinctrl drivers
+#
+# CONFIG_PINCTRL_RENESAS is not set
+# CONFIG_PINCTRL_PFC_EMEV2 is not set
+# CONFIG_PINCTRL_PFC_R8A77995 is not set
+# CONFIG_PINCTRL_PFC_R8A7794 is not set
+# CONFIG_PINCTRL_PFC_R8A77990 is not set
+# CONFIG_PINCTRL_PFC_R8A7779 is not set
+# CONFIG_PINCTRL_PFC_R8A7790 is not set
+# CONFIG_PINCTRL_PFC_R8A77951 is not set
+# CONFIG_PINCTRL_PFC_R8A7778 is not set
+# CONFIG_PINCTRL_PFC_R8A7793 is not set
+# CONFIG_PINCTRL_PFC_R8A7791 is not set
+# CONFIG_PINCTRL_PFC_R8A77965 is not set
+# CONFIG_PINCTRL_PFC_R8A77960 is not set
+# CONFIG_PINCTRL_PFC_R8A77961 is not set
+# CONFIG_PINCTRL_PFC_R8A779F0 is not set
+# CONFIG_PINCTRL_PFC_R8A7792 is not set
+# CONFIG_PINCTRL_PFC_R8A77980 is not set
+# CONFIG_PINCTRL_PFC_R8A77970 is not set
+# CONFIG_PINCTRL_PFC_R8A779A0 is not set
+# CONFIG_PINCTRL_PFC_R8A779G0 is not set
+# CONFIG_PINCTRL_PFC_R8A779H0 is not set
+# CONFIG_PINCTRL_PFC_R8A7740 is not set
+# CONFIG_PINCTRL_PFC_R8A73A4 is not set
+# CONFIG_PINCTRL_RZA1 is not set
+# CONFIG_PINCTRL_RZA2 is not set
+# CONFIG_PINCTRL_RZG2L is not set
+# CONFIG_PINCTRL_PFC_R8A77470 is not set
+# CONFIG_PINCTRL_PFC_R8A7745 is not set
+# CONFIG_PINCTRL_PFC_R8A7742 is not set
+# CONFIG_PINCTRL_PFC_R8A7743 is not set
+# CONFIG_PINCTRL_PFC_R8A7744 is not set
+# CONFIG_PINCTRL_PFC_R8A774C0 is not set
+# CONFIG_PINCTRL_PFC_R8A774E1 is not set
+# CONFIG_PINCTRL_PFC_R8A774A1 is not set
+# CONFIG_PINCTRL_PFC_R8A774B1 is not set
+# CONFIG_PINCTRL_RZN1 is not set
+# CONFIG_PINCTRL_RZV2M is not set
+# CONFIG_PINCTRL_PFC_SH7203 is not set
+# CONFIG_PINCTRL_PFC_SH7264 is not set
+# CONFIG_PINCTRL_PFC_SH7269 is not set
+# CONFIG_PINCTRL_PFC_SH7720 is not set
+# CONFIG_PINCTRL_PFC_SH7722 is not set
+# CONFIG_PINCTRL_PFC_SH7734 is not set
+# CONFIG_PINCTRL_PFC_SH7757 is not set
+# CONFIG_PINCTRL_PFC_SH7785 is not set
+# CONFIG_PINCTRL_PFC_SH7786 is not set
+# CONFIG_PINCTRL_PFC_SH73A0 is not set
+# CONFIG_PINCTRL_PFC_SH7723 is not set
+# CONFIG_PINCTRL_PFC_SH7724 is not set
+# CONFIG_PINCTRL_PFC_SHX3 is not set
+# end of Renesas pinctrl drivers
+
+# CONFIG_PINCTRL_EXYNOS is not set
+# CONFIG_PINCTRL_S3C64XX is not set
+# CONFIG_PINCTRL_SPRD_SC9860 is not set
+# CONFIG_PINCTRL_STARFIVE_JH7100 is not set
+# CONFIG_PINCTRL_STARFIVE_JH7110_SYS is not set
+# CONFIG_PINCTRL_STARFIVE_JH7110_AON is not set
+# CONFIG_PINCTRL_STM32F429 is not set
+# CONFIG_PINCTRL_STM32F469 is not set
+# CONFIG_PINCTRL_STM32F746 is not set
+# CONFIG_PINCTRL_STM32F769 is not set
+# CONFIG_PINCTRL_STM32H743 is not set
+# CONFIG_PINCTRL_STM32MP135 is not set
+# CONFIG_PINCTRL_STM32MP157 is not set
+# CONFIG_PINCTRL_STM32MP257 is not set
+# CONFIG_PINCTRL_TI_IODELAY is not set
+CONFIG_PINCTRL_UNIPHIER=y
+# CONFIG_PINCTRL_UNIPHIER_LD4 is not set
+# CONFIG_PINCTRL_UNIPHIER_PRO4 is not set
+# CONFIG_PINCTRL_UNIPHIER_SLD8 is not set
+# CONFIG_PINCTRL_UNIPHIER_PRO5 is not set
+# CONFIG_PINCTRL_UNIPHIER_PXS2 is not set
+# CONFIG_PINCTRL_UNIPHIER_LD6B is not set
+# CONFIG_PINCTRL_UNIPHIER_LD11 is not set
+# CONFIG_PINCTRL_UNIPHIER_LD20 is not set
+# CONFIG_PINCTRL_UNIPHIER_PXS3 is not set
+# CONFIG_PINCTRL_UNIPHIER_NX1 is not set
+# CONFIG_PINCTRL_TMPV7700 is not set
+CONFIG_GPIOLIB=y
+CONFIG_GPIOLIB_FASTPATH_LIMIT=512
+CONFIG_OF_GPIO=y
+CONFIG_GPIOLIB_IRQCHIP=y
+# CONFIG_DEBUG_GPIO is not set
+# CONFIG_GPIO_SYSFS is not set
+CONFIG_GPIO_CDEV=y
+CONFIG_GPIO_CDEV_V1=y
+CONFIG_GPIO_GENERIC=y
+
+#
+# Memory mapped GPIO drivers
+#
+# CONFIG_GPIO_74XX_MMIO is not set
+# CONFIG_GPIO_ALTERA is not set
+# CONFIG_GPIO_ASPEED is not set
+# CONFIG_GPIO_ASPEED_SGPIO is not set
+# CONFIG_GPIO_ATH79 is not set
+# CONFIG_GPIO_RASPBERRYPI_EXP is not set
+# CONFIG_GPIO_BCM_KONA is not set
+# CONFIG_GPIO_BCM_XGS_IPROC is not set
+# CONFIG_GPIO_BRCMSTB is not set
+# CONFIG_GPIO_CADENCE is not set
+# CONFIG_GPIO_CLPS711X is not set
+# CONFIG_GPIO_DWAPB is not set
+# CONFIG_GPIO_EIC_SPRD is not set
+# CONFIG_GPIO_EM is not set
+# CONFIG_GPIO_GE_FPGA is not set
+# CONFIG_GPIO_FTGPIO010 is not set
+# CONFIG_GPIO_GENERIC_PLATFORM is not set
+# CONFIG_GPIO_GRGPIO is not set
+# CONFIG_GPIO_HISI is not set
+# CONFIG_GPIO_HLWD is not set
+# CONFIG_GPIO_LOGICVC is not set
+# CONFIG_GPIO_LOONGSON_64BIT is not set
+# CONFIG_GPIO_LPC18XX is not set
+# CONFIG_GPIO_LPC32XX is not set
+# CONFIG_GPIO_MB86S7X is not set
+# CONFIG_GPIO_MPC8XXX is not set
+# CONFIG_GPIO_MT7621 is not set
+# CONFIG_GPIO_MXC is not set
+# CONFIG_GPIO_MXS is not set
+# CONFIG_GPIO_NOMADIK is not set
+# CONFIG_GPIO_NPCM_SGPIO is not set
+# CONFIG_GPIO_PXA is not set
+# CONFIG_GPIO_RCAR is not set
+# CONFIG_GPIO_RDA is not set
+# CONFIG_GPIO_ROCKCHIP is not set
+# CONFIG_GPIO_SAMA5D2_PIOBU is not set
+CONFIG_GPIO_SIFIVE=y
+# CONFIG_GPIO_SNPS_CREG is not set
+# CONFIG_GPIO_SPRD is not set
+# CONFIG_GPIO_STP_XWAY is not set
+# CONFIG_GPIO_SYSCON is not set
+# CONFIG_GPIO_TEGRA is not set
+# CONFIG_GPIO_TEGRA186 is not set
+# CONFIG_GPIO_TS4800 is not set
+# CONFIG_GPIO_UNIPHIER is not set
+# CONFIG_GPIO_VF610 is not set
+# CONFIG_GPIO_VISCONTI is not set
+# CONFIG_GPIO_XGENE_SB is not set
+# CONFIG_GPIO_XILINX is not set
+# CONFIG_GPIO_XLP is not set
+# CONFIG_GPIO_AMD_FCH is not set
+# CONFIG_GPIO_IDT3243X is not set
+# end of Memory mapped GPIO drivers
+
+#
+# I2C GPIO expanders
+#
+# CONFIG_GPIO_ADNP is not set
+# CONFIG_GPIO_FXL6408 is not set
+# CONFIG_GPIO_DS4520 is not set
+# CONFIG_GPIO_GW_PLD is not set
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_GPIO_PCA9570 is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_TPIC2810 is not set
+# CONFIG_GPIO_TS4900 is not set
+# end of I2C GPIO expanders
+
+#
+# MFD GPIO expanders
+#
+# CONFIG_GPIO_ELKHARTLAKE is not set
+# CONFIG_GPIO_PMIC_EIC_SPRD is not set
+# CONFIG_GPIO_SL28CPLD is not set
+# CONFIG_GPIO_TQMX86 is not set
+# end of MFD GPIO expanders
+
+#
+# SPI GPIO expanders
+#
+# CONFIG_GPIO_74X164 is not set
+# CONFIG_GPIO_MAX3191X is not set
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MC33880 is not set
+# CONFIG_GPIO_PISOSR is not set
+# CONFIG_GPIO_XRA1403 is not set
+# end of SPI GPIO expanders
+
+#
+# USB GPIO expanders
+#
+# end of USB GPIO expanders
+
+#
+# Virtual GPIO drivers
+#
+# CONFIG_GPIO_AGGREGATOR is not set
+# CONFIG_GPIO_LATCH is not set
+# CONFIG_GPIO_MOCKUP is not set
+# CONFIG_GPIO_VIRTIO is not set
+# CONFIG_GPIO_SIM is not set
+# end of Virtual GPIO drivers
+
+# CONFIG_W1 is not set
+CONFIG_POWER_RESET=y
+# CONFIG_POWER_RESET_BRCMKONA is not set
+# CONFIG_POWER_RESET_BRCMSTB is not set
+# CONFIG_POWER_RESET_GEMINI_POWEROFF is not set
+# CONFIG_POWER_RESET_GPIO is not set
+# CONFIG_POWER_RESET_GPIO_RESTART is not set
+# CONFIG_POWER_RESET_OCELOT_RESET is not set
+# CONFIG_POWER_RESET_ODROID_GO_ULTRA_POWEROFF is not set
+# CONFIG_POWER_RESET_LTC2952 is not set
+# CONFIG_POWER_RESET_RESTART is not set
+# CONFIG_POWER_RESET_KEYSTONE is not set
+CONFIG_POWER_RESET_SYSCON=y
+CONFIG_POWER_RESET_SYSCON_POWEROFF=y
+# CONFIG_POWER_RESET_RMOBILE is not set
+# CONFIG_SYSCON_REBOOT_MODE is not set
+# CONFIG_POWER_RESET_SC27XX is not set
+# CONFIG_NVMEM_REBOOT_MODE is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_IP5XXX_POWER is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_CHARGER_ADP5061 is not set
+# CONFIG_BATTERY_ACT8945A is not set
+# CONFIG_BATTERY_CW2015 is not set
+# CONFIG_BATTERY_DS2780 is not set
+# CONFIG_BATTERY_DS2781 is not set
+# CONFIG_BATTERY_DS2782 is not set
+# CONFIG_BATTERY_SAMSUNG_SDI is not set
+# CONFIG_BATTERY_SBS is not set
+# CONFIG_CHARGER_SBS is not set
+# CONFIG_BATTERY_BQ27XXX is not set
+# CONFIG_BATTERY_MAX17042 is not set
+# CONFIG_CHARGER_ISP1704 is not set
+# CONFIG_CHARGER_MAX8903 is not set
+# CONFIG_CHARGER_LP8727 is not set
+# CONFIG_CHARGER_GPIO is not set
+# CONFIG_CHARGER_LT3651 is not set
+# CONFIG_CHARGER_LTC4162L is not set
+# CONFIG_CHARGER_DETECTOR_MAX14656 is not set
+# CONFIG_CHARGER_MAX77976 is not set
+# CONFIG_BATTERY_PM8916_BMS_VM is not set
+# CONFIG_CHARGER_PM8916_LBC is not set
+# CONFIG_CHARGER_BQ2415X is not set
+# CONFIG_CHARGER_BQ24190 is not set
+# CONFIG_CHARGER_BQ24257 is not set
+# CONFIG_CHARGER_BQ24735 is not set
+# CONFIG_CHARGER_BQ2515X is not set
+# CONFIG_CHARGER_BQ25890 is not set
+# CONFIG_CHARGER_BQ25980 is not set
+# CONFIG_CHARGER_BQ256XX is not set
+# CONFIG_BATTERY_GAUGE_LTC2941 is not set
+# CONFIG_BATTERY_GOLDFISH is not set
+# CONFIG_BATTERY_RT5033 is not set
+# CONFIG_CHARGER_RT9455 is not set
+# CONFIG_CHARGER_SC2731 is not set
+# CONFIG_CHARGER_BD99954 is not set
+# CONFIG_BATTERY_UG3105 is not set
+# CONFIG_FUEL_GAUGE_MM8013 is not set
+# CONFIG_HWMON is not set
+# CONFIG_THERMAL is not set
+CONFIG_WATCHDOG=y
+CONFIG_WATCHDOG_CORE=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+CONFIG_WATCHDOG_HANDLE_BOOT_ENABLED=y
+CONFIG_WATCHDOG_OPEN_TIMEOUT=0
+# CONFIG_WATCHDOG_SYSFS is not set
+# CONFIG_WATCHDOG_HRTIMER_PRETIMEOUT is not set
+
+#
+# Watchdog Pretimeout Governors
+#
+# CONFIG_WATCHDOG_PRETIMEOUT_GOV is not set
+
+#
+# Watchdog Device Drivers
+#
+# CONFIG_SOFT_WATCHDOG is not set
+# CONFIG_DA9052_WATCHDOG is not set
+# CONFIG_DA9055_WATCHDOG is not set
+# CONFIG_DA9063_WATCHDOG is not set
+# CONFIG_DA9062_WATCHDOG is not set
+# CONFIG_GPIO_WATCHDOG is not set
+# CONFIG_MENF21BMC_WATCHDOG is not set
+# CONFIG_XILINX_WATCHDOG is not set
+# CONFIG_XILINX_WINDOW_WATCHDOG is not set
+# CONFIG_ZIIRAVE_WATCHDOG is not set
+# CONFIG_MLX_WDT is not set
+# CONFIG_SL28CPLD_WATCHDOG is not set
+# CONFIG_ARMADA_37XX_WATCHDOG is not set
+# CONFIG_ASM9260_WATCHDOG is not set
+# CONFIG_AT91RM9200_WATCHDOG is not set
+# CONFIG_AT91SAM9X_WATCHDOG is not set
+# CONFIG_SAMA5D4_WATCHDOG is not set
+# CONFIG_CADENCE_WATCHDOG is not set
+# CONFIG_FTWDT010_WATCHDOG is not set
+# CONFIG_S3C2410_WATCHDOG is not set
+# CONFIG_SA1100_WATCHDOG is not set
+# CONFIG_DW_WATCHDOG is not set
+# CONFIG_EP93XX_WATCHDOG is not set
+# CONFIG_OMAP_WATCHDOG is not set
+# CONFIG_PNX4008_WATCHDOG is not set
+# CONFIG_DAVINCI_WATCHDOG is not set
+# CONFIG_K3_RTI_WATCHDOG is not set
+# CONFIG_RN5T618_WATCHDOG is not set
+# CONFIG_SUNXI_WATCHDOG is not set
+# CONFIG_NPCM7XX_WATCHDOG is not set
+# CONFIG_STMP3XXX_RTC_WATCHDOG is not set
+# CONFIG_TS4800_WATCHDOG is not set
+# CONFIG_TS72XX_WATCHDOG is not set
+# CONFIG_MAX63XX_WATCHDOG is not set
+# CONFIG_MAX77620_WATCHDOG is not set
+# CONFIG_IMX2_WDT is not set
+# CONFIG_IMX7ULP_WDT is not set
+# CONFIG_MOXART_WDT is not set
+# CONFIG_ST_LPC_WATCHDOG is not set
+# CONFIG_TEGRA_WATCHDOG is not set
+# CONFIG_QCOM_WDT is not set
+# CONFIG_MESON_GXBB_WATCHDOG is not set
+# CONFIG_MESON_WATCHDOG is not set
+# CONFIG_MEDIATEK_WATCHDOG is not set
+# CONFIG_DIGICOLOR_WATCHDOG is not set
+# CONFIG_LPC18XX_WATCHDOG is not set
+# CONFIG_RENESAS_WDT is not set
+# CONFIG_RENESAS_RZAWDT is not set
+# CONFIG_RENESAS_RZN1WDT is not set
+# CONFIG_RENESAS_RZG2LWDT is not set
+# CONFIG_ASPEED_WATCHDOG is not set
+CONFIG_STM32_WATCHDOG=y
+# CONFIG_UNIPHIER_WATCHDOG is not set
+# CONFIG_RTD119X_WATCHDOG is not set
+# CONFIG_REALTEK_OTTO_WDT is not set
+# CONFIG_SPRD_WATCHDOG is not set
+# CONFIG_VISCONTI_WATCHDOG is not set
+# CONFIG_MSC313E_WATCHDOG is not set
+# CONFIG_APPLE_WATCHDOG is not set
+# CONFIG_SUNPLUS_WATCHDOG is not set
+# CONFIG_ADVANTECH_WDT is not set
+# CONFIG_ADVANTECH_EC_WDT is not set
+# CONFIG_EBC_C384_WDT is not set
+# CONFIG_EXAR_WDT is not set
+# CONFIG_F71808E_WDT is not set
+# CONFIG_SC520_WDT is not set
+# CONFIG_SBC_FITPC2_WATCHDOG is not set
+# CONFIG_EUROTECH_WDT is not set
+# CONFIG_IB700_WDT is not set
+# CONFIG_IBMASR is not set
+# CONFIG_WAFER_WDT is not set
+# CONFIG_IT8712F_WDT is not set
+# CONFIG_IT87_WDT is not set
+# CONFIG_SC1200_WDT is not set
+# CONFIG_PC87413_WDT is not set
+# CONFIG_60XX_WDT is not set
+# CONFIG_CPU5_WDT is not set
+# CONFIG_SMSC_SCH311X_WDT is not set
+# CONFIG_SMSC37B787_WDT is not set
+# CONFIG_TQMX86_WDT is not set
+# CONFIG_W83627HF_WDT is not set
+# CONFIG_W83877F_WDT is not set
+# CONFIG_W83977F_WDT is not set
+# CONFIG_MACHZ_WDT is not set
+# CONFIG_SBC_EPX_C3_WATCHDOG is not set
+# CONFIG_BCM47XX_WDT is not set
+# CONFIG_JZ4740_WDT is not set
+CONFIG_MARVELL_GTI_WDT=y
+# CONFIG_BCM2835_WDT is not set
+# CONFIG_BCM_KONA_WDT is not set
+# CONFIG_BCM_KONA_WDT_DEBUG is not set
+# CONFIG_BCM7038_WDT is not set
+# CONFIG_IMGPDC_WDT is not set
+# CONFIG_LOONGSON1_WDT is not set
+# CONFIG_GXP_WATCHDOG is not set
+# CONFIG_MT7621_WDT is not set
+# CONFIG_MPC5200_WDT is not set
+# CONFIG_MEN_A21_WDT is not set
+# CONFIG_STARFIVE_WATCHDOG is not set
+# CONFIG_UML_WATCHDOG is not set
+
+#
+# USB-based Watchdog Cards
+#
+# CONFIG_USBPCWATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+# CONFIG_SSB is not set
+CONFIG_BCMA_POSSIBLE=y
+# CONFIG_BCMA is not set
+
+#
+# Multifunction device drivers
+#
+# CONFIG_MFD_ACT8945A is not set
+# CONFIG_MFD_SUN4I_GPADC is not set
+# CONFIG_MFD_AS3711 is not set
+# CONFIG_MFD_SMPRO is not set
+# CONFIG_MFD_AS3722 is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_AAT2870_CORE is not set
+# CONFIG_MFD_AT91_USART is not set
+# CONFIG_MFD_ATMEL_FLEXCOM is not set
+# CONFIG_MFD_ATMEL_HLCDC is not set
+# CONFIG_MFD_BCM590XX is not set
+# CONFIG_MFD_BD9571MWV is not set
+# CONFIG_MFD_AXP20X_I2C is not set
+# CONFIG_MFD_CS42L43_I2C is not set
+# CONFIG_MFD_MADERA is not set
+# CONFIG_MFD_MAX5970 is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_MFD_DA9052_SPI is not set
+# CONFIG_MFD_DA9052_I2C is not set
+# CONFIG_MFD_DA9055 is not set
+# CONFIG_MFD_DA9062 is not set
+# CONFIG_MFD_DA9063 is not set
+# CONFIG_MFD_DA9150 is not set
+# CONFIG_MFD_DLN2 is not set
+# CONFIG_MFD_ENE_KB3930 is not set
+# CONFIG_MFD_EXYNOS_LPASS is not set
+# CONFIG_MFD_GATEWORKS_GSC is not set
+# CONFIG_MFD_MC13XXX_SPI is not set
+# CONFIG_MFD_MC13XXX_I2C is not set
+# CONFIG_MFD_MP2629 is not set
+# CONFIG_MFD_MXS_LRADC is not set
+# CONFIG_MFD_MX25_TSADC is not set
+# CONFIG_MFD_HI6421_PMIC is not set
+# CONFIG_MFD_HI655X_PMIC is not set
+# CONFIG_INTEL_SOC_PMIC is not set
+# CONFIG_MFD_IQS62X is not set
+# CONFIG_MFD_KEMPLD is not set
+# CONFIG_MFD_88PM800 is not set
+# CONFIG_MFD_88PM805 is not set
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_MAX14577 is not set
+# CONFIG_MFD_MAX77541 is not set
+# CONFIG_MFD_MAX77620 is not set
+# CONFIG_MFD_MAX77650 is not set
+# CONFIG_MFD_MAX77686 is not set
+# CONFIG_MFD_MAX77693 is not set
+# CONFIG_MFD_MAX77714 is not set
+# CONFIG_MFD_MAX77843 is not set
+# CONFIG_MFD_MAX8907 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_MAX8997 is not set
+# CONFIG_MFD_MAX8998 is not set
+# CONFIG_MFD_MT6360 is not set
+# CONFIG_MFD_MT6370 is not set
+# CONFIG_MFD_MT6397 is not set
+# CONFIG_MFD_MENF21BMC is not set
+# CONFIG_MFD_OCELOT is not set
+# CONFIG_EZX_PCAP is not set
+# CONFIG_MFD_CPCAP is not set
+# CONFIG_MFD_VIPERBOARD is not set
+# CONFIG_MFD_NTXEC is not set
+# CONFIG_MFD_RETU is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_MFD_PM8XXX is not set
+# CONFIG_MFD_SY7636A is not set
+# CONFIG_MFD_RT4831 is not set
+# CONFIG_MFD_RT5033 is not set
+# CONFIG_MFD_RT5120 is not set
+# CONFIG_MFD_RC5T583 is not set
+# CONFIG_MFD_RK8XX_I2C is not set
+# CONFIG_MFD_RK8XX_SPI is not set
+# CONFIG_MFD_RN5T618 is not set
+# CONFIG_MFD_SEC_CORE is not set
+# CONFIG_MFD_SI476X_CORE is not set
+# CONFIG_MFD_SL28CPLD is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_SKY81452 is not set
+# CONFIG_MFD_SC27XX_PMIC is not set
+# CONFIG_RZ_MTU3 is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_MFD_STMPE is not set
+# CONFIG_MFD_SUN6I_PRCM is not set
+CONFIG_MFD_SYSCON=y
+# CONFIG_MFD_TI_AM335X_TSCADC is not set
+# CONFIG_MFD_LP3943 is not set
+# CONFIG_MFD_LP8788 is not set
+# CONFIG_MFD_TI_LMU is not set
+CONFIG_MFD_OMAP_USB_HOST=y
+# CONFIG_MFD_PALMAS is not set
+# CONFIG_TPS6105X is not set
+# CONFIG_TPS65010 is not set
+# CONFIG_TPS6507X is not set
+# CONFIG_MFD_TPS65086 is not set
+# CONFIG_MFD_TPS65090 is not set
+# CONFIG_MFD_TPS65217 is not set
+# CONFIG_MFD_TI_LP873X is not set
+# CONFIG_MFD_TI_LP87565 is not set
+# CONFIG_MFD_TPS65218 is not set
+# CONFIG_MFD_TPS65219 is not set
+# CONFIG_MFD_TPS6586X is not set
+# CONFIG_MFD_TPS65910 is not set
+# CONFIG_MFD_TPS65912_I2C is not set
+# CONFIG_MFD_TPS65912_SPI is not set
+# CONFIG_MFD_TPS6594_I2C is not set
+# CONFIG_MFD_TPS6594_SPI is not set
+# CONFIG_TWL4030_CORE is not set
+# CONFIG_TWL6040_CORE is not set
+# CONFIG_MFD_WL1273_CORE is not set
+# CONFIG_MFD_LM3533 is not set
+# CONFIG_MFD_TC3589X is not set
+# CONFIG_MFD_TQMX86 is not set
+# CONFIG_MFD_LOCHNAGAR is not set
+# CONFIG_MFD_ARIZONA_I2C is not set
+# CONFIG_MFD_ARIZONA_SPI is not set
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X_I2C is not set
+# CONFIG_MFD_WM831X_SPI is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_MFD_STW481X is not set
+# CONFIG_MFD_ROHM_BD718XX is not set
+# CONFIG_MFD_ROHM_BD71828 is not set
+# CONFIG_MFD_ROHM_BD957XMUF is not set
+# CONFIG_MFD_STM32_LPTIMER is not set
+# CONFIG_MFD_STM32_TIMERS is not set
+# CONFIG_MFD_STPMIC1 is not set
+# CONFIG_MFD_STMFX is not set
+# CONFIG_MFD_ATC260X_I2C is not set
+# CONFIG_MFD_KHADAS_MCU is not set
+# CONFIG_MFD_ACER_A500_EC is not set
+# CONFIG_MFD_QCOM_PM8008 is not set
+# CONFIG_MFD_INTEL_M10_BMC_SPI is not set
+# CONFIG_MFD_RSMU_I2C is not set
+# CONFIG_MFD_RSMU_SPI is not set
+# end of Multifunction device drivers
+
+# CONFIG_REGULATOR is not set
+# CONFIG_RC_CORE is not set
+
+#
+# CEC support
+#
+# CONFIG_MEDIA_CEC_SUPPORT is not set
+# end of CEC support
+
+# CONFIG_MEDIA_SUPPORT is not set
+
+#
+# Graphics support
+#
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_TEGRA_HOST1X is not set
+# CONFIG_IMX_IPUV3_CORE is not set
+# CONFIG_DRM is not set
+# CONFIG_DRM_DEBUG_MODESET_LOCK is not set
+
+#
+# Frame buffer Devices
+#
+# CONFIG_FB is not set
+# CONFIG_MMP_DISP is not set
+# end of Frame buffer Devices
+
+#
+# Backlight & LCD device support
+#
+# CONFIG_LCD_CLASS_DEVICE is not set
+# CONFIG_BACKLIGHT_CLASS_DEVICE is not set
+# end of Backlight & LCD device support
+
+#
+# Console display driver support
+#
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_DUMMY_CONSOLE_COLUMNS=80
+CONFIG_DUMMY_CONSOLE_ROWS=25
+# end of Console display driver support
+# end of Graphics support
+
+# CONFIG_SOUND is not set
+CONFIG_HID_SUPPORT=y
+CONFIG_HID=y
+# CONFIG_HID_BATTERY_STRENGTH is not set
+# CONFIG_HIDRAW is not set
+# CONFIG_UHID is not set
+CONFIG_HID_GENERIC=y
+
+#
+# Special HID drivers
+#
+# CONFIG_HID_A4TECH is not set
+# CONFIG_HID_ACCUTOUCH is not set
+# CONFIG_HID_ACRUX is not set
+# CONFIG_HID_APPLEIR is not set
+# CONFIG_HID_AUREAL is not set
+# CONFIG_HID_BELKIN is not set
+# CONFIG_HID_BETOP_FF is not set
+# CONFIG_HID_CHERRY is not set
+# CONFIG_HID_CHICONY is not set
+# CONFIG_HID_COUGAR is not set
+# CONFIG_HID_MACALLY is not set
+# CONFIG_HID_CMEDIA is not set
+# CONFIG_HID_CREATIVE_SB0540 is not set
+# CONFIG_HID_CYPRESS is not set
+# CONFIG_HID_DRAGONRISE is not set
+# CONFIG_HID_EMS_FF is not set
+# CONFIG_HID_ELECOM is not set
+# CONFIG_HID_ELO is not set
+# CONFIG_HID_EVISION is not set
+# CONFIG_HID_EZKEY is not set
+# CONFIG_HID_GEMBIRD is not set
+# CONFIG_HID_GFRM is not set
+# CONFIG_HID_GLORIOUS is not set
+# CONFIG_HID_HOLTEK is not set
+# CONFIG_HID_GOOGLE_STADIA_FF is not set
+# CONFIG_HID_VIVALDI is not set
+# CONFIG_HID_KEYTOUCH is not set
+# CONFIG_HID_KYE is not set
+# CONFIG_HID_UCLOGIC is not set
+# CONFIG_HID_WALTOP is not set
+# CONFIG_HID_VIEWSONIC is not set
+# CONFIG_HID_VRC2 is not set
+# CONFIG_HID_XIAOMI is not set
+# CONFIG_HID_GYRATION is not set
+# CONFIG_HID_ICADE is not set
+# CONFIG_HID_ITE is not set
+# CONFIG_HID_JABRA is not set
+# CONFIG_HID_TWINHAN is not set
+# CONFIG_HID_KENSINGTON is not set
+# CONFIG_HID_LCPOWER is not set
+# CONFIG_HID_LENOVO is not set
+# CONFIG_HID_LETSKETCH is not set
+# CONFIG_HID_MAGICMOUSE is not set
+# CONFIG_HID_MALTRON is not set
+# CONFIG_HID_MAYFLASH is not set
+# CONFIG_HID_MEGAWORLD_FF is not set
+# CONFIG_HID_REDRAGON is not set
+# CONFIG_HID_MICROSOFT is not set
+# CONFIG_HID_MONTEREY is not set
+# CONFIG_HID_MULTITOUCH is not set
+# CONFIG_HID_NTI is not set
+# CONFIG_HID_NTRIG is not set
+# CONFIG_HID_ORTEK is not set
+# CONFIG_HID_PANTHERLORD is not set
+# CONFIG_HID_PENMOUNT is not set
+# CONFIG_HID_PETALYNX is not set
+# CONFIG_HID_PICOLCD is not set
+# CONFIG_HID_PLANTRONICS is not set
+# CONFIG_HID_PXRC is not set
+# CONFIG_HID_RAZER is not set
+# CONFIG_HID_PRIMAX is not set
+# CONFIG_HID_RETRODE is not set
+# CONFIG_HID_ROCCAT is not set
+# CONFIG_HID_SAITEK is not set
+# CONFIG_HID_SAMSUNG is not set
+# CONFIG_HID_SEMITEK is not set
+# CONFIG_HID_SIGMAMICRO is not set
+# CONFIG_HID_SPEEDLINK is not set
+# CONFIG_HID_STEAM is not set
+# CONFIG_HID_STEELSERIES is not set
+# CONFIG_HID_SUNPLUS is not set
+# CONFIG_HID_RMI is not set
+# CONFIG_HID_GREENASIA is not set
+# CONFIG_HID_SMARTJOYPLUS is not set
+# CONFIG_HID_TIVO is not set
+# CONFIG_HID_TOPSEED is not set
+# CONFIG_HID_TOPRE is not set
+# CONFIG_HID_THRUSTMASTER is not set
+# CONFIG_HID_UDRAW_PS3 is not set
+# CONFIG_HID_WACOM is not set
+# CONFIG_HID_XINMO is not set
+# CONFIG_HID_ZEROPLUS is not set
+# CONFIG_HID_ZYDACRON is not set
+# CONFIG_HID_SENSOR_HUB is not set
+# CONFIG_HID_ALPS is not set
+# CONFIG_HID_MCP2200 is not set
+# CONFIG_HID_MCP2221 is not set
+# end of Special HID drivers
+
+#
+# HID-BPF support
+#
+# end of HID-BPF support
+
+#
+# USB HID support
+#
+CONFIG_USB_HID=y
+# CONFIG_HID_PID is not set
+# CONFIG_USB_HIDDEV is not set
+# end of USB HID support
+
+CONFIG_I2C_HID=y
+# CONFIG_I2C_HID_OF is not set
+# CONFIG_I2C_HID_OF_ELAN is not set
+# CONFIG_I2C_HID_OF_GOODIX is not set
+CONFIG_USB_OHCI_LITTLE_ENDIAN=y
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_COMMON=y
+# CONFIG_USB_ULPI_BUS is not set
+# CONFIG_USB_CONN_GPIO is not set
+CONFIG_USB_ARCH_HAS_HCD=y
+CONFIG_USB=y
+# CONFIG_USB_ANNOUNCE_NEW_DEVICES is not set
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEFAULT_PERSIST=y
+# CONFIG_USB_FEW_INIT_RETRIES is not set
+# CONFIG_USB_DYNAMIC_MINORS is not set
+# CONFIG_USB_OTG is not set
+# CONFIG_USB_OTG_PRODUCTLIST is not set
+# CONFIG_USB_OTG_DISABLE_EXTERNAL_HUB is not set
+CONFIG_USB_AUTOSUSPEND_DELAY=2
+CONFIG_USB_DEFAULT_AUTHORIZATION_MODE=1
+# CONFIG_USB_MON is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+CONFIG_USB_XHCI_HCD=y
+# CONFIG_USB_XHCI_DBGCAP is not set
+# CONFIG_USB_XHCI_PCI_RENESAS is not set
+CONFIG_USB_XHCI_PLATFORM=y
+# CONFIG_USB_XHCI_HISTB is not set
+# CONFIG_USB_XHCI_MTK is not set
+# CONFIG_USB_XHCI_MVEBU is not set
+# CONFIG_USB_XHCI_RCAR is not set
+# CONFIG_USB_BRCMSTB is not set
+CONFIG_USB_EHCI_HCD=y
+# CONFIG_USB_EHCI_ROOT_HUB_TT is not set
+CONFIG_USB_EHCI_TT_NEWSCHED=y
+# CONFIG_USB_EHCI_FSL is not set
+# CONFIG_USB_EHCI_HCD_NPCM7XX is not set
+CONFIG_USB_EHCI_HCD_OMAP=y
+# CONFIG_USB_EHCI_HCD_ORION is not set
+# CONFIG_USB_EHCI_HCD_SPEAR is not set
+# CONFIG_USB_EHCI_HCD_STI is not set
+# CONFIG_USB_EHCI_HCD_AT91 is not set
+# CONFIG_USB_EHCI_SH is not set
+# CONFIG_USB_EHCI_EXYNOS is not set
+# CONFIG_USB_EHCI_MV is not set
+CONFIG_USB_EHCI_HCD_PLATFORM=y
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+# CONFIG_USB_MAX3421_HCD is not set
+CONFIG_USB_OHCI_HCD=y
+# CONFIG_USB_OHCI_HCD_SPEAR is not set
+# CONFIG_USB_OHCI_HCD_STI is not set
+# CONFIG_USB_OHCI_HCD_S3C2410 is not set
+# CONFIG_USB_OHCI_HCD_AT91 is not set
+# CONFIG_USB_OHCI_HCD_OMAP3 is not set
+# CONFIG_USB_OHCI_HCD_DAVINCI is not set
+# CONFIG_USB_OHCI_EXYNOS is not set
+CONFIG_USB_OHCI_HCD_PLATFORM=y
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_HCD_TEST_MODE is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+# CONFIG_USB_WDM is not set
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+
+#
+# USB dual-mode controller drivers
+#
+# CONFIG_USB_CDNS_SUPPORT is not set
+# CONFIG_USB_FOTG210 is not set
+# CONFIG_USB_MTU3 is not set
+CONFIG_USB_MUSB_HDRC=y
+CONFIG_USB_MUSB_HOST=y
+
+#
+# Platform Glue Layer
+#
+# CONFIG_USB_MUSB_TUSB6010 is not set
+# CONFIG_USB_MUSB_DSPS is not set
+# CONFIG_USB_MUSB_UX500 is not set
+# CONFIG_USB_MUSB_MEDIATEK is not set
+# CONFIG_USB_MUSB_POLARFIRE_SOC is not set
+
+#
+# MUSB DMA mode
+#
+# CONFIG_MUSB_PIO_ONLY is not set
+# CONFIG_USB_DWC3 is not set
+# CONFIG_USB_DWC2 is not set
+# CONFIG_USB_CHIPIDEA is not set
+# CONFIG_USB_ISP1760 is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_QCOM_EUD is not set
+# CONFIG_APPLE_MFI_FASTCHARGE is not set
+# CONFIG_USB_SISUSBVGA is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_EHSET_TEST_FIXTURE is not set
+# CONFIG_USB_ISIGHTFW is not set
+# CONFIG_USB_YUREX is not set
+# CONFIG_USB_EZUSB_FX2 is not set
+# CONFIG_USB_HUB_USB251XB is not set
+# CONFIG_USB_HSIC_USB3503 is not set
+# CONFIG_USB_HSIC_USB4604 is not set
+# CONFIG_USB_LINK_LAYER_TEST is not set
+# CONFIG_USB_CHAOSKEY is not set
+# CONFIG_BRCM_USB_PINMAP is not set
+# CONFIG_USB_ONBOARD_HUB is not set
+
+#
+# USB Physical Layer drivers
+#
+CONFIG_USB_PHY=y
+# CONFIG_KEYSTONE_USB_PHY is not set
+CONFIG_NOP_USB_XCEIV=y
+# CONFIG_AM335X_PHY_USB is not set
+# CONFIG_USB_GPIO_VBUS is not set
+# CONFIG_USB_ISP1301 is not set
+# CONFIG_USB_TEGRA_PHY is not set
+# CONFIG_USB_ULPI is not set
+# end of USB Physical Layer drivers
+
+# CONFIG_USB_GADGET is not set
+# CONFIG_TYPEC is not set
+# CONFIG_USB_ROLE_SWITCH is not set
+CONFIG_MMC=y
+CONFIG_PWRSEQ_EMMC=y
+CONFIG_PWRSEQ_SIMPLE=y
+# CONFIG_SDIO_UART is not set
+# CONFIG_MMC_TEST is not set
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+# CONFIG_MMC_DEBUG is not set
+# CONFIG_MMC_SUNPLUS is not set
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_IO_ACCESSORS=y
+CONFIG_MMC_SDHCI_PLTFM=y
+# CONFIG_MMC_SDHCI_OF_ARASAN is not set
+# CONFIG_MMC_SDHCI_OF_ASPEED is not set
+# CONFIG_MMC_SDHCI_OF_AT91 is not set
+# CONFIG_MMC_SDHCI_OF_ESDHC is not set
+# CONFIG_MMC_SDHCI_OF_DWCMSHC is not set
+# CONFIG_MMC_SDHCI_OF_SPARX5 is not set
+CONFIG_MMC_SDHCI_CADENCE=y
+# CONFIG_MMC_SDHCI_ESDHC_IMX is not set
+# CONFIG_MMC_SDHCI_DOVE is not set
+# CONFIG_MMC_SDHCI_TEGRA is not set
+# CONFIG_MMC_SDHCI_S3C is not set
+# CONFIG_MMC_SDHCI_PXAV3 is not set
+# CONFIG_MMC_SDHCI_PXAV2 is not set
+# CONFIG_MMC_SDHCI_SPEAR is not set
+# CONFIG_MMC_SDHCI_BCM_KONA is not set
+# CONFIG_MMC_SDHCI_F_SDH30 is not set
+# CONFIG_MMC_SDHCI_MILBEAUT is not set
+# CONFIG_MMC_SDHCI_IPROC is not set
+# CONFIG_MMC_SDHCI_NPCM is not set
+# CONFIG_MMC_MESON_GX is not set
+# CONFIG_MMC_MESON_MX_SDHC is not set
+# CONFIG_MMC_MESON_MX_SDIO is not set
+# CONFIG_MMC_MOXART is not set
+# CONFIG_MMC_SDHCI_ST is not set
+# CONFIG_MMC_OMAP_HS is not set
+# CONFIG_MMC_SDHCI_MSM is not set
+# CONFIG_MMC_DAVINCI is not set
+CONFIG_MMC_SPI=y
+# CONFIG_MMC_SDHCI_SPRD is not set
+# CONFIG_MMC_SDHI is not set
+# CONFIG_MMC_UNIPHIER is not set
+# CONFIG_MMC_DW is not set
+# CONFIG_MMC_SH_MMCIF is not set
+# CONFIG_MMC_VUB300 is not set
+# CONFIG_MMC_USHC is not set
+# CONFIG_MMC_USDHI6ROL0 is not set
+# CONFIG_MMC_CQHCI is not set
+# CONFIG_MMC_HSQ is not set
+# CONFIG_MMC_BCM2835 is not set
+# CONFIG_MMC_MTK is not set
+# CONFIG_MMC_SDHCI_BRCMSTB is not set
+# CONFIG_MMC_SDHCI_XENON is not set
+# CONFIG_MMC_SDHCI_OMAP is not set
+# CONFIG_MMC_SDHCI_AM654 is not set
+# CONFIG_MMC_OWL is not set
+# CONFIG_MMC_LITEX is not set
+# CONFIG_MEMSTICK is not set
+# CONFIG_NEW_LEDS is not set
+# CONFIG_ACCESSIBILITY is not set
+CONFIG_EDAC_SUPPORT=y
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+CONFIG_RTC_SYSTOHC=y
+CONFIG_RTC_SYSTOHC_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+CONFIG_RTC_NVMEM=y
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+# CONFIG_RTC_DRV_ABB5ZES3 is not set
+# CONFIG_RTC_DRV_ABEOZ9 is not set
+# CONFIG_RTC_DRV_ABX80X is not set
+# CONFIG_RTC_DRV_BRCMSTB is not set
+# CONFIG_RTC_DRV_DS1307 is not set
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_HYM8563 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_MAX8907 is not set
+# CONFIG_RTC_DRV_MAX31335 is not set
+# CONFIG_RTC_DRV_MAX77686 is not set
+# CONFIG_RTC_DRV_NCT3018Y is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_ISL12022 is not set
+# CONFIG_RTC_DRV_ISL12026 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8523 is not set
+# CONFIG_RTC_DRV_PCF85063 is not set
+# CONFIG_RTC_DRV_PCF85363 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8010 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+# CONFIG_RTC_DRV_EM3027 is not set
+# CONFIG_RTC_DRV_RV3028 is not set
+# CONFIG_RTC_DRV_RV3032 is not set
+# CONFIG_RTC_DRV_RV8803 is not set
+# CONFIG_RTC_DRV_S5M is not set
+# CONFIG_RTC_DRV_SD3078 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T93 is not set
+# CONFIG_RTC_DRV_M41T94 is not set
+# CONFIG_RTC_DRV_DS1302 is not set
+# CONFIG_RTC_DRV_DS1305 is not set
+# CONFIG_RTC_DRV_DS1343 is not set
+# CONFIG_RTC_DRV_DS1347 is not set
+# CONFIG_RTC_DRV_DS1390 is not set
+# CONFIG_RTC_DRV_MAX6916 is not set
+# CONFIG_RTC_DRV_R9701 is not set
+# CONFIG_RTC_DRV_RX4581 is not set
+# CONFIG_RTC_DRV_RS5C348 is not set
+# CONFIG_RTC_DRV_MAX6902 is not set
+# CONFIG_RTC_DRV_PCF2123 is not set
+# CONFIG_RTC_DRV_MCP795 is not set
+CONFIG_RTC_I2C_AND_SPI=y
+
+#
+# SPI and I2C RTC drivers
+#
+# CONFIG_RTC_DRV_DS3232 is not set
+# CONFIG_RTC_DRV_PCF2127 is not set
+# CONFIG_RTC_DRV_RV3029C2 is not set
+# CONFIG_RTC_DRV_RX6110 is not set
+
+#
+# Platform RTC drivers
+#
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1685_FAMILY is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_DS2404 is not set
+# CONFIG_RTC_DRV_EFI is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_GAMECUBE is not set
+# CONFIG_RTC_DRV_SC27XX is not set
+CONFIG_RTC_DRV_SPEAR=y
+# CONFIG_RTC_DRV_ZYNQMP is not set
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_RTC_DRV_ASM9260 is not set
+# CONFIG_RTC_DRV_DIGICOLOR is not set
+# CONFIG_RTC_DRV_IMXDI is not set
+# CONFIG_RTC_DRV_FSL_FTM_ALARM is not set
+# CONFIG_RTC_DRV_MESON is not set
+# CONFIG_RTC_DRV_MESON_VRTC is not set
+# CONFIG_RTC_DRV_OMAP is not set
+# CONFIG_RTC_DRV_S3C is not set
+# CONFIG_RTC_DRV_EP93XX is not set
+# CONFIG_RTC_DRV_AT91RM9200 is not set
+# CONFIG_RTC_DRV_AT91SAM9 is not set
+# CONFIG_RTC_DRV_RZN1 is not set
+# CONFIG_RTC_DRV_GENERIC is not set
+# CONFIG_RTC_DRV_VT8500 is not set
+# CONFIG_RTC_DRV_SUN6I is not set
+# CONFIG_RTC_DRV_SUNXI is not set
+# CONFIG_RTC_DRV_MV is not set
+# CONFIG_RTC_DRV_ARMADA38X is not set
+# CONFIG_RTC_DRV_CADENCE is not set
+# CONFIG_RTC_DRV_FTRTC010 is not set
+# CONFIG_RTC_DRV_STMP is not set
+# CONFIG_RTC_DRV_JZ4740 is not set
+# CONFIG_RTC_DRV_LOONGSON is not set
+# CONFIG_RTC_DRV_LPC24XX is not set
+# CONFIG_RTC_DRV_LPC32XX is not set
+# CONFIG_RTC_DRV_PM8XXX is not set
+# CONFIG_RTC_DRV_TEGRA is not set
+# CONFIG_RTC_DRV_MXC is not set
+# CONFIG_RTC_DRV_MXC_V2 is not set
+# CONFIG_RTC_DRV_SNVS is not set
+# CONFIG_RTC_DRV_BBNSM is not set
+# CONFIG_RTC_DRV_MOXART is not set
+# CONFIG_RTC_DRV_MT2712 is not set
+# CONFIG_RTC_DRV_MT6397 is not set
+# CONFIG_RTC_DRV_MT7622 is not set
+# CONFIG_RTC_DRV_XGENE is not set
+# CONFIG_RTC_DRV_R7301 is not set
+# CONFIG_RTC_DRV_STM32 is not set
+# CONFIG_RTC_DRV_RTD119X is not set
+# CONFIG_RTC_DRV_ASPEED is not set
+# CONFIG_RTC_DRV_TI_K3 is not set
+# CONFIG_RTC_DRV_MA35D1 is not set
+
+#
+# HID Sensor RTC drivers
+#
+CONFIG_RTC_DRV_GOLDFISH=y
+# CONFIG_RTC_DRV_MSC313 is not set
+# CONFIG_RTC_DRV_SSD202D is not set
+CONFIG_DMADEVICES=y
+# CONFIG_DMADEVICES_DEBUG is not set
+
+#
+# DMA Devices
+#
+CONFIG_DMA_ENGINE=y
+CONFIG_DMA_VIRTUAL_CHANNELS=y
+CONFIG_DMA_OF=y
+# CONFIG_ALTERA_MSGDMA is not set
+# CONFIG_APPLE_ADMAC is not set
+# CONFIG_AXI_DMAC is not set
+# CONFIG_DMA_JZ4780 is not set
+# CONFIG_DMA_SA11X0 is not set
+# CONFIG_DMA_SUN6I is not set
+# CONFIG_DW_AXI_DMAC is not set
+# CONFIG_EP93XX_DMA is not set
+# CONFIG_FSL_EDMA is not set
+# CONFIG_IMG_MDC_DMA is not set
+# CONFIG_INTEL_IDMA64 is not set
+# CONFIG_K3_DMA is not set
+# CONFIG_LS2X_APB_DMA is not set
+# CONFIG_MCF_EDMA is not set
+# CONFIG_MILBEAUT_HDMAC is not set
+# CONFIG_MILBEAUT_XDMAC is not set
+# CONFIG_MMP_PDMA is not set
+# CONFIG_MMP_TDMA is not set
+# CONFIG_MV_XOR is not set
+# CONFIG_MXS_DMA is not set
+# CONFIG_NBPFAXI_DMA is not set
+# CONFIG_STM32_DMA is not set
+# CONFIG_STM32_DMAMUX is not set
+# CONFIG_STM32_MDMA is not set
+# CONFIG_SPRD_DMA is not set
+# CONFIG_TEGRA20_APB_DMA is not set
+# CONFIG_TEGRA210_ADMA is not set
+# CONFIG_TIMB_DMA is not set
+# CONFIG_UNIPHIER_MDMAC is not set
+# CONFIG_UNIPHIER_XDMAC is not set
+# CONFIG_XGENE_DMA is not set
+# CONFIG_XILINX_DMA is not set
+# CONFIG_XILINX_XDMA is not set
+# CONFIG_XILINX_ZYNQMP_DMA is not set
+# CONFIG_XILINX_ZYNQMP_DPDMA is not set
+# CONFIG_MTK_HSDMA is not set
+# CONFIG_MTK_CQDMA is not set
+# CONFIG_QCOM_HIDMA_MGMT is not set
+# CONFIG_QCOM_HIDMA is not set
+# CONFIG_DW_DMAC is not set
+# CONFIG_SF_PDMA is not set
+CONFIG_RENESAS_DMA=y
+CONFIG_SH_DMAE_BASE=y
+# CONFIG_SH_DMAE is not set
+# CONFIG_RCAR_DMAC is not set
+# CONFIG_RENESAS_USB_DMAC is not set
+# CONFIG_RZ_DMAC is not set
+CONFIG_TI_EDMA=y
+CONFIG_DMA_OMAP=y
+CONFIG_TI_DMA_CROSSBAR=y
+# CONFIG_INTEL_LDMA is not set
+
+#
+# DMA Clients
+#
+# CONFIG_ASYNC_TX_DMA is not set
+# CONFIG_DMATEST is not set
+
+#
+# DMABUF options
+#
+CONFIG_SYNC_FILE=y
+# CONFIG_SW_SYNC is not set
+# CONFIG_UDMABUF is not set
+# CONFIG_DMABUF_MOVE_NOTIFY is not set
+# CONFIG_DMABUF_DEBUG is not set
+# CONFIG_DMABUF_SELFTESTS is not set
+# CONFIG_DMABUF_HEAPS is not set
+# CONFIG_DMABUF_SYSFS_STATS is not set
+# end of DMABUF options
+
+# CONFIG_UIO is not set
+# CONFIG_VFIO is not set
+# CONFIG_VIRT_DRIVERS is not set
+CONFIG_VIRTIO_ANCHOR=y
+CONFIG_VIRTIO=y
+# CONFIG_VIRTIO_MENU is not set
+# CONFIG_VHOST_MENU is not set
+
+#
+# Microsoft Hyper-V guest support
+#
+# end of Microsoft Hyper-V guest support
+
+# CONFIG_GREYBUS is not set
+# CONFIG_COMEDI is not set
+# CONFIG_STAGING is not set
+CONFIG_GOLDFISH=y
+# CONFIG_GOLDFISH_PIPE is not set
+# CONFIG_CHROME_PLATFORMS is not set
+# CONFIG_MELLANOX_PLATFORM is not set
+# CONFIG_OLPC_XO175 is not set
+CONFIG_SURFACE_PLATFORMS=y
+CONFIG_HAVE_CLK=y
+CONFIG_HAVE_CLK_PREPARE=y
+CONFIG_COMMON_CLK=y
+
+#
+# Clock driver for ARM Reference designs
+#
+# CONFIG_CLK_ICST is not set
+# CONFIG_CLK_SP810 is not set
+# end of Clock driver for ARM Reference designs
+
+# CONFIG_CLK_HSDK is not set
+# CONFIG_LMK04832 is not set
+# CONFIG_COMMON_CLK_APPLE_NCO is not set
+# CONFIG_COMMON_CLK_MAX77686 is not set
+# CONFIG_COMMON_CLK_MAX9485 is not set
+# CONFIG_COMMON_CLK_HI655X is not set
+# CONFIG_COMMON_CLK_SCMI is not set
+# CONFIG_COMMON_CLK_SCPI is not set
+# CONFIG_COMMON_CLK_SI5341 is not set
+# CONFIG_COMMON_CLK_SI5351 is not set
+# CONFIG_COMMON_CLK_SI514 is not set
+# CONFIG_COMMON_CLK_SI544 is not set
+# CONFIG_COMMON_CLK_SI570 is not set
+# CONFIG_COMMON_CLK_BM1880 is not set
+# CONFIG_COMMON_CLK_CDCE706 is not set
+# CONFIG_COMMON_CLK_TPS68470 is not set
+# CONFIG_COMMON_CLK_CDCE925 is not set
+# CONFIG_COMMON_CLK_CS2000_CP is not set
+# CONFIG_COMMON_CLK_EN7523 is not set
+# CONFIG_COMMON_CLK_FSL_FLEXSPI is not set
+# CONFIG_COMMON_CLK_FSL_SAI is not set
+# CONFIG_COMMON_CLK_GEMINI is not set
+# CONFIG_COMMON_CLK_LAN966X is not set
+# CONFIG_COMMON_CLK_ASPEED is not set
+# CONFIG_COMMON_CLK_S2MPS11 is not set
+# CONFIG_COMMON_CLK_AXI_CLKGEN is not set
+# CONFIG_CLK_QORIQ is not set
+# CONFIG_CLK_LS1028A_PLLDIG is not set
+# CONFIG_COMMON_CLK_XGENE is not set
+# CONFIG_COMMON_CLK_LOONGSON2 is not set
+# CONFIG_COMMON_CLK_RS9_PCIE is not set
+# CONFIG_COMMON_CLK_SI521XX is not set
+# CONFIG_COMMON_CLK_VC3 is not set
+# CONFIG_COMMON_CLK_VC5 is not set
+# CONFIG_COMMON_CLK_VC7 is not set
+# CONFIG_COMMON_CLK_MMP2_AUDIO is not set
+# CONFIG_COMMON_CLK_FIXED_MMIO is not set
+# CONFIG_COMMON_CLK_SP7021 is not set
+# CONFIG_CLK_ACTIONS is not set
+CONFIG_CLK_ANALOGBITS_WRPLL_CLN28HPC=y
+# CONFIG_CLK_BAIKAL_T1 is not set
+# CONFIG_CLK_BCM2711_DVP is not set
+# CONFIG_CLK_BCM2835 is not set
+# CONFIG_CLK_BCM_63XX is not set
+# CONFIG_CLK_BCM_63XX_GATE is not set
+# CONFIG_CLK_BCM63268_TIMER is not set
+# CONFIG_CLK_BCM_KONA is not set
+# CONFIG_CLK_BCM_CYGNUS is not set
+# CONFIG_CLK_BCM_HR2 is not set
+# CONFIG_CLK_BCM_NSP is not set
+# CONFIG_CLK_BCM_NS2 is not set
+# CONFIG_CLK_BCM_SR is not set
+# CONFIG_CLK_RASPBERRYPI is not set
+# CONFIG_COMMON_CLK_HI3516CV300 is not set
+# CONFIG_COMMON_CLK_HI3519 is not set
+# CONFIG_COMMON_CLK_HI3559A is not set
+# CONFIG_COMMON_CLK_HI3660 is not set
+# CONFIG_COMMON_CLK_HI3670 is not set
+# CONFIG_COMMON_CLK_HI3798CV200 is not set
+# CONFIG_COMMON_CLK_HI6220 is not set
+# CONFIG_RESET_HISI is not set
+# CONFIG_COMMON_CLK_BOSTON is not set
+# CONFIG_MXC_CLK is not set
+# CONFIG_CLK_IMX8MM is not set
+# CONFIG_CLK_IMX8MN is not set
+# CONFIG_CLK_IMX8MP is not set
+# CONFIG_CLK_IMX8MQ is not set
+# CONFIG_CLK_IMX8ULP is not set
+# CONFIG_CLK_IMX93 is not set
+# CONFIG_CLK_IMXRT1050 is not set
+
+#
+# Ingenic SoCs drivers
+#
+# CONFIG_INGENIC_CGU_JZ4740 is not set
+# CONFIG_INGENIC_CGU_JZ4755 is not set
+# CONFIG_INGENIC_CGU_JZ4725B is not set
+# CONFIG_INGENIC_CGU_JZ4760 is not set
+# CONFIG_INGENIC_CGU_JZ4770 is not set
+# CONFIG_INGENIC_CGU_JZ4780 is not set
+# CONFIG_INGENIC_CGU_X1000 is not set
+# CONFIG_INGENIC_CGU_X1830 is not set
+# CONFIG_INGENIC_TCU_CLK is not set
+# end of Ingenic SoCs drivers
+
+# CONFIG_COMMON_CLK_KEYSTONE is not set
+# CONFIG_TI_SYSCON_CLK is not set
+
+#
+# Clock driver for MediaTek SoC
+#
+# CONFIG_COMMON_CLK_MEDIATEK_FHCTL is not set
+# CONFIG_COMMON_CLK_MT2701 is not set
+# CONFIG_COMMON_CLK_MT2712 is not set
+# CONFIG_COMMON_CLK_MT6765 is not set
+# CONFIG_COMMON_CLK_MT6779 is not set
+# CONFIG_COMMON_CLK_MT6795 is not set
+# CONFIG_COMMON_CLK_MT6797 is not set
+# CONFIG_COMMON_CLK_MT7622 is not set
+# CONFIG_COMMON_CLK_MT7629 is not set
+# CONFIG_COMMON_CLK_MT7981 is not set
+# CONFIG_COMMON_CLK_MT7986 is not set
+# CONFIG_COMMON_CLK_MT7988 is not set
+# CONFIG_COMMON_CLK_MT8135 is not set
+# CONFIG_COMMON_CLK_MT8167 is not set
+# CONFIG_COMMON_CLK_MT8173 is not set
+# CONFIG_COMMON_CLK_MT8183 is not set
+# CONFIG_COMMON_CLK_MT8186 is not set
+# CONFIG_COMMON_CLK_MT8188 is not set
+# CONFIG_COMMON_CLK_MT8192 is not set
+# CONFIG_COMMON_CLK_MT8195 is not set
+# CONFIG_COMMON_CLK_MT8365 is not set
+# CONFIG_COMMON_CLK_MT8516 is not set
+# end of Clock driver for MediaTek SoC
+
+#
+# Clock support for Amlogic platforms
+#
+# end of Clock support for Amlogic platforms
+
+# CONFIG_MSTAR_MSC313_CPUPLL is not set
+# CONFIG_MSTAR_MSC313_MPLL is not set
+# CONFIG_MCHP_CLK_MPFS is not set
+CONFIG_COMMON_CLK_NUVOTON=y
+CONFIG_CLK_MA35D1=y
+# CONFIG_COMMON_CLK_PISTACHIO is not set
+# CONFIG_COMMON_CLK_QCOM is not set
+# CONFIG_CLK_MT7621 is not set
+# CONFIG_CLK_MTMIPS is not set
+# CONFIG_CLK_RENESAS is not set
+# CONFIG_COMMON_CLK_SAMSUNG is not set
+CONFIG_CLK_SIFIVE=y
+CONFIG_CLK_SIFIVE_PRCI=y
+# CONFIG_CLK_INTEL_SOCFPGA is not set
+# CONFIG_SPRD_COMMON_CLK is not set
+# CONFIG_CLK_STARFIVE_JH7100 is not set
+# CONFIG_CLK_STARFIVE_JH7110_PLL is not set
+# CONFIG_CLK_STARFIVE_JH7110_SYS is not set
+CONFIG_CLK_SUNXI=y
+CONFIG_CLK_SUNXI_CLOCKS=y
+CONFIG_CLK_SUNXI_PRCM_SUN6I=y
+CONFIG_CLK_SUNXI_PRCM_SUN8I=y
+CONFIG_CLK_SUNXI_PRCM_SUN9I=y
+# CONFIG_SUNXI_CCU is not set
+CONFIG_COMMON_CLK_STM32MP=y
+CONFIG_COMMON_CLK_STM32MP135=y
+CONFIG_COMMON_CLK_STM32MP157=y
+# CONFIG_COMMON_CLK_TI_ADPLL is not set
+# CONFIG_CLK_UNIPHIER is not set
+# CONFIG_COMMON_CLK_VISCONTI is not set
+# CONFIG_CLK_LGM_CGU is not set
+# CONFIG_XILINX_VCU is not set
+# CONFIG_COMMON_CLK_XLNX_CLKWZRD is not set
+# CONFIG_COMMON_CLK_ZYNQMP is not set
+# CONFIG_HWSPINLOCK is not set
+
+#
+# Clock Source drivers
+#
+CONFIG_TIMER_OF=y
+CONFIG_TIMER_PROBE=y
+# CONFIG_BCM2835_TIMER is not set
+# CONFIG_BCM_KONA_TIMER is not set
+# CONFIG_DAVINCI_TIMER is not set
+# CONFIG_DIGICOLOR_TIMER is not set
+# CONFIG_OMAP_DM_TIMER is not set
+# CONFIG_DW_APB_TIMER is not set
+# CONFIG_FTTMR010_TIMER is not set
+# CONFIG_IXP4XX_TIMER is not set
+# CONFIG_MESON6_TIMER is not set
+# CONFIG_OWL_TIMER is not set
+# CONFIG_RDA_TIMER is not set
+# CONFIG_SUN4I_TIMER is not set
+# CONFIG_SUN5I_HSTIMER is not set
+# CONFIG_TEGRA_TIMER is not set
+# CONFIG_TEGRA186_TIMER is not set
+# CONFIG_VT8500_TIMER is not set
+# CONFIG_NPCM7XX_TIMER is not set
+# CONFIG_CADENCE_TTC_TIMER is not set
+# CONFIG_ASM9260_TIMER is not set
+# CONFIG_CLKSRC_DBX500_PRCMU is not set
+# CONFIG_CLPS711X_TIMER is not set
+# CONFIG_MXS_TIMER is not set
+# CONFIG_NSPIRE_TIMER is not set
+# CONFIG_INTEGRATOR_AP_TIMER is not set
+# CONFIG_CLKSRC_PISTACHIO is not set
+# CONFIG_CLKSRC_TI_32K is not set
+# CONFIG_CLKSRC_STM32_LP is not set
+# CONFIG_CLKSRC_MPS2 is not set
+# CONFIG_ARC_TIMERS is not set
+# CONFIG_ARM_TIMER_SP804 is not set
+# CONFIG_ARMV7M_SYSTICK is not set
+# CONFIG_ATMEL_PIT is not set
+# CONFIG_ATMEL_ST is not set
+# CONFIG_CLKSRC_SAMSUNG_PWM is not set
+# CONFIG_FSL_FTM_TIMER is not set
+# CONFIG_MTK_TIMER is not set
+# CONFIG_MTK_CPUX_TIMER is not set
+# CONFIG_SPRD_TIMER is not set
+# CONFIG_CLKSRC_JCORE_PIT is not set
+# CONFIG_SH_TIMER_CMT is not set
+# CONFIG_SH_TIMER_MTU2 is not set
+# CONFIG_RENESAS_OSTM is not set
+# CONFIG_SH_TIMER_TMU is not set
+# CONFIG_EM_TIMER_STI is not set
+# CONFIG_CLKSRC_VERSATILE is not set
+# CONFIG_CLKSRC_PXA is not set
+# CONFIG_TIMER_IMX_SYS_CTR is not set
+# CONFIG_CLKSRC_LOONGSON1_PWM is not set
+# CONFIG_CLKSRC_ST_LPC is not set
+# CONFIG_GXP_TIMER is not set
+CONFIG_RISCV_TIMER=y
+# CONFIG_CLINT_TIMER is not set
+# CONFIG_MSC313E_TIMER is not set
+# CONFIG_INGENIC_TIMER is not set
+# CONFIG_INGENIC_SYSOST is not set
+# CONFIG_INGENIC_OST is not set
+# CONFIG_GOLDFISH_TIMER is not set
+# end of Clock Source drivers
+
+# CONFIG_MAILBOX is not set
+CONFIG_IOMMU_SUPPORT=y
+
+#
+# Generic IOMMU Pagetable Support
+#
+# CONFIG_IOMMU_IO_PGTABLE_LPAE is not set
+# CONFIG_IOMMU_IO_PGTABLE_ARMV7S is not set
+# CONFIG_IOMMU_IO_PGTABLE_DART is not set
+# end of Generic IOMMU Pagetable Support
+
+# CONFIG_IOMMU_DEBUGFS is not set
+# CONFIG_IOMMUFD is not set
+# CONFIG_OMAP_IOMMU is not set
+# CONFIG_ROCKCHIP_IOMMU is not set
+# CONFIG_SUN50I_IOMMU is not set
+# CONFIG_EXYNOS_IOMMU is not set
+# CONFIG_IPMMU_VMSA is not set
+# CONFIG_APPLE_DART is not set
+# CONFIG_ARM_SMMU is not set
+# CONFIG_MTK_IOMMU is not set
+# CONFIG_QCOM_IOMMU is not set
+# CONFIG_SPRD_IOMMU is not set
+
+#
+# Remoteproc drivers
+#
+# CONFIG_REMOTEPROC is not set
+# end of Remoteproc drivers
+
+#
+# Rpmsg drivers
+#
+CONFIG_RPMSG=y
+CONFIG_RPMSG_CTRL=y
+CONFIG_RPMSG_NS=y
+CONFIG_RPMSG_VIRTIO=y
+# end of Rpmsg drivers
+
+# CONFIG_SOUNDWIRE is not set
+
+#
+# SOC (System On Chip) specific Drivers
+#
+
+#
+# Amlogic SoC drivers
+#
+# CONFIG_MESON_CANVAS is not set
+# CONFIG_MESON_CLK_MEASURE is not set
+# CONFIG_MESON_GX_SOCINFO is not set
+# CONFIG_MESON_MX_SOCINFO is not set
+# end of Amlogic SoC drivers
+
+#
+# Apple SoC drivers
+#
+# CONFIG_APPLE_MAILBOX is not set
+# CONFIG_APPLE_SART is not set
+# end of Apple SoC drivers
+
+#
+# ASPEED SoC drivers
+#
+# CONFIG_ASPEED_LPC_CTRL is not set
+# CONFIG_ASPEED_LPC_SNOOP is not set
+# CONFIG_ASPEED_UART_ROUTING is not set
+# CONFIG_ASPEED_P2A_CTRL is not set
+# CONFIG_ASPEED_SOCINFO is not set
+# end of ASPEED SoC drivers
+
+# CONFIG_AT91_SOC_ID is not set
+# CONFIG_AT91_SOC_SFR is not set
+
+#
+# Broadcom SoC drivers
+#
+# CONFIG_SOC_BRCMSTB is not set
+# end of Broadcom SoC drivers
+
+#
+# NXP/Freescale QorIQ SoC drivers
+#
+# CONFIG_QUICC_ENGINE is not set
+CONFIG_DPAA2_CONSOLE=y
+# end of NXP/Freescale QorIQ SoC drivers
+
+#
+# fujitsu SoC drivers
+#
+# end of fujitsu SoC drivers
+
+#
+# Hisilicon SoC drivers
+#
+# end of Hisilicon SoC drivers
+
+#
+# i.MX SoC drivers
+#
+# CONFIG_SOC_IMX8M is not set
+# CONFIG_SOC_IMX9 is not set
+# end of i.MX SoC drivers
+
+#
+# IXP4xx SoC drivers
+#
+# CONFIG_IXP4XX_QMGR is not set
+# CONFIG_IXP4XX_NPE is not set
+# end of IXP4xx SoC drivers
+
+#
+# Enable LiteX SoC Builder specific drivers
+#
+# CONFIG_LITEX_SOC_CONTROLLER is not set
+# end of Enable LiteX SoC Builder specific drivers
+
+# CONFIG_LOONGSON2_GUTS is not set
+
+#
+# MediaTek SoC drivers
+#
+# CONFIG_MTK_CMDQ is not set
+# CONFIG_MTK_DEVAPC is not set
+# CONFIG_MTK_INFRACFG is not set
+# CONFIG_MTK_PMIC_WRAP is not set
+# CONFIG_MTK_MMSYS is not set
+# end of MediaTek SoC drivers
+
+# CONFIG_WPCM450_SOC is not set
+
+#
+# Qualcomm SoC drivers
+#
+# CONFIG_QCOM_COMMAND_DB is not set
+# CONFIG_QCOM_GENI_SE is not set
+# CONFIG_QCOM_GSBI is not set
+# CONFIG_QCOM_LLCC is not set
+# CONFIG_QCOM_RAMP_CTRL is not set
+# CONFIG_QCOM_RPM_MASTER_STATS is not set
+# CONFIG_QCOM_RPMH is not set
+# CONFIG_QCOM_SMD_RPM is not set
+# CONFIG_QCOM_SPM is not set
+# CONFIG_QCOM_WCNSS_CTRL is not set
+# CONFIG_QCOM_ICC_BWMON is not set
+# end of Qualcomm SoC drivers
+
+# CONFIG_SOC_RENESAS is not set
+# CONFIG_ROCKCHIP_GRF is not set
+# CONFIG_ROCKCHIP_IODOMAIN is not set
+# CONFIG_SOC_SAMSUNG is not set
+# CONFIG_SOC_TI is not set
+# CONFIG_UX500_SOC_ID is not set
+
+#
+# Xilinx SoC drivers
+#
+# end of Xilinx SoC drivers
+# end of SOC (System On Chip) specific Drivers
+
+#
+# PM Domains
+#
+# CONFIG_OWL_PM_DOMAINS is not set
+
+#
+# Amlogic PM Domains
+#
+# CONFIG_MESON_GX_PM_DOMAINS is not set
+# CONFIG_MESON_EE_PM_DOMAINS is not set
+# end of Amlogic PM Domains
+
+# CONFIG_APPLE_PMGR_PWRSTATE is not set
+CONFIG_ARM_SCMI_PERF_DOMAIN=y
+CONFIG_ARM_SCMI_POWER_DOMAIN=y
+CONFIG_ARM_SCPI_POWER_DOMAIN=y
+
+#
+# Broadcom PM Domains
+#
+# CONFIG_BCM2835_POWER is not set
+# CONFIG_BCM_PMB is not set
+# CONFIG_BCM63XX_POWER is not set
+# end of Broadcom PM Domains
+
+#
+# i.MX PM Domains
+#
+# CONFIG_IMX_GPCV2_PM_DOMAINS is not set
+# end of i.MX PM Domains
+
+#
+# MediaTek PM Domains
+#
+# CONFIG_MTK_SCPSYS is not set
+# CONFIG_MTK_SCPSYS_PM_DOMAINS is not set
+# end of MediaTek PM Domains
+
+#
+# Qualcomm PM Domains
+#
+# end of Qualcomm PM Domains
+
+# CONFIG_ROCKCHIP_PM_DOMAINS is not set
+# CONFIG_UX500_PM_DOMAIN is not set
+# CONFIG_JH71XX_PMU is not set
+# CONFIG_SUN20I_PPU is not set
+# end of PM Domains
+
+# CONFIG_PM_DEVFREQ is not set
+CONFIG_EXTCON=y
+
+#
+# Extcon Device Drivers
+#
+# CONFIG_EXTCON_FSA9480 is not set
+# CONFIG_EXTCON_GPIO is not set
+# CONFIG_EXTCON_MAX3355 is not set
+# CONFIG_EXTCON_PTN5150 is not set
+# CONFIG_EXTCON_QCOM_SPMI_MISC is not set
+# CONFIG_EXTCON_RT8973A is not set
+# CONFIG_EXTCON_SM5502 is not set
+# CONFIG_EXTCON_USB_GPIO is not set
+# CONFIG_MEMORY is not set
+# CONFIG_IIO is not set
+# CONFIG_PWM is not set
+
+#
+# IRQ chip support
+#
+CONFIG_IRQCHIP=y
+# CONFIG_AL_FIC is not set
+# CONFIG_JCORE_AIC is not set
+# CONFIG_RENESAS_INTC_IRQPIN is not set
+# CONFIG_RENESAS_IRQC is not set
+# CONFIG_RENESAS_RZA1_IRQC is not set
+# CONFIG_RENESAS_RZG2L_IRQC is not set
+# CONFIG_SL28CPLD_INTC is not set
+# CONFIG_TS4800_IRQ is not set
+# CONFIG_XILINX_INTC is not set
+# CONFIG_INGENIC_TCU_IRQ is not set
+# CONFIG_IRQ_UNIPHIER_AIDET is not set
+# CONFIG_MESON_IRQ_GPIO is not set
+# CONFIG_IMX_IRQSTEER is not set
+# CONFIG_IMX_INTMUX is not set
+# CONFIG_IMX_MU_MSI is not set
+CONFIG_RISCV_INTC=y
+CONFIG_SIFIVE_PLIC=y
+# CONFIG_STARFIVE_JH8100_INTC is not set
+# CONFIG_EXYNOS_IRQ_COMBINER is not set
+# CONFIG_MST_IRQ is not set
+# CONFIG_MCHP_EIC is not set
+# CONFIG_SUNPLUS_SP7021_INTC is not set
+# end of IRQ chip support
+
+# CONFIG_IPACK_BUS is not set
+CONFIG_RESET_CONTROLLER=y
+# CONFIG_RESET_A10SR is not set
+# CONFIG_RESET_ATH79 is not set
+# CONFIG_RESET_AXS10X is not set
+# CONFIG_RESET_BCM6345 is not set
+# CONFIG_RESET_BERLIN is not set
+# CONFIG_RESET_BRCMSTB is not set
+# CONFIG_RESET_BRCMSTB_RESCAL is not set
+# CONFIG_RESET_GPIO is not set
+# CONFIG_RESET_HSDK is not set
+# CONFIG_RESET_IMX7 is not set
+# CONFIG_RESET_INTEL_GW is not set
+# CONFIG_RESET_K210 is not set
+# CONFIG_RESET_LANTIQ is not set
+# CONFIG_RESET_LPC18XX is not set
+# CONFIG_RESET_MCHP_SPARX5 is not set
+# CONFIG_RESET_MESON is not set
+# CONFIG_RESET_MESON_AUDIO_ARB is not set
+# CONFIG_RESET_NPCM is not set
+# CONFIG_RESET_NUVOTON_MA35D1 is not set
+# CONFIG_RESET_PISTACHIO is not set
+# CONFIG_RESET_QCOM_AOSS is not set
+# CONFIG_RESET_QCOM_PDC is not set
+# CONFIG_RESET_RASPBERRYPI is not set
+# CONFIG_RESET_RZG2L_USBPHY_CTRL is not set
+# CONFIG_RESET_SCMI is not set
+CONFIG_RESET_SIMPLE=y
+# CONFIG_RESET_SOCFPGA is not set
+# CONFIG_RESET_SUNPLUS is not set
+# CONFIG_RESET_SUNXI is not set
+# CONFIG_RESET_TI_SCI is not set
+# CONFIG_RESET_TI_SYSCON is not set
+# CONFIG_RESET_TI_TPS380X is not set
+# CONFIG_RESET_TN48M_CPLD is not set
+# CONFIG_RESET_UNIPHIER is not set
+# CONFIG_RESET_UNIPHIER_GLUE is not set
+# CONFIG_RESET_ZYNQ is not set
+# CONFIG_RESET_STARFIVE_JH7100 is not set
+# CONFIG_COMMON_RESET_HI3660 is not set
+# CONFIG_COMMON_RESET_HI6220 is not set
+
+#
+# PHY Subsystem
+#
+CONFIG_GENERIC_PHY=y
+# CONFIG_PHY_LPC18XX_USB_OTG is not set
+# CONFIG_PHY_PISTACHIO_USB is not set
+# CONFIG_PHY_XGENE is not set
+# CONFIG_USB_LGM_PHY is not set
+# CONFIG_PHY_CAN_TRANSCEIVER is not set
+# CONFIG_PHY_SUN4I_USB is not set
+# CONFIG_PHY_SUN6I_MIPI_DPHY is not set
+# CONFIG_PHY_SUN9I_USB is not set
+# CONFIG_PHY_SUN50I_USB3 is not set
+# CONFIG_PHY_MESON8_HDMI_TX is not set
+# CONFIG_PHY_MESON8B_USB2 is not set
+# CONFIG_PHY_MESON_GXL_USB2 is not set
+# CONFIG_PHY_MESON_G12A_MIPI_DPHY_ANALOG is not set
+# CONFIG_PHY_MESON_G12A_USB2 is not set
+# CONFIG_PHY_MESON_G12A_USB3_PCIE is not set
+# CONFIG_PHY_MESON_AXG_PCIE is not set
+# CONFIG_PHY_MESON_AXG_MIPI_PCIE_ANALOG is not set
+# CONFIG_PHY_MESON_AXG_MIPI_DPHY is not set
+
+#
+# PHY drivers for Broadcom platforms
+#
+# CONFIG_PHY_BCM63XX_USBH is not set
+# CONFIG_PHY_CYGNUS_PCIE is not set
+# CONFIG_PHY_BCM_SR_USB is not set
+# CONFIG_BCM_KONA_USB2_PHY is not set
+# CONFIG_PHY_BCM_NS_USB2 is not set
+# CONFIG_PHY_NS2_USB_DRD is not set
+# CONFIG_PHY_BRCM_SATA is not set
+# CONFIG_PHY_BRCM_USB is not set
+# CONFIG_PHY_BCM_SR_PCIE is not set
+# end of PHY drivers for Broadcom platforms
+
+# CONFIG_PHY_CADENCE_TORRENT is not set
+# CONFIG_PHY_CADENCE_DPHY is not set
+# CONFIG_PHY_CADENCE_DPHY_RX is not set
+# CONFIG_PHY_CADENCE_SIERRA is not set
+# CONFIG_PHY_CADENCE_SALVO is not set
+# CONFIG_PHY_FSL_IMX8MQ_USB is not set
+# CONFIG_PHY_MIXEL_LVDS_PHY is not set
+# CONFIG_PHY_MIXEL_MIPI_DPHY is not set
+# CONFIG_PHY_FSL_IMX8M_PCIE is not set
+# CONFIG_PHY_FSL_LYNX_28G is not set
+# CONFIG_PHY_HI6220_USB is not set
+# CONFIG_PHY_HI3660_USB is not set
+# CONFIG_PHY_HI3670_USB is not set
+# CONFIG_PHY_HI3670_PCIE is not set
+# CONFIG_PHY_HISTB_COMBPHY is not set
+# CONFIG_PHY_HISI_INNO_USB2 is not set
+# CONFIG_PHY_INGENIC_USB is not set
+# CONFIG_PHY_LANTIQ_VRX200_PCIE is not set
+# CONFIG_PHY_LANTIQ_RCU_USB2 is not set
+# CONFIG_ARMADA375_USBCLUSTER_PHY is not set
+# CONFIG_PHY_BERLIN_SATA is not set
+# CONFIG_PHY_BERLIN_USB is not set
+CONFIG_PHY_MVEBU_A3700_UTMI=y
+# CONFIG_PHY_MVEBU_A38X_COMPHY is not set
+# CONFIG_PHY_MVEBU_CP110_UTMI is not set
+# CONFIG_PHY_PXA_28NM_HSIC is not set
+# CONFIG_PHY_PXA_28NM_USB2 is not set
+# CONFIG_PHY_PXA_USB is not set
+# CONFIG_PHY_MMP3_USB is not set
+# CONFIG_PHY_MMP3_HSIC is not set
+# CONFIG_PHY_MTK_PCIE is not set
+# CONFIG_PHY_MTK_TPHY is not set
+# CONFIG_PHY_MTK_UFS is not set
+# CONFIG_PHY_MTK_XSPHY is not set
+# CONFIG_PHY_MTK_HDMI is not set
+# CONFIG_PHY_MTK_MIPI_CSI_0_5 is not set
+# CONFIG_PHY_MTK_MIPI_DSI is not set
+# CONFIG_PHY_MTK_DP is not set
+# CONFIG_PHY_SPARX5_SERDES is not set
+# CONFIG_PHY_LAN966X_SERDES is not set
+# CONFIG_PHY_MAPPHONE_MDM6600 is not set
+# CONFIG_PHY_OCELOT_SERDES is not set
+CONFIG_PHY_ATH79_USB=y
+# CONFIG_PHY_QCOM_EDP is not set
+# CONFIG_PHY_QCOM_IPQ4019_USB is not set
+# CONFIG_PHY_QCOM_PCIE2 is not set
+# CONFIG_PHY_QCOM_QMP is not set
+# CONFIG_PHY_QCOM_QUSB2 is not set
+# CONFIG_PHY_QCOM_SNPS_EUSB2 is not set
+# CONFIG_PHY_QCOM_EUSB2_REPEATER is not set
+# CONFIG_PHY_QCOM_M31_USB is not set
+# CONFIG_PHY_QCOM_USB_SNPS_FEMTO_V2 is not set
+# CONFIG_PHY_QCOM_USB_HS_28NM is not set
+# CONFIG_PHY_QCOM_USB_SS is not set
+# CONFIG_PHY_QCOM_IPQ806X_USB is not set
+# CONFIG_PHY_QCOM_SGMII_ETH is not set
+# CONFIG_PHY_MT7621_PCI is not set
+# CONFIG_PHY_RALINK_USB is not set
+# CONFIG_PHY_RTK_RTD_USB2PHY is not set
+# CONFIG_PHY_RTK_RTD_USB3PHY is not set
+# CONFIG_PHY_R8A779F0_ETHERNET_SERDES is not set
+# CONFIG_PHY_RCAR_GEN3_USB3 is not set
+# CONFIG_PHY_ROCKCHIP_DPHY_RX0 is not set
+# CONFIG_PHY_ROCKCHIP_INNO_HDMI is not set
+# CONFIG_PHY_ROCKCHIP_INNO_USB2 is not set
+# CONFIG_PHY_ROCKCHIP_INNO_CSIDPHY is not set
+# CONFIG_PHY_ROCKCHIP_INNO_DSIDPHY is not set
+# CONFIG_PHY_ROCKCHIP_PCIE is not set
+# CONFIG_PHY_ROCKCHIP_SAMSUNG_HDPTX is not set
+# CONFIG_PHY_ROCKCHIP_SNPS_PCIE3 is not set
+# CONFIG_PHY_ROCKCHIP_TYPEC is not set
+# CONFIG_PHY_EXYNOS_DP_VIDEO is not set
+# CONFIG_PHY_EXYNOS_MIPI_VIDEO is not set
+# CONFIG_PHY_EXYNOS_PCIE is not set
+# CONFIG_PHY_SAMSUNG_UFS is not set
+# CONFIG_PHY_SAMSUNG_USB2 is not set
+# CONFIG_PHY_UNIPHIER_USB2 is not set
+# CONFIG_PHY_UNIPHIER_USB3 is not set
+# CONFIG_PHY_UNIPHIER_PCIE is not set
+# CONFIG_PHY_UNIPHIER_AHCI is not set
+# CONFIG_PHY_ST_SPEAR1310_MIPHY is not set
+# CONFIG_PHY_ST_SPEAR1340_MIPHY is not set
+# CONFIG_PHY_STIH407_USB is not set
+# CONFIG_PHY_STM32_USBPHYC is not set
+# CONFIG_PHY_STARFIVE_JH7110_DPHY_RX is not set
+# CONFIG_PHY_STARFIVE_JH7110_PCIE is not set
+# CONFIG_PHY_STARFIVE_JH7110_USB is not set
+# CONFIG_PHY_SUNPLUS_USB is not set
+# CONFIG_PHY_TEGRA194_P2U is not set
+# CONFIG_PHY_DA8XX_USB is not set
+# CONFIG_PHY_DM816X_USB is not set
+# CONFIG_PHY_AM654_SERDES is not set
+# CONFIG_PHY_J721E_WIZ is not set
+# CONFIG_OMAP_CONTROL_PHY is not set
+# CONFIG_TI_PIPE3 is not set
+# CONFIG_PHY_INTEL_KEEMBAY_EMMC is not set
+# CONFIG_PHY_INTEL_KEEMBAY_USB is not set
+# CONFIG_PHY_INTEL_LGM_COMBO is not set
+# CONFIG_PHY_INTEL_LGM_EMMC is not set
+# CONFIG_PHY_XILINX_ZYNQMP is not set
+# end of PHY Subsystem
+
+# CONFIG_POWERCAP is not set
+# CONFIG_MCB is not set
+
+#
+# Performance monitor support
+#
+# CONFIG_ARM_CCN is not set
+# CONFIG_ARM_CMN is not set
+CONFIG_RISCV_PMU=y
+CONFIG_RISCV_PMU_LEGACY=y
+CONFIG_RISCV_PMU_SBI=y
+# CONFIG_STARFIVE_STARLINK_PMU is not set
+# CONFIG_FSL_IMX8_DDR_PMU is not set
+# CONFIG_XGENE_PMU is not set
+# CONFIG_ARM_DMC620_PMU is not set
+# CONFIG_MARVELL_CN10K_TAD_PMU is not set
+# CONFIG_ALIBABA_UNCORE_DRW_PMU is not set
+# CONFIG_MARVELL_CN10K_DDR_PMU is not set
+# CONFIG_ARM_CORESIGHT_PMU_ARCH_SYSTEM_PMU is not set
+# CONFIG_MESON_DDR_PMU is not set
+# end of Performance monitor support
+
+# CONFIG_RAS is not set
+
+#
+# Android
+#
+# CONFIG_ANDROID_BINDER_IPC is not set
+# end of Android
+
+CONFIG_DAX=y
+CONFIG_NVMEM=y
+CONFIG_NVMEM_SYSFS=y
+CONFIG_NVMEM_LAYOUTS=y
+
+#
+# Layout Types
+#
+# CONFIG_NVMEM_LAYOUT_SL28_VPD is not set
+# CONFIG_NVMEM_LAYOUT_ONIE_TLV is not set
+# end of Layout Types
+
+# CONFIG_NVMEM_APPLE_EFUSES is not set
+# CONFIG_NVMEM_BCM_OCOTP is not set
+# CONFIG_NVMEM_BRCM_NVRAM is not set
+# CONFIG_NVMEM_IMX_IIM is not set
+# CONFIG_NVMEM_IMX_OCOTP is not set
+# CONFIG_NVMEM_IMX_OCOTP_ELE is not set
+# CONFIG_NVMEM_JZ4780_EFUSE is not set
+# CONFIG_NVMEM_LAN9662_OTPC is not set
+# CONFIG_NVMEM_LAYERSCAPE_SFP is not set
+# CONFIG_NVMEM_LPC18XX_EEPROM is not set
+# CONFIG_NVMEM_LPC18XX_OTP is not set
+# CONFIG_NVMEM_MESON_MX_EFUSE is not set
+# CONFIG_NVMEM_MICROCHIP_OTPC is not set
+# CONFIG_NVMEM_MTK_EFUSE is not set
+# CONFIG_NVMEM_MXS_OCOTP is not set
+# CONFIG_NVMEM_NINTENDO_OTP is not set
+# CONFIG_NVMEM_QCOM_QFPROM is not set
+# CONFIG_NVMEM_QCOM_SEC_QFPROM is not set
+# CONFIG_NVMEM_RMEM is not set
+# CONFIG_NVMEM_ROCKCHIP_EFUSE is not set
+# CONFIG_NVMEM_ROCKCHIP_OTP is not set
+# CONFIG_NVMEM_SC27XX_EFUSE is not set
+# CONFIG_NVMEM_SNVS_LPGPR is not set
+# CONFIG_NVMEM_SPRD_EFUSE is not set
+# CONFIG_NVMEM_STM32_ROMEM is not set
+# CONFIG_NVMEM_SUNPLUS_OCOTP is not set
+# CONFIG_NVMEM_UNIPHIER_EFUSE is not set
+# CONFIG_NVMEM_VF610_OCOTP is not set
+# CONFIG_NVMEM_QORIQ_EFUSE is not set
+
+#
+# HW tracing support
+#
+# CONFIG_STM is not set
+# CONFIG_INTEL_TH is not set
+# end of HW tracing support
+
+# CONFIG_FPGA is not set
+# CONFIG_FSI is not set
+CONFIG_TEE=y
+CONFIG_MBEDTEE=y
+# CONFIG_SIOX is not set
+# CONFIG_SLIMBUS is not set
+# CONFIG_INTERCONNECT is not set
+# CONFIG_COUNTER is not set
+# CONFIG_PECI is not set
+# CONFIG_HTE is not set
+# end of Device Drivers
+
+#
+# File systems
+#
+# CONFIG_VALIDATE_FS_PARSER is not set
+CONFIG_FS_STACK=y
+CONFIG_FS_POSIX_ACL=y
+CONFIG_EXPORTFS=y
+# CONFIG_EXPORTFS_BLOCK_OPS is not set
+CONFIG_FILE_LOCKING=y
+# CONFIG_FS_ENCRYPTION is not set
+# CONFIG_FS_VERITY is not set
+CONFIG_FSNOTIFY=y
+CONFIG_DNOTIFY=y
+CONFIG_INOTIFY_USER=y
+# CONFIG_FANOTIFY is not set
+# CONFIG_QUOTA is not set
+CONFIG_AUTOFS_FS=y
+# CONFIG_FUSE_FS is not set
+CONFIG_OVERLAY_FS=y
+# CONFIG_OVERLAY_FS_REDIRECT_DIR is not set
+CONFIG_OVERLAY_FS_REDIRECT_ALWAYS_FOLLOW=y
+# CONFIG_OVERLAY_FS_INDEX is not set
+# CONFIG_OVERLAY_FS_XINO_AUTO is not set
+# CONFIG_OVERLAY_FS_METACOPY is not set
+# CONFIG_OVERLAY_FS_DEBUG is not set
+
+#
+# Caches
+#
+# end of Caches
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+# CONFIG_PROC_KCORE is not set
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_PROC_CHILDREN=y
+CONFIG_KERNFS=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+CONFIG_TMPFS_XATTR=y
+# CONFIG_TMPFS_INODE64 is not set
+# CONFIG_TMPFS_QUOTA is not set
+CONFIG_ARCH_SUPPORTS_HUGETLBFS=y
+CONFIG_HUGETLBFS=y
+# CONFIG_HUGETLB_PAGE_OPTIMIZE_VMEMMAP_DEFAULT_ON is not set
+CONFIG_HUGETLB_PAGE=y
+CONFIG_HUGETLB_PAGE_OPTIMIZE_VMEMMAP=y
+CONFIG_ARCH_HAS_GIGANTIC_PAGE=y
+# CONFIG_CONFIGFS_FS is not set
+CONFIG_EFIVAR_FS=y
+# end of Pseudo filesystems
+
+CONFIG_MISC_FILESYSTEMS=y
+# CONFIG_ORANGEFS_FS is not set
+# CONFIG_ECRYPT_FS is not set
+# CONFIG_CRAMFS is not set
+# CONFIG_PSTORE is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="iso8859-1"
+CONFIG_NLS_CODEPAGE_437=y
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+# CONFIG_NLS_CODEPAGE_855 is not set
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+# CONFIG_NLS_CODEPAGE_866 is not set
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+# CONFIG_NLS_CODEPAGE_1251 is not set
+# CONFIG_NLS_ASCII is not set
+CONFIG_NLS_ISO8859_1=y
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+# CONFIG_NLS_ISO8859_5 is not set
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+# CONFIG_NLS_KOI8_R is not set
+# CONFIG_NLS_KOI8_U is not set
+# CONFIG_NLS_MAC_ROMAN is not set
+# CONFIG_NLS_MAC_CELTIC is not set
+# CONFIG_NLS_MAC_CENTEURO is not set
+# CONFIG_NLS_MAC_CROATIAN is not set
+# CONFIG_NLS_MAC_CYRILLIC is not set
+# CONFIG_NLS_MAC_GAELIC is not set
+# CONFIG_NLS_MAC_GREEK is not set
+# CONFIG_NLS_MAC_ICELAND is not set
+# CONFIG_NLS_MAC_INUIT is not set
+# CONFIG_NLS_MAC_ROMANIAN is not set
+# CONFIG_NLS_MAC_TURKISH is not set
+# CONFIG_NLS_UTF8 is not set
+# CONFIG_UNICODE is not set
+CONFIG_IO_WQ=y
+# end of File systems
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+# CONFIG_KEYS_REQUEST_CACHE is not set
+# CONFIG_PERSISTENT_KEYRINGS is not set
+# CONFIG_TRUSTED_KEYS is not set
+# CONFIG_ENCRYPTED_KEYS is not set
+# CONFIG_KEY_DH_OPERATIONS is not set
+# CONFIG_SECURITY_DMESG_RESTRICT is not set
+CONFIG_SECURITY=y
+CONFIG_SECURITYFS=y
+CONFIG_SECURITY_NETWORK=y
+CONFIG_SECURITY_PATH=y
+# CONFIG_HARDENED_USERCOPY is not set
+# CONFIG_FORTIFY_SOURCE is not set
+# CONFIG_STATIC_USERMODEHELPER is not set
+# CONFIG_SECURITY_YAMA is not set
+# CONFIG_SECURITY_SAFESETID is not set
+# CONFIG_SECURITY_LOCKDOWN_LSM is not set
+# CONFIG_SECURITY_LANDLOCK is not set
+CONFIG_INTEGRITY=y
+# CONFIG_INTEGRITY_SIGNATURE is not set
+# CONFIG_IMA is not set
+# CONFIG_EVM is not set
+CONFIG_DEFAULT_SECURITY_DAC=y
+CONFIG_LSM="landlock,lockdown,yama,loadpin,safesetid,bpf"
+
+#
+# Kernel hardening options
+#
+
+#
+# Memory initialization
+#
+CONFIG_CC_HAS_AUTO_VAR_INIT_PATTERN=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO_BARE=y
+CONFIG_CC_HAS_AUTO_VAR_INIT_ZERO=y
+# CONFIG_INIT_STACK_NONE is not set
+# CONFIG_INIT_STACK_ALL_PATTERN is not set
+CONFIG_INIT_STACK_ALL_ZERO=y
+# CONFIG_INIT_ON_ALLOC_DEFAULT_ON is not set
+# CONFIG_INIT_ON_FREE_DEFAULT_ON is not set
+CONFIG_CC_HAS_ZERO_CALL_USED_REGS=y
+# CONFIG_ZERO_CALL_USED_REGS is not set
+# end of Memory initialization
+
+#
+# Hardening of kernel data structures
+#
+CONFIG_LIST_HARDENED=y
+# CONFIG_BUG_ON_DATA_CORRUPTION is not set
+# end of Hardening of kernel data structures
+
+CONFIG_RANDSTRUCT_NONE=y
+# end of Kernel hardening options
+# end of Security options
+
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_SIG2=y
+CONFIG_CRYPTO_SKCIPHER=y
+CONFIG_CRYPTO_SKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_RNG_DEFAULT=y
+CONFIG_CRYPTO_AKCIPHER2=y
+CONFIG_CRYPTO_AKCIPHER=y
+CONFIG_CRYPTO_KPP2=y
+CONFIG_CRYPTO_ACOMP2=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+CONFIG_CRYPTO_MANAGER_DISABLE_TESTS=y
+CONFIG_CRYPTO_NULL=y
+CONFIG_CRYPTO_NULL2=y
+# CONFIG_CRYPTO_PCRYPT is not set
+# CONFIG_CRYPTO_CRYPTD is not set
+CONFIG_CRYPTO_AUTHENC=y
+# CONFIG_CRYPTO_TEST is not set
+CONFIG_CRYPTO_ENGINE=y
+# end of Crypto core or helper
+
+#
+# Public-key cryptography
+#
+CONFIG_CRYPTO_RSA=y
+# CONFIG_CRYPTO_DH is not set
+# CONFIG_CRYPTO_ECDH is not set
+# CONFIG_CRYPTO_ECDSA is not set
+# CONFIG_CRYPTO_ECRDSA is not set
+# CONFIG_CRYPTO_SM2 is not set
+# CONFIG_CRYPTO_CURVE25519 is not set
+# end of Public-key cryptography
+
+#
+# Block ciphers
+#
+CONFIG_CRYPTO_AES=y
+# CONFIG_CRYPTO_AES_TI is not set
+# CONFIG_CRYPTO_ARIA is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+# CONFIG_CRYPTO_DES is not set
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_SM4_GENERIC is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+# end of Block ciphers
+
+#
+# Length-preserving ciphers and modes
+#
+# CONFIG_CRYPTO_ADIANTUM is not set
+# CONFIG_CRYPTO_CHACHA20 is not set
+CONFIG_CRYPTO_CBC=y
+CONFIG_CRYPTO_CTR=y
+# CONFIG_CRYPTO_CTS is not set
+CONFIG_CRYPTO_ECB=y
+# CONFIG_CRYPTO_HCTR2 is not set
+# CONFIG_CRYPTO_KEYWRAP is not set
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+# end of Length-preserving ciphers and modes
+
+#
+# AEAD (authenticated encryption with associated data) ciphers
+#
+# CONFIG_CRYPTO_AEGIS128 is not set
+# CONFIG_CRYPTO_CHACHA20POLY1305 is not set
+# CONFIG_CRYPTO_CCM is not set
+CONFIG_CRYPTO_GCM=y
+CONFIG_CRYPTO_GENIV=y
+CONFIG_CRYPTO_SEQIV=y
+CONFIG_CRYPTO_ECHAINIV=y
+# CONFIG_CRYPTO_ESSIV is not set
+# end of AEAD (authenticated encryption with associated data) ciphers
+
+#
+# Hashes, digests, and MACs
+#
+CONFIG_CRYPTO_BLAKE2B=y
+# CONFIG_CRYPTO_CMAC is not set
+CONFIG_CRYPTO_GHASH=y
+CONFIG_CRYPTO_HMAC=y
+# CONFIG_CRYPTO_MD4 is not set
+# CONFIG_CRYPTO_MD5 is not set
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_POLY1305 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+CONFIG_CRYPTO_SHA1=y
+CONFIG_CRYPTO_SHA256=y
+CONFIG_CRYPTO_SHA512=y
+CONFIG_CRYPTO_SHA3=y
+# CONFIG_CRYPTO_SM3_GENERIC is not set
+# CONFIG_CRYPTO_STREEBOG is not set
+# CONFIG_CRYPTO_VMAC is not set
+# CONFIG_CRYPTO_WP512 is not set
+# CONFIG_CRYPTO_XCBC is not set
+CONFIG_CRYPTO_XXHASH=y
+# end of Hashes, digests, and MACs
+
+#
+# CRCs (cyclic redundancy checks)
+#
+CONFIG_CRYPTO_CRC32C=y
+# CONFIG_CRYPTO_CRC32 is not set
+# CONFIG_CRYPTO_CRCT10DIF is not set
+# end of CRCs (cyclic redundancy checks)
+
+#
+# Compression
+#
+# CONFIG_CRYPTO_DEFLATE is not set
+# CONFIG_CRYPTO_LZO is not set
+# CONFIG_CRYPTO_842 is not set
+# CONFIG_CRYPTO_LZ4 is not set
+# CONFIG_CRYPTO_LZ4HC is not set
+# CONFIG_CRYPTO_ZSTD is not set
+# end of Compression
+
+#
+# Random number generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+CONFIG_CRYPTO_DRBG_MENU=y
+CONFIG_CRYPTO_DRBG_HMAC=y
+# CONFIG_CRYPTO_DRBG_HASH is not set
+# CONFIG_CRYPTO_DRBG_CTR is not set
+CONFIG_CRYPTO_DRBG=y
+CONFIG_CRYPTO_JITTERENTROPY=y
+CONFIG_CRYPTO_JITTERENTROPY_MEMORY_BLOCKS=64
+CONFIG_CRYPTO_JITTERENTROPY_MEMORY_BLOCKSIZE=32
+CONFIG_CRYPTO_JITTERENTROPY_OSR=1
+# end of Random number generation
+
+#
+# Userspace interface
+#
+# end of Userspace interface
+
+#
+# Accelerated Cryptographic Algorithms for CPU (riscv)
+#
+# CONFIG_CRYPTO_AES_RISCV64 is not set
+# CONFIG_CRYPTO_CHACHA_RISCV64 is not set
+# CONFIG_CRYPTO_GHASH_RISCV64 is not set
+# CONFIG_CRYPTO_SHA256_RISCV64 is not set
+# CONFIG_CRYPTO_SHA512_RISCV64 is not set
+# CONFIG_CRYPTO_SM3_RISCV64 is not set
+# CONFIG_CRYPTO_SM4_RISCV64 is not set
+# end of Accelerated Cryptographic Algorithms for CPU (riscv)
+
+CONFIG_CRYPTO_HW=y
+# CONFIG_CRYPTO_DEV_ALLWINNER is not set
+# CONFIG_CRYPTO_DEV_SL3516 is not set
+# CONFIG_CRYPTO_DEV_EXYNOS_RNG is not set
+# CONFIG_CRYPTO_DEV_S5P is not set
+# CONFIG_CRYPTO_DEV_ATMEL_AES is not set
+# CONFIG_CRYPTO_DEV_ATMEL_TDES is not set
+# CONFIG_CRYPTO_DEV_ATMEL_SHA is not set
+# CONFIG_CRYPTO_DEV_ATMEL_ECC is not set
+# CONFIG_CRYPTO_DEV_ATMEL_SHA204A is not set
+# CONFIG_CRYPTO_DEV_KEEMBAY_OCS_AES_SM4 is not set
+# CONFIG_CRYPTO_DEV_KEEMBAY_OCS_ECC is not set
+# CONFIG_CRYPTO_DEV_KEEMBAY_OCS_HCU is not set
+# CONFIG_CRYPTO_DEV_QCE is not set
+# CONFIG_CRYPTO_DEV_QCOM_RNG is not set
+# CONFIG_CRYPTO_DEV_IMGTEC_HASH is not set
+# CONFIG_CRYPTO_DEV_ZYNQMP_AES is not set
+# CONFIG_CRYPTO_DEV_ZYNQMP_SHA3 is not set
+CONFIG_CRYPTO_DEV_VIRTIO=y
+# CONFIG_CRYPTO_DEV_SAFEXCEL is not set
+# CONFIG_CRYPTO_DEV_CCREE is not set
+# CONFIG_CRYPTO_DEV_HISI_SEC is not set
+# CONFIG_CRYPTO_DEV_AMLOGIC_GXL is not set
+# CONFIG_CRYPTO_DEV_SA2UL is not set
+# CONFIG_CRYPTO_DEV_ASPEED is not set
+# CONFIG_CRYPTO_DEV_JH7110 is not set
+# CONFIG_ASYMMETRIC_KEY_TYPE is not set
+
+#
+# Certificates for signature checking
+#
+# CONFIG_SYSTEM_BLACKLIST_KEYRING is not set
+# end of Certificates for signature checking
+
+CONFIG_BINARY_PRINTF=y
+
+#
+# Library routines
+#
+# CONFIG_PACKING is not set
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_STRNCPY_FROM_USER=y
+CONFIG_GENERIC_STRNLEN_USER=y
+# CONFIG_CORDIC is not set
+# CONFIG_PRIME_NUMBERS is not set
+CONFIG_RATIONAL=y
+
+#
+# Crypto library routines
+#
+CONFIG_CRYPTO_LIB_UTILS=y
+CONFIG_CRYPTO_LIB_AES=y
+CONFIG_CRYPTO_LIB_GF128MUL=y
+CONFIG_CRYPTO_LIB_BLAKE2S_GENERIC=y
+# CONFIG_CRYPTO_LIB_CHACHA is not set
+# CONFIG_CRYPTO_LIB_CURVE25519 is not set
+CONFIG_CRYPTO_LIB_POLY1305_RSIZE=1
+# CONFIG_CRYPTO_LIB_POLY1305 is not set
+# CONFIG_CRYPTO_LIB_CHACHA20POLY1305 is not set
+CONFIG_CRYPTO_LIB_SHA1=y
+CONFIG_CRYPTO_LIB_SHA256=y
+# end of Crypto library routines
+
+CONFIG_CRC_CCITT=y
+CONFIG_CRC16=y
+# CONFIG_CRC_T10DIF is not set
+# CONFIG_CRC64_ROCKSOFT is not set
+CONFIG_CRC_ITU_T=y
+CONFIG_CRC32=y
+# CONFIG_CRC32_SELFTEST is not set
+CONFIG_CRC32_SLICEBY8=y
+# CONFIG_CRC32_SLICEBY4 is not set
+# CONFIG_CRC32_SARWATE is not set
+# CONFIG_CRC32_BIT is not set
+# CONFIG_CRC64 is not set
+# CONFIG_CRC4 is not set
+CONFIG_CRC7=y
+CONFIG_LIBCRC32C=y
+# CONFIG_CRC8 is not set
+CONFIG_XXHASH=y
+# CONFIG_RANDOM32_SELFTEST is not set
+CONFIG_ZLIB_INFLATE=y
+CONFIG_XZ_DEC=y
+CONFIG_XZ_DEC_X86=y
+CONFIG_XZ_DEC_POWERPC=y
+CONFIG_XZ_DEC_ARM=y
+CONFIG_XZ_DEC_ARMTHUMB=y
+CONFIG_XZ_DEC_SPARC=y
+# CONFIG_XZ_DEC_MICROLZMA is not set
+CONFIG_XZ_DEC_BCJ=y
+# CONFIG_XZ_DEC_TEST is not set
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_XARRAY_MULTI=y
+CONFIG_ASSOCIATIVE_ARRAY=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_IOPORT_MAP=y
+CONFIG_HAS_DMA=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_ARCH_DMA_ADDR_T_64BIT=y
+CONFIG_DMA_DECLARE_COHERENT=y
+CONFIG_ARCH_HAS_SETUP_DMA_OPS=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_DEVICE=y
+CONFIG_ARCH_HAS_SYNC_DMA_FOR_CPU=y
+CONFIG_ARCH_HAS_DMA_PREP_COHERENT=y
+CONFIG_ARCH_DMA_DEFAULT_COHERENT=y
+CONFIG_SWIOTLB=y
+# CONFIG_SWIOTLB_DYNAMIC is not set
+CONFIG_DMA_BOUNCE_UNALIGNED_KMALLOC=y
+# CONFIG_DMA_RESTRICTED_POOL is not set
+CONFIG_DMA_NONCOHERENT_MMAP=y
+CONFIG_DMA_COHERENT_POOL=y
+CONFIG_DMA_DIRECT_REMAP=y
+# CONFIG_DMA_API_DEBUG is not set
+# CONFIG_DMA_MAP_BENCHMARK is not set
+CONFIG_SGL_ALLOC=y
+# CONFIG_CPUMASK_OFFSTACK is not set
+CONFIG_CLZ_TAB=y
+# CONFIG_IRQ_POLL is not set
+CONFIG_MPILIB=y
+CONFIG_LIBFDT=y
+CONFIG_UCS2_STRING=y
+CONFIG_HAVE_GENERIC_VDSO=y
+CONFIG_GENERIC_GETTIMEOFDAY=y
+CONFIG_GENERIC_VDSO_TIME_NS=y
+CONFIG_FONT_SUPPORT=y
+CONFIG_FONT_8x16=y
+CONFIG_FONT_AUTOSELECT=y
+CONFIG_ARCH_HAS_PMEM_API=y
+CONFIG_ARCH_STACKWALK=y
+CONFIG_STACKDEPOT=y
+CONFIG_STACKDEPOT_MAX_FRAMES=64
+# CONFIG_PARMAN is not set
+# CONFIG_OBJAGG is not set
+# CONFIG_LWQ_TEST is not set
+# end of Library routines
+
+CONFIG_GENERIC_IOREMAP=y
+CONFIG_GENERIC_LIB_DEVMEM_IS_ALLOWED=y
+
+#
+# Kernel hacking
+#
+
+#
+# printk and dmesg options
+#
+CONFIG_PRINTK_TIME=y
+# CONFIG_PRINTK_CALLER is not set
+# CONFIG_STACKTRACE_BUILD_ID is not set
+CONFIG_CONSOLE_LOGLEVEL_DEFAULT=7
+CONFIG_CONSOLE_LOGLEVEL_QUIET=4
+CONFIG_MESSAGE_LOGLEVEL_DEFAULT=4
+# CONFIG_BOOT_PRINTK_DELAY is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_DYNAMIC_DEBUG_CORE is not set
+CONFIG_SYMBOLIC_ERRNAME=y
+CONFIG_DEBUG_BUGVERBOSE=y
+# end of printk and dmesg options
+
+CONFIG_DEBUG_KERNEL=y
+CONFIG_DEBUG_MISC=y
+
+#
+# Compile-time checks and compiler options
+#
+CONFIG_AS_HAS_NON_CONST_ULEB128=y
+CONFIG_DEBUG_INFO_NONE=y
+# CONFIG_DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT is not set
+# CONFIG_DEBUG_INFO_DWARF4 is not set
+# CONFIG_DEBUG_INFO_DWARF5 is not set
+CONFIG_FRAME_WARN=2048
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_READABLE_ASM is not set
+# CONFIG_HEADERS_INSTALL is not set
+# CONFIG_DEBUG_SECTION_MISMATCH is not set
+CONFIG_SECTION_MISMATCH_WARN_ONLY=y
+# CONFIG_DEBUG_FORCE_FUNCTION_ALIGN_64B is not set
+CONFIG_ARCH_WANT_FRAME_POINTERS=y
+CONFIG_FRAME_POINTER=y
+# CONFIG_VMLINUX_MAP is not set
+# CONFIG_DEBUG_FORCE_WEAK_PER_CPU is not set
+# end of Compile-time checks and compiler options
+
+#
+# Generic Kernel Debugging Instruments
+#
+# CONFIG_MAGIC_SYSRQ is not set
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_FS_ALLOW_ALL=y
+# CONFIG_DEBUG_FS_DISALLOW_MOUNT is not set
+# CONFIG_DEBUG_FS_ALLOW_NONE is not set
+CONFIG_HAVE_ARCH_KGDB=y
+CONFIG_HAVE_ARCH_KGDB_QXFER_PKT=y
+# CONFIG_KGDB is not set
+CONFIG_ARCH_HAS_UBSAN=y
+# CONFIG_UBSAN is not set
+CONFIG_HAVE_KCSAN_COMPILER=y
+# end of Generic Kernel Debugging Instruments
+
+#
+# Networking Debugging
+#
+# end of Networking Debugging
+
+#
+# Memory Debugging
+#
+# CONFIG_PAGE_EXTENSION is not set
+CONFIG_DEBUG_PAGEALLOC=y
+# CONFIG_DEBUG_PAGEALLOC_ENABLE_DEFAULT is not set
+CONFIG_SLUB_DEBUG=y
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_PAGE_OWNER is not set
+# CONFIG_PAGE_POISONING is not set
+# CONFIG_DEBUG_RODATA_TEST is not set
+CONFIG_ARCH_HAS_DEBUG_WX=y
+# CONFIG_DEBUG_WX is not set
+CONFIG_GENERIC_PTDUMP=y
+# CONFIG_PTDUMP_DEBUGFS is not set
+CONFIG_HAVE_DEBUG_KMEMLEAK=y
+# CONFIG_DEBUG_KMEMLEAK is not set
+# CONFIG_PER_VMA_LOCK_STATS is not set
+# CONFIG_DEBUG_OBJECTS is not set
+# CONFIG_SHRINKER_DEBUG is not set
+# CONFIG_DEBUG_STACK_USAGE is not set
+CONFIG_SCHED_STACK_END_CHECK=y
+CONFIG_ARCH_HAS_DEBUG_VM_PGTABLE=y
+CONFIG_DEBUG_VM_IRQSOFF=y
+CONFIG_DEBUG_VM=y
+# CONFIG_DEBUG_VM_MAPLE_TREE is not set
+# CONFIG_DEBUG_VM_RB is not set
+CONFIG_DEBUG_VM_PGFLAGS=y
+CONFIG_DEBUG_VM_PGTABLE=y
+CONFIG_ARCH_HAS_DEBUG_VIRTUAL=y
+# CONFIG_DEBUG_VIRTUAL is not set
+CONFIG_DEBUG_MEMORY_INIT=y
+CONFIG_DEBUG_PER_CPU_MAPS=y
+CONFIG_HAVE_ARCH_KASAN=y
+CONFIG_HAVE_ARCH_KASAN_VMALLOC=y
+CONFIG_CC_HAS_KASAN_GENERIC=y
+CONFIG_CC_HAS_WORKING_NOSANITIZE_ADDRESS=y
+# CONFIG_KASAN is not set
+CONFIG_HAVE_ARCH_KFENCE=y
+# CONFIG_KFENCE is not set
+# end of Memory Debugging
+
+# CONFIG_DEBUG_SHIRQ is not set
+
+#
+# Debug Oops, Lockups and Hangs
+#
+# CONFIG_PANIC_ON_OOPS is not set
+CONFIG_PANIC_ON_OOPS_VALUE=0
+CONFIG_PANIC_TIMEOUT=0
+CONFIG_LOCKUP_DETECTOR=y
+CONFIG_SOFTLOCKUP_DETECTOR=y
+# CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC is not set
+CONFIG_HAVE_HARDLOCKUP_DETECTOR_BUDDY=y
+# CONFIG_HARDLOCKUP_DETECTOR is not set
+CONFIG_DETECT_HUNG_TASK=y
+CONFIG_DEFAULT_HUNG_TASK_TIMEOUT=120
+# CONFIG_BOOTPARAM_HUNG_TASK_PANIC is not set
+CONFIG_WQ_WATCHDOG=y
+# CONFIG_WQ_CPU_INTENSIVE_REPORT is not set
+# end of Debug Oops, Lockups and Hangs
+
+#
+# Scheduler Debugging
+#
+CONFIG_SCHED_DEBUG=y
+# CONFIG_SCHEDSTATS is not set
+# end of Scheduler Debugging
+
+CONFIG_DEBUG_TIMEKEEPING=y
+
+#
+# Lock Debugging (spinlocks, mutexes, etc...)
+#
+CONFIG_LOCK_DEBUGGING_SUPPORT=y
+# CONFIG_PROVE_LOCKING is not set
+# CONFIG_LOCK_STAT is not set
+CONFIG_DEBUG_RT_MUTEXES=y
+CONFIG_DEBUG_SPINLOCK=y
+CONFIG_DEBUG_MUTEXES=y
+# CONFIG_DEBUG_WW_MUTEX_SLOWPATH is not set
+CONFIG_DEBUG_RWSEMS=y
+# CONFIG_DEBUG_LOCK_ALLOC is not set
+CONFIG_DEBUG_ATOMIC_SLEEP=y
+# CONFIG_DEBUG_LOCKING_API_SELFTESTS is not set
+# CONFIG_LOCK_TORTURE_TEST is not set
+# CONFIG_WW_MUTEX_SELFTEST is not set
+# CONFIG_SCF_TORTURE_TEST is not set
+# CONFIG_CSD_LOCK_WAIT_DEBUG is not set
+# end of Lock Debugging (spinlocks, mutexes, etc...)
+
+# CONFIG_DEBUG_IRQFLAGS is not set
+CONFIG_STACKTRACE=y
+# CONFIG_WARN_ALL_UNSEEDED_RANDOM is not set
+# CONFIG_DEBUG_KOBJECT is not set
+
+#
+# Debug kernel data structures
+#
+CONFIG_DEBUG_LIST=y
+CONFIG_DEBUG_PLIST=y
+CONFIG_DEBUG_SG=y
+# CONFIG_DEBUG_NOTIFIERS is not set
+# CONFIG_DEBUG_MAPLE_TREE is not set
+# end of Debug kernel data structures
+
+#
+# RCU Debugging
+#
+# CONFIG_RCU_SCALE_TEST is not set
+# CONFIG_RCU_TORTURE_TEST is not set
+# CONFIG_RCU_REF_SCALE_TEST is not set
+CONFIG_RCU_CPU_STALL_TIMEOUT=21
+CONFIG_RCU_EXP_CPU_STALL_TIMEOUT=0
+# CONFIG_RCU_CPU_STALL_CPUTIME is not set
+# CONFIG_RCU_TRACE is not set
+CONFIG_RCU_EQS_DEBUG=y
+# end of RCU Debugging
+
+# CONFIG_DEBUG_WQ_FORCE_RR_CPU is not set
+# CONFIG_CPU_HOTPLUG_STATE_CONTROL is not set
+# CONFIG_LATENCYTOP is not set
+CONFIG_HAVE_RETHOOK=y
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_TRACER=y
+CONFIG_HAVE_FUNCTION_GRAPH_RETVAL=y
+CONFIG_HAVE_DYNAMIC_FTRACE=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS=y
+CONFIG_HAVE_DYNAMIC_FTRACE_WITH_DIRECT_CALLS=y
+CONFIG_HAVE_FTRACE_MCOUNT_RECORD=y
+CONFIG_HAVE_SYSCALL_TRACEPOINTS=y
+CONFIG_TRACING_SUPPORT=y
+# CONFIG_FTRACE is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_SAMPLE_FTRACE_DIRECT=y
+CONFIG_HAVE_SAMPLE_FTRACE_DIRECT_MULTI=y
+# CONFIG_STRICT_DEVMEM is not set
+
+#
+# riscv Debugging
+#
+
+#
+# arch/riscv/kernel Testing and Coverage
+#
+CONFIG_AS_HAS_ULEB128=y
+CONFIG_RUNTIME_KERNEL_TESTING_MENU=y
+# end of arch/riscv/kernel Testing and Coverage
+# end of riscv Debugging
+
+#
+# Kernel Testing and Coverage
+#
+# CONFIG_KUNIT is not set
+# CONFIG_NOTIFIER_ERROR_INJECTION is not set
+# CONFIG_FAULT_INJECTION is not set
+CONFIG_ARCH_HAS_KCOV=y
+CONFIG_CC_HAS_SANCOV_TRACE_PC=y
+# CONFIG_KCOV is not set
+# CONFIG_RUNTIME_TESTING_MENU is not set
+CONFIG_ARCH_USE_MEMTEST=y
+CONFIG_MEMTEST=y
+# end of Kernel Testing and Coverage
+
+#
+# Rust hacking
+#
+# end of Rust hacking
+# end of Kernel hacking
+
+#
+# Documentation
+#
+# CONFIG_WARN_MISSING_DOCUMENTS is not set
+# CONFIG_WARN_ABI_ERRORS is not set
+# end of Documentation
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/Config.in buildroot/tee/mbedtee/Config.in
--- buildroot-ori/tee/mbedtee/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/Config.in	2025-05-31 23:12:46.411389556 +0800
@@ -0,0 +1,28 @@
+config BR2_PACKAGE_MBEDTEE
+	bool "mbedtee packages"
+	help
+	  enable mbedtee system support
+
+if BR2_PACKAGE_MBEDTEE
+
+source "tee/mbedtee/mbedtee-os/Config.in"
+
+source "tee/mbedtee/mbedtee-common/Config.in"
+
+source "tee/mbedtee/mbedtee-supp/Config.in"
+
+source "tee/mbedtee/mbedtee-crypto/Config.in"
+
+source "tee/mbedtee/mbedtee-client-api/Config.in"
+
+source "tee/mbedtee/mbedtee-client-app/Config.in"
+
+source "tee/mbedtee/mbedtee-ta/Config.in"
+
+config BR2_PLATFORM_NAME
+	string "mbedtee platform"
+	
+config BR2_PLATFORM_CFG
+	string "mbedtee defconfig"
+
+endif
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-client-api/Config.in buildroot/tee/mbedtee/mbedtee-client-api/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-client-api/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-client-api/Config.in	2025-05-31 23:12:46.411389556 +0800
@@ -0,0 +1,5 @@
+config BR2_PACKAGE_MBEDTEE_CLIENT_API
+	bool "mbedtee client API"
+	default y
+   	help
+		MbedTEE - GlobalPlatform Client API
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-client-api/mbedtee-client-api.mk buildroot/tee/mbedtee/mbedtee-client-api/mbedtee-client-api.mk
--- buildroot-ori/tee/mbedtee/mbedtee-client-api/mbedtee-client-api.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-client-api/mbedtee-client-api.mk	2025-05-31 23:12:46.411389556 +0800
@@ -0,0 +1,49 @@
+# =========================================================
+# GlobalPlatform Client API @ mbedtee
+# =========================================================
+
+MBEDTEE_CLIENT_API_VERSION := main
+MBEDTEE_CLIENT_API_SITE_METHOD = git
+MBEDTEE_CLIENT_API_SITE = https://github.com/mbedtee/mbedtee-client-api.git
+MBEDTEE_CLIENT_API_SOURCE = mbedtee-client-api-$(MBEDTEE_CLIENT_API_VERSION).tar.gz
+MBEDTEE_CLIENT_API_RELEASE_NAME = mbedtee-client-api-$(MBEDTEE_CLIENT_API_VERSION).tar.gz
+
+MBEDTEE_CLIENT_API_INSTALL_TARGET = YES
+MBEDTEE_CLIENT_API_INSTALL_STAGING = YES
+
+MBEDTEE_CLIENT_API_DEPENDENCIES = toolchain mbedtee-common
+
+MBEDTEE_CLIENT_LIB_STAGING_DIR = $(STAGING_DIR)/usr/lib
+
+MBEDTEE_CLIENT_API_TARGET = libteec_api.so
+
+ifeq ($(ARCH),arm)
+MBEDTEE_CLIENT_API_ARCH_FLAGS = -fPIC
+else ifeq ($(ARCH),aarch64)
+MBEDTEE_CLIENT_API_ARCH_FLAGS = -fPIC
+else ifeq ($(ARCH),mipsel)
+MBEDTEE_CLIENT_API_ARCH_FLAGS = "-EL -fPIC -mabicalls"
+else ifneq ($(findstring $(ARCH), riscv32 riscv64),)
+MBEDTEE_CLIENT_API_ARCH_FLAGS = -fPIC
+endif
+
+MBEDTEE_CLIENT_API_MAKE_FLAGS = CROSS_COMPILE=$(TARGET_CROSS)
+MBEDTEE_CLIENT_API_MAKE_FLAGS += ARCH_FLAGS=$(MBEDTEE_CLIENT_API_ARCH_FLAGS)
+MBEDTEE_CLIENT_API_MAKE_FLAGS += MBEDTEE_INC=$(MBEDTEE_COMMON_INC_STAGING_DIR)
+MBEDTEE_CLIENT_API_MAKE_FLAGS += TARGET_NAME=$(MBEDTEE_CLIENT_API_TARGET)
+
+define MBEDTEE_CLIENT_API_BUILD_CMDS
+	make $(MBEDTEE_CLIENT_API_MAKE_FLAGS) -C $(@D)
+endef
+
+define MBEDTEE_CLIENT_API_INSTALL_TARGET_CMDS
+	$(INSTALL) -D -m 0777 $(@D)/$(MBEDTEE_CLIENT_API_TARGET) $(TARGET_DIR)/lib
+endef
+
+define MBEDTEE_CLIENT_API_INSTALL_STAGING_CMDS
+	@mkdir -p $(MBEDTEE_CLIENT_LIB_STAGING_DIR)
+	@cp -raf $(@D)/include/public/* $(MBEDTEE_COMMON_INC_STAGING_DIR)
+	$(INSTALL) -D -m 0777 $(@D)/$(MBEDTEE_CLIENT_API_TARGET) $(MBEDTEE_CLIENT_LIB_STAGING_DIR)
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-client-app/Config.in buildroot/tee/mbedtee/mbedtee-client-app/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-client-app/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-client-app/Config.in	2025-05-31 23:12:46.411389556 +0800
@@ -0,0 +1,11 @@
+config BR2_PACKAGE_MBEDTEE_CLIENT_APP
+	bool "mbedtee client APP"
+   	help
+		Client Applications @ REE
+
+if BR2_PACKAGE_MBEDTEE_CLIENT_APP
+
+source "tee/mbedtee/mbedtee-client-app/mbedtee-helloworld-client/Config.in"
+source "tee/mbedtee/mbedtee-client-app/mbedtee-globalplatform-client/Config.in"
+
+endif
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-client-app/mbedtee-client-app.mk buildroot/tee/mbedtee/mbedtee-client-app/mbedtee-client-app.mk
--- buildroot-ori/tee/mbedtee/mbedtee-client-app/mbedtee-client-app.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-client-app/mbedtee-client-app.mk	2025-05-31 23:12:46.411389556 +0800
@@ -0,0 +1 @@
+include $(sort $(wildcard tee/mbedtee/mbedtee-client-app/*/*.mk))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-client-app/mbedtee-globalplatform-client/Config.in buildroot/tee/mbedtee/mbedtee-client-app/mbedtee-globalplatform-client/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-client-app/mbedtee-globalplatform-client/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-client-app/mbedtee-globalplatform-client/Config.in	2025-05-31 23:12:46.412390056 +0800
@@ -0,0 +1,5 @@
+config BR2_PACKAGE_MBEDTEE_GLOBALPLATFORM_CLIENT
+	bool "mbedtee GlobalPlatform client"
+	default n
+   	help
+		GlobalPlatform TestSuite @ REE
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-client-app/mbedtee-globalplatform-client/mbedtee-globalplatform-client.mk buildroot/tee/mbedtee/mbedtee-client-app/mbedtee-globalplatform-client/mbedtee-globalplatform-client.mk
--- buildroot-ori/tee/mbedtee/mbedtee-client-app/mbedtee-globalplatform-client/mbedtee-globalplatform-client.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-client-app/mbedtee-globalplatform-client/mbedtee-globalplatform-client.mk	2025-05-31 23:12:46.412390056 +0800
@@ -0,0 +1,30 @@
+# =========================================================
+# GlobalPlatform TestSuite @ REE
+# =========================================================
+
+MBEDTEE_GLOBALPLATFORM_CLIENT_VERSION := main
+MBEDTEE_GLOBALPLATFORM_CLIENT_SITE_METHOD = git
+MBEDTEE_GLOBALPLATFORM_CLIENT_SITE = https://github.com/mbedtee/mbedtee-globalplatform-client.git
+MBEDTEE_GLOBALPLATFORM_CLIENT_SOURCE = mbedtee-globalplatform-client-$(MBEDTEE_GLOBALPLATFORM_CLIENT_VERSION).tar.gz
+MBEDTEE_GLOBALPLATFORM_CLIENT_RELEASE_NAME = mbedtee-globalplatform-client-$(MBEDTEE_GLOBALPLATFORM_CLIENT_VERSION).tar.gz
+
+MBEDTEE_GLOBALPLATFORM_CLIENT_INSTALL_TARGET = YES
+
+MBEDTEE_GLOBALPLATFORM_CLIENT_DEPENDENCIES = toolchain mbedtee-os mbedtee-client-api
+
+MBEDTEE_GLOBALPLATFORM_CLIENT_TARGET_DIR = $(TARGET_DIR)/bin
+
+MBEDTEE_GLOBALPLATFORM_CLIENT_MAKE_FLAGS = CROSS_COMPILE=$(TARGET_CROSS) ARCH=$(ARCH)
+MBEDTEE_GLOBALPLATFORM_CLIENT_MAKE_FLAGS += MBEDTEE_INC=$(MBEDTEE_COMMON_INC_STAGING_DIR)
+MBEDTEE_GLOBALPLATFORM_CLIENT_MAKE_FLAGS += GP_TEEC_LIB=$(MBEDTEE_CLIENT_LIB_STAGING_DIR)/libteec_api.so
+
+define MBEDTEE_GLOBALPLATFORM_CLIENT_BUILD_CMDS
+	make $(MBEDTEE_GLOBALPLATFORM_CLIENT_MAKE_FLAGS) -C $(@D)
+endef
+
+define MBEDTEE_GLOBALPLATFORM_CLIENT_INSTALL_TARGET_CMDS
+	@mkdir -p $(MBEDTEE_GLOBALPLATFORM_CLIENT_TARGET_DIR)
+	$(INSTALL) -D -m 0777 $(@D)/bin/* $(MBEDTEE_GLOBALPLATFORM_CLIENT_TARGET_DIR)
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-client-app/mbedtee-helloworld-client/Config.in buildroot/tee/mbedtee/mbedtee-client-app/mbedtee-helloworld-client/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-client-app/mbedtee-helloworld-client/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-client-app/mbedtee-helloworld-client/Config.in	2025-05-31 23:12:46.412390056 +0800
@@ -0,0 +1,5 @@
+config BR2_PACKAGE_MBEDTEE_HELLOWORLD_CLIENT
+	bool "mbedtee HelloWorld client"
+	default n
+   	help
+		HelloWorld Client APP @ REE
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-client-app/mbedtee-helloworld-client/mbedtee-helloworld-client.mk buildroot/tee/mbedtee/mbedtee-client-app/mbedtee-helloworld-client/mbedtee-helloworld-client.mk
--- buildroot-ori/tee/mbedtee/mbedtee-client-app/mbedtee-helloworld-client/mbedtee-helloworld-client.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-client-app/mbedtee-helloworld-client/mbedtee-helloworld-client.mk	2025-05-31 23:12:46.412390056 +0800
@@ -0,0 +1,30 @@
+# =========================================================
+# HelloWorld Client APP @ REE
+# =========================================================
+
+MBEDTEE_HELLOWORLD_CLIENT_VERSION := main
+MBEDTEE_HELLOWORLD_CLIENT_SITE_METHOD = git
+MBEDTEE_HELLOWORLD_CLIENT_SITE = https://github.com/mbedtee/mbedtee-helloworld-client.git
+MBEDTEE_HELLOWORLD_CLIENT_SOURCE = mbedtee-helloworld-client-$(MBEDTEE_HELLOWORLD_CLIENT_VERSION).tar.gz
+MBEDTEE_HELLOWORLD_CLIENT_RELEASE_NAME = mbedtee-helloworld-client-$(MBEDTEE_HELLOWORLD_CLIENT_VERSION).tar.gz
+
+MBEDTEE_HELLOWORLD_CLIENT_INSTALL_TARGET = YES
+
+MBEDTEE_HELLOWORLD_CLIENT_DEPENDENCIES = toolchain mbedtee-os mbedtee-client-api
+
+MBEDTEE_HELLOWORLD_CLIENT_TARGET_DIR = $(TARGET_DIR)/bin
+
+MBEDTEE_HELLOWORLD_CLIENT_MAKE_FLAGS = CROSS_COMPILE=$(TARGET_CROSS) ARCH=$(ARCH)
+MBEDTEE_HELLOWORLD_CLIENT_MAKE_FLAGS += MBEDTEE_INC=$(MBEDTEE_COMMON_INC_STAGING_DIR)
+MBEDTEE_HELLOWORLD_CLIENT_MAKE_FLAGS += GP_TEEC_LIB=$(MBEDTEE_CLIENT_LIB_STAGING_DIR)/libteec_api.so
+
+define MBEDTEE_HELLOWORLD_CLIENT_BUILD_CMDS
+	make $(MBEDTEE_HELLOWORLD_CLIENT_MAKE_FLAGS) -C $(@D)
+endef
+
+define MBEDTEE_HELLOWORLD_CLIENT_INSTALL_TARGET_CMDS
+	@mkdir -p $(MBEDTEE_HELLOWORLD_CLIENT_TARGET_DIR)
+	$(INSTALL) -D -m 0777 $(@D)/bin/* $(MBEDTEE_HELLOWORLD_CLIENT_TARGET_DIR)
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-common/Config.in buildroot/tee/mbedtee/mbedtee-common/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-common/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-common/Config.in	2025-05-31 23:12:46.413390556 +0800
@@ -0,0 +1,5 @@
+config BR2_PACKAGE_MBEDTEE_COMMON
+	bool "mbedtee common"
+	default y
+   	help
+		MbedTEE - Common Files for REE and TEE
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-common/mbedtee-common.mk buildroot/tee/mbedtee/mbedtee-common/mbedtee-common.mk
--- buildroot-ori/tee/mbedtee/mbedtee-common/mbedtee-common.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-common/mbedtee-common.mk	2025-05-31 23:12:46.413390556 +0800
@@ -0,0 +1,20 @@
+# =========================================================
+# MbedTEE Common Files for REE, TEE and TA
+# =========================================================
+
+MBEDTEE_COMMON_VERSION := main
+MBEDTEE_COMMON_SITE_METHOD = git
+MBEDTEE_COMMON_SITE = https://github.com/mbedtee/mbedtee-common.git
+MBEDTEE_COMMON_SOURCE = mbedtee-common-$(MBEDTEE_COMMON_VERSION).tar.gz
+MBEDTEE_COMMON_RELEASE_NAME = mbedtee-common-$(MBEDTEE_COMMON_VERSION).tar.gz
+
+MBEDTEE_COMMON_INSTALL_STAGING = YES
+
+MBEDTEE_COMMON_INC_STAGING_DIR = $(STAGING_DIR)/usr/include/mbedtee
+
+define MBEDTEE_COMMON_INSTALL_STAGING_CMDS
+	@mkdir -p $(MBEDTEE_COMMON_INC_STAGING_DIR)
+	@cp -raf $(@D)/* $(MBEDTEE_COMMON_INC_STAGING_DIR)
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-crypto/Config.in buildroot/tee/mbedtee/mbedtee-crypto/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-crypto/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-crypto/Config.in	2025-05-31 23:12:46.413390556 +0800
@@ -0,0 +1,5 @@
+config BR2_PACKAGE_MBEDTEE_CRYPTO
+	bool "mbedtee cryptotool"
+	default n
+   	help
+		mbedtee - CryptoTool for crypt/signing TA
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-crypto/mbedtee-crypto.mk buildroot/tee/mbedtee/mbedtee-crypto/mbedtee-crypto.mk
--- buildroot-ori/tee/mbedtee/mbedtee-crypto/mbedtee-crypto.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-crypto/mbedtee-crypto.mk	2025-05-31 23:12:46.413390556 +0800
@@ -0,0 +1,30 @@
+# =========================================================
+# MBEDTEE CRYPTO
+# =========================================================
+
+MBEDTEE_CRYPTO_VERSION := main
+MBEDTEE_CRYPTO_SITE_METHOD = git
+MBEDTEE_CRYPTO_SITE = https://github.com/mbedtee/mbedtee-crypto.git
+MBEDTEE_CRYPTO_SOURCE = mbedtee-crypto-$(MBEDTEE_CRYPTO_VERSION).tar.gz
+MBEDTEE_CRYPTO_RELEASE_NAME = mbedtee-crypto-$(MBEDTEE_CRYPTO_VERSION).tar.gz
+
+MBEDTEE_CRYPTO_TARGET_DIR = $(HOST_DIR)/usr/bin
+
+MBEDTEE_CRYPTO_TOOL = $(MBEDTEE_CRYPTO_TARGET_DIR)/cryptoclient
+
+MBEDTEE_CRYPTO_SERVER = $(@D)/server/cryptoserver
+
+define MBEDTEE_CRYPTO_BUILD_CMDS
+	make -C $(@D)/client
+	make -C $(@D)/server
+endef
+
+define MBEDTEE_CRYPTO_INSTALL_TARGET_CMDS
+	$(shell if [ ! -z `pidof cryptoserver` ]; then \
+		pidof cryptoserver | xargs kill -9; fi; \
+		cd $(@D)/server; $(MBEDTEE_CRYPTO_SERVER))
+	$(INSTALL) -D -m 0777 $(@D)/client/cryptoclient $(MBEDTEE_CRYPTO_TARGET_DIR)
+	$(shell cd $(@D)/server; $(MBEDTEE_CRYPTO_SERVER))
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee.mk buildroot/tee/mbedtee/mbedtee.mk
--- buildroot-ori/tee/mbedtee/mbedtee.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee.mk	2025-05-31 23:12:46.413390556 +0800
@@ -0,0 +1 @@
+include $(sort $(wildcard tee/mbedtee/*/*.mk))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-os/Config.in buildroot/tee/mbedtee/mbedtee-os/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-os/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-os/Config.in	2025-05-31 23:12:46.414391056 +0800
@@ -0,0 +1,9 @@
+config BR2_PACKAGE_MBEDTEE_OS
+	bool "mbedtee OS"
+	select BR2_TOOLCHAIN_MBEDTEE_ARM if BR2_ARM_CPU_ARMV7A
+	select BR2_TOOLCHAIN_MBEDTEE_AARCH64 if BR2_ARM_CPU_ARMV8A
+	select BR2_TOOLCHAIN_MBEDTEE_RISCV32 if BR2_RISCV_32
+	select BR2_TOOLCHAIN_MBEDTEE_RISCV64 if BR2_RISCV_64
+	select BR2_TOOLCHAIN_MBEDTEE_MIPS if BR2_MIPS_CPU_MIPS32R2
+	help
+	  with mbedtee system support
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-os/mbedtee-os.mk buildroot/tee/mbedtee/mbedtee-os/mbedtee-os.mk
--- buildroot-ori/tee/mbedtee/mbedtee-os/mbedtee-os.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-os/mbedtee-os.mk	2025-05-31 23:12:46.414391056 +0800
@@ -0,0 +1,103 @@
+# =========================================================
+# MBEDTEE OS
+# =========================================================
+
+MBEDTEE_OS_VERSION = main
+MBEDTEE_OS_SITE_METHOD = git
+MBEDTEE_OS_SITE = https://github.com/mbedtee/mbedtee-os.git
+MBEDTEE_OS_SOURCE = mbedtee-os-$(MBEDTEE_OS_VERSION).tar.gz
+MBEDTEE_OS_RELEASE_NAME = mbedtee-os-$(MBEDTEE_OS_VERSION).tar.gz
+
+MBEDTEE_OS_INSTALL_IMAGES = YES
+MBEDTEE_OS_ALWAYS_INSTALL_IMAGES = YES
+
+MBEDTEE_OS_DEPENDENCIES = host-dtc host-dosfstools host-mtools host-bison host-flex
+
+MBEDTEE_OS_DEPENDENCIES += mbedtee-common
+
+MBEDTEE_OS_DEFAULT_CONFIG = $(BR2_PLATFORM_CFG)
+
+ifeq ($(ARCH),arm)
+MBEDTEE_OS_DEPENDENCIES += toolchain-mbedtee-arm
+MBEDTEE_OS_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_ARM_CROSS)
+else ifeq ($(ARCH),aarch64)
+MBEDTEE_OS_DEPENDENCIES += toolchain-mbedtee-aarch64
+MBEDTEE_OS_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_AARCH64_CROSS)
+else ifeq ($(ARCH),mipsel)
+MBEDTEE_OS_DEPENDENCIES += toolchain-mbedtee-mips
+MBEDTEE_OS_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_MIPS_CROSS)
+else ifeq ($(ARCH),riscv32)
+MBEDTEE_OS_DEPENDENCIES += toolchain-mbedtee-riscv32
+MBEDTEE_OS_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_RISCV32_CROSS)
+else ifeq ($(ARCH),riscv64)
+MBEDTEE_OS_DEPENDENCIES += toolchain-mbedtee-riscv64
+MBEDTEE_OS_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_RISCV64_CROSS)
+endif
+
+BR_NO_CHECK_HASH_FOR += $(MBEDTEE_OS_SOURCE)
+
+MBEDTEE_OS_MAKE_FLAGS += BUILD_VERSION=$(MBEDTEE_OS_VERSION) VERBOSE=$(V)
+
+MBEDTEE_OS_BINARY_NAME = mbedtee.bin
+MBEDTEE_OS_ELF_NAME = mbedtee.elf
+MBEDTEE_OS_RELEASE_NAME = mbedtee.ubo
+
+MBEDTEE_LIBC_STAGING_DIR = $(STAGING_DIR)/usr/lib/mbedtee
+
+MBEDTEE_TARAMFS_SIZE = 0x200000
+MBEDTEE_TARAMFS = $(TARGET_DIR)/data/mbedtee/reefs/ta.ramfs
+MBEDTEE_TARAMFS_MKFS = $(HOST_DIR)/sbin/mkfs.vfat
+MBEDTEE_TARAMFS_GENERATE = `if [ ! -e $(MBEDTEE_TARAMFS) ]; then \
+		mkdir -p $(shell dirname $(MBEDTEE_TARAMFS)); \
+		dd if=/dev/zero of=$(MBEDTEE_TARAMFS) bs=$(shell printf %d $(MBEDTEE_TARAMFS_SIZE)) count=1; \
+		$(MBEDTEE_TARAMFS_MKFS) -F 12 $(MBEDTEE_TARAMFS) 2> /dev/null; \
+		$(HOST_DIR)/bin/mcopy -pQ -i $(MBEDTEE_TARAMFS) -os $(@D)/bin/skeleton/* ::; fi`
+
+MBEDTEE_OS_MAKE_FLAGS += MBEDTEE_INC=$(MBEDTEE_COMMON_INC_STAGING_DIR)
+MBEDTEE_OS_MAKE_FLAGS += DTC=$(HOST_DIR)/bin/dtc MCOPY=$(HOST_DIR)/bin/mcopy
+MBEDTEE_OS_MAKE_FLAGS += MKFS_VFAT=$(MBEDTEE_TARAMFS_MKFS)
+
+define MBEDTEE_OS_GENERATE_LIBRARY
+	$(BR2_MAKE) $(MBEDTEE_OS_MAKE_FLAGS) -C $(@D)
+endef
+
+define MBEDTEE_OS_INSTALL_STAGING_CMDS
+	@mkdir -p $(MBEDTEE_COMMON_INC_STAGING_DIR)/tee
+	@cp -raf $(@D)/include/*.h $(MBEDTEE_COMMON_INC_STAGING_DIR)/tee
+endef
+
+define MBEDTEE_OS_BUILD_CMDS
+	@rm -f $(MBEDTEE_OS_DIR)/.stamp_rsynced
+	$(MBEDTEE_OS_INSTALL_STAGING_CMDS)
+	$(MBEDTEE_OS_GENERATE_LIBRARY)
+endef
+
+define MBEDTEE_OS_INSTALL_BINARY_CMDS
+	$(INSTALL) -D -m 0777 $(@D)/bin/${MBEDTEE_OS_BINARY_NAME} $(BINARIES_DIR)
+	$(INSTALL) -D -m 0777 $(@D)/bin/${MBEDTEE_OS_ELF_NAME} $(BINARIES_DIR)
+endef
+
+define MBEDTEE_OS_INSTALL_IMAGES_CMDS
+	@cp -rf $(@D)/lib/mbedtls/include/* $(MBEDTEE_COMMON_INC_STAGING_DIR)/tee/
+	$(MBEDTEE_OS_INSTALL_BINARY_CMDS)
+	@if [ -e $(@D)/bin/libc.so ]; then \
+		mkdir -p $(MBEDTEE_LIBC_STAGING_DIR); \
+		$(INSTALL) -D -m 0777 $(@D)/bin/libc.so $(MBEDTEE_LIBC_STAGING_DIR); \
+	fi
+	@echo ${MBEDTEE_TARAMFS_GENERATE} > /dev/null
+endef
+
+define MBEDTEE_OS_CONFIGURE_CMDS
+	@$(call MESSAGE,"$(MBEDTEE_OS_DEFAULT_CONFIG)")
+	@$(BR2_MAKE) $(MBEDTEE_OS_MAKE_FLAGS) -C $(@D) $(MBEDTEE_OS_DEFAULT_CONFIG)
+endef
+
+mbedtee-os-menuconfig: mbedtee-os-configure
+	$(BR2_MAKE) $(MBEDTEE_OS_MAKE_FLAGS) -C $(MBEDTEE_OS_DIR) menuconfig
+	@rm -f $(MBEDTEE_OS_DIR)/.stamp_{rsynced,built,target_installed,images_installed}
+
+define MBEDTEE_OS_HELP_CMDS
+	@echo '  mbedtee-os-menuconfig  - Run mbedtee OS menuconfig'
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-supp/Config.in buildroot/tee/mbedtee/mbedtee-supp/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-supp/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-supp/Config.in	2025-05-31 23:12:46.414391056 +0800
@@ -0,0 +1,6 @@
+config BR2_PACKAGE_MBEDTEE_SUPP
+	bool "mbedtee supplicant"
+	default y
+   	help
+		build a linux daemon to handle the mbedtee requests
+		(handles the requests in Linux userspace, e.g. REEFS) 
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-supp/mbedtee-supp.mk buildroot/tee/mbedtee/mbedtee-supp/mbedtee-supp.mk
--- buildroot-ori/tee/mbedtee/mbedtee-supp/mbedtee-supp.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-supp/mbedtee-supp.mk	2025-05-31 23:12:46.414391056 +0800
@@ -0,0 +1,28 @@
+# ===========================================================
+# linux daemon for handling the mbedtee requests, e.g. REEFS
+# ===========================================================
+
+MBEDTEE_SUPP_VERSION := main
+MBEDTEE_SUPP_SITE_METHOD = git
+MBEDTEE_SUPP_SITE = https://github.com/mbedtee/mbedtee-supp.git
+MBEDTEE_SUPP_SOURCE = mbedtee-supp-$(MBEDTEE_SUPP_VERSION).tar.gz
+MBEDTEE_SUPP_RELEASE_NAME = mbedtee-supp-$(MBEDTEE_SUPP_VERSION).tar.gz
+
+MBEDTEE_SUPP_INSTALL_TARGET = YES
+MBEDTEE_SUPP_INSTALL_STAGING = YES
+
+MBEDTEE_SUPP_DEPENDENCIES = toolchain mbedtee-common
+
+MBEDTEE_SUPP_MAKE_FLAGS = CROSS_COMPILE=$(TARGET_CROSS)
+MBEDTEE_SUPP_MAKE_FLAGS += MBEDTEE_INC=$(MBEDTEE_COMMON_INC_STAGING_DIR)
+
+define MBEDTEE_SUPP_BUILD_CMDS
+	make $(MBEDTEE_SUPP_MAKE_FLAGS) -C $(@D)
+endef
+
+define MBEDTEE_SUPP_INSTALL_TARGET_CMDS
+	$(INSTALL) -D -m 0777 $(@D)/mbedtee_supp $(TARGET_DIR)/bin
+	$(INSTALL) -D -m 0777 $(@D)/S44supp $(TARGET_DIR)/etc/init.d
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-ta/Config.in buildroot/tee/mbedtee/mbedtee-ta/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-ta/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-ta/Config.in	2025-05-31 23:12:46.414391056 +0800
@@ -0,0 +1,12 @@
+config BR2_PACKAGE_MBEDTEE_TA
+	bool "mbedtee TA"
+	select BR2_PACKAGE_MBEDTEE_CRYPTO
+   	help
+		MbedTEE - Trust Applications
+
+if BR2_PACKAGE_MBEDTEE_TA
+
+source "tee/mbedtee/mbedtee-ta/mbedtee-helloworld-ta/Config.in"
+source "tee/mbedtee/mbedtee-ta/mbedtee-globalplatform-ta/Config.in"
+
+endif
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-ta/mbedtee-globalplatform-ta/Config.in buildroot/tee/mbedtee/mbedtee-ta/mbedtee-globalplatform-ta/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-ta/mbedtee-globalplatform-ta/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-ta/mbedtee-globalplatform-ta/Config.in	2025-05-31 23:12:46.415391556 +0800
@@ -0,0 +1,5 @@
+config BR2_PACKAGE_MBEDTEE_GLOBALPLATFORM_TA
+	bool "mbedtee GlobalPlatform TA"
+	default n
+   	help
+		TA - GlobalPlatform TEE test suite
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-ta/mbedtee-globalplatform-ta/mbedtee-globalplatform-ta.mk buildroot/tee/mbedtee/mbedtee-ta/mbedtee-globalplatform-ta/mbedtee-globalplatform-ta.mk
--- buildroot-ori/tee/mbedtee/mbedtee-ta/mbedtee-globalplatform-ta/mbedtee-globalplatform-ta.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-ta/mbedtee-globalplatform-ta/mbedtee-globalplatform-ta.mk	2025-05-31 23:12:46.415391556 +0800
@@ -0,0 +1,73 @@
+# =========================================================
+# MBEDTEE GlobalPlatform TestSuite TAs
+# =========================================================
+
+MBEDTEE_GLOBALPLATFORM_TA_VERSION := main
+MBEDTEE_GLOBALPLATFORM_TA_SITE_METHOD = git
+MBEDTEE_GLOBALPLATFORM_TA_SITE = https://github.com/mbedtee/mbedtee-globalplatform-ta.git
+MBEDTEE_GLOBALPLATFORM_TA_SOURCE = mbedtee-globalplatform-ta-$(MBEDTEE_GLOBALPLATFORM_TA_VERSION).tar.gz
+MBEDTEE_GLOBALPLATFORM_TA_RELEASE_NAME = mbedtee-globalplatform-ta-$(MBEDTEE_GLOBALPLATFORM_TA_VERSION).tar.gz
+
+MBEDTEE_GLOBALPLATFORM_TA_INSTALL_TARGET = YES
+
+MBEDTEE_GLOBALPLATFORM_TA_DEPENDENCIES = mbedtee-crypto mbedtee-os
+
+ifeq ($(ARCH),arm)
+MBEDTEE_GLOBALPLATFORM_TA_DEPENDENCIES += toolchain-mbedtee-arm
+MBEDTEE_GLOBALPLATFORM_TA_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_ARM_CROSS)
+MBEDTEE_GLOBALPLATFORM_TA_ARCH_CFLAGS = "-fPIE -msoft-float"
+else ifeq ($(ARCH),aarch64)
+MBEDTEE_GLOBALPLATFORM_TA_DEPENDENCIES += toolchain-mbedtee-aarch64
+MBEDTEE_GLOBALPLATFORM_TA_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_AARCH64_CROSS)
+MBEDTEE_GLOBALPLATFORM_TA_ARCH_CFLAGS = "-fPIE"
+else ifeq ($(ARCH),mipsel)
+MBEDTEE_GLOBALPLATFORM_TA_DEPENDENCIES += toolchain-mbedtee-mips
+MBEDTEE_GLOBALPLATFORM_TA_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_MIPS_CROSS)
+MBEDTEE_GLOBALPLATFORM_TA_ARCH_CFLAGS = "-EL -fPIE -mabicalls -msoft-float -G 0 -mno-gpopt"
+else ifeq ($(ARCH),riscv32)
+MBEDTEE_GLOBALPLATFORM_TA_DEPENDENCIES += toolchain-mbedtee-riscv32
+MBEDTEE_GLOBALPLATFORM_TA_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_RISCV32_CROSS)
+MBEDTEE_GLOBALPLATFORM_TA_ARCH_CFLAGS = "-fPIE -mabi=ilp32d -march=rv32imafd -mstrict-align"
+else ifeq ($(ARCH),riscv64)
+MBEDTEE_GLOBALPLATFORM_TA_DEPENDENCIES += toolchain-mbedtee-riscv64
+MBEDTEE_GLOBALPLATFORM_TA_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_RISCV64_CROSS)
+MBEDTEE_GLOBALPLATFORM_TA_ARCH_CFLAGS = "-fPIE -mabi=lp64d -march=rv64imafd -mstrict-align"
+endif
+
+MBEDTEE_GLOBALPLATFORM_TA_MAKE_FLAGS += MBEDTEE_INC=$(MBEDTEE_COMMON_INC_STAGING_DIR)
+MBEDTEE_GLOBALPLATFORM_TA_MAKE_FLAGS += MBEDTEE_LIBC=$(MBEDTEE_LIBC_STAGING_DIR)
+MBEDTEE_GLOBALPLATFORM_TA_MAKE_FLAGS += ARCH_CFLAGS=$(MBEDTEE_GLOBALPLATFORM_TA_ARCH_CFLAGS)
+
+MBEDTEE_GLOBALPLATFORM_TA_SIGN_OBJ = $(@D)/signed
+
+MBEDTEE_GLOBALPLATFORM_TAS = TTA_DS TTA_TCF TTA_TCF_ICA TTA_TCF_ICA2 \
+				TTA_answerSuccessTo_OpenSession_Invoke TTA_Arithmetical \
+				TTA_answerErrorTo_Invoke TTA_answerErrorTo_OpenSession \
+				TTA_check_OpenSession_with_4_parameters TTA_Crypto \
+				TTA_TCF_MultipleInstanceTA TTA_TCF_PanicAtCloseSession  \
+				TTA_testingClientAPI_Parameters_Invoke TTA_testingClientAPI \
+				TTA_testingClientAPI_Parameters_OpenSession TTA_Time \
+				TTA_TCF_PanicAtCreation TTA_TCF_SingleInstanceTA
+
+MBEDTEE_GLOBALPLATFORM_TA_MAKE_FLAGS += TAS="$(MBEDTEE_GLOBALPLATFORM_TAS)"
+
+define MBEDTEE_GLOBALPLATFORM_TA_CRYPTO_CMDS
+        @mkdir -p $(MBEDTEE_GLOBALPLATFORM_TA_SIGN_OBJ)
+        for TA in $(MBEDTEE_GLOBALPLATFORM_TAS); do \
+		$(MBEDTEE_CRYPTO_TOOL) --type mbedtee-ta --platform generic \
+			--config-in $(@D)/$$TA.config --object-in $(@D)/$$TA \
+	   		--object-out $(MBEDTEE_GLOBALPLATFORM_TA_SIGN_OBJ)/$$TA.o \
+			--certificate-out $(MBEDTEE_GLOBALPLATFORM_TA_SIGN_OBJ)/$$TA.certi; \
+        done
+endef
+
+define MBEDTEE_GLOBALPLATFORM_TA_BUILD_CMDS
+	make $(MBEDTEE_GLOBALPLATFORM_TA_MAKE_FLAGS) -C $(@D) all
+	$(MBEDTEE_GLOBALPLATFORM_TA_CRYPTO_CMDS)
+endef
+
+define MBEDTEE_GLOBALPLATFORM_TA_INSTALL_TARGET_CMDS
+	$(HOST_DIR)/bin/mcopy -pQ -i $(MBEDTEE_TARAMFS) -os $(MBEDTEE_GLOBALPLATFORM_TA_SIGN_OBJ)/* ::
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-ta/mbedtee-helloworld-ta/Config.in buildroot/tee/mbedtee/mbedtee-ta/mbedtee-helloworld-ta/Config.in
--- buildroot-ori/tee/mbedtee/mbedtee-ta/mbedtee-helloworld-ta/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-ta/mbedtee-helloworld-ta/Config.in	2025-05-31 23:12:46.415391556 +0800
@@ -0,0 +1,5 @@
+config BR2_PACKAGE_MBEDTEE_HELLOWORLD_TA
+	bool "mbedtee HelloWorld TA"
+	default n
+   	help
+		TA - Hello World
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-ta/mbedtee-helloworld-ta/mbedtee-helloworld-ta.mk buildroot/tee/mbedtee/mbedtee-ta/mbedtee-helloworld-ta/mbedtee-helloworld-ta.mk
--- buildroot-ori/tee/mbedtee/mbedtee-ta/mbedtee-helloworld-ta/mbedtee-helloworld-ta.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-ta/mbedtee-helloworld-ta/mbedtee-helloworld-ta.mk	2025-05-31 23:12:46.415391556 +0800
@@ -0,0 +1,63 @@
+# =========================================================
+# MBEDTEE HelloWorld TA
+# =========================================================
+
+MBEDTEE_HELLOWORLD_TA_VERSION := main
+MBEDTEE_HELLOWORLD_TA_SITE_METHOD = git
+MBEDTEE_HELLOWORLD_TA_SITE = https://github.com/mbedtee/mbedtee-helloworld-ta.git
+MBEDTEE_HELLOWORLD_TA_SOURCE = mbedtee-helloworld-ta-$(MBEDTEE_HELLOWORLD_TA_VERSION).tar.gz
+MBEDTEE_HELLOWORLD_TA_RELEASE_NAME = mbedtee-helloworld-ta-$(MBEDTEE_HELLOWORLD_TA_VERSION).tar.gz
+
+MBEDTEE_HELLOWORLD_TA_INSTALL_TARGET = YES
+
+MBEDTEE_HELLOWORLD_TA_DEPENDENCIES = mbedtee-crypto mbedtee-os
+
+ifeq ($(ARCH),arm)
+MBEDTEE_HELLOWORLD_TA_DEPENDENCIES += toolchain-mbedtee-arm
+MBEDTEE_HELLOWORLD_TA_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_ARM_CROSS)
+MBEDTEE_HELLOWORLD_TA_ARCH_CFLAGS = "-fPIE -msoft-float"
+else ifeq ($(ARCH),aarch64)
+MBEDTEE_HELLOWORLD_TA_DEPENDENCIES += toolchain-mbedtee-aarch64
+MBEDTEE_HELLOWORLD_TA_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_AARCH64_CROSS)
+MBEDTEE_HELLOWORLD_TA_ARCH_CFLAGS = "-fPIE"
+else ifeq ($(ARCH),mipsel)
+MBEDTEE_HELLOWORLD_TA_DEPENDENCIES += toolchain-mbedtee-mips
+MBEDTEE_HELLOWORLD_TA_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_MIPS_CROSS)
+MBEDTEE_HELLOWORLD_TA_ARCH_CFLAGS = "-EL -fPIE -mabicalls -msoft-float -G 0 -mno-gpopt"
+else ifeq ($(ARCH),riscv32)
+MBEDTEE_HELLOWORLD_TA_DEPENDENCIES += toolchain-mbedtee-riscv32
+MBEDTEE_HELLOWORLD_TA_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_RISCV32_CROSS)
+MBEDTEE_HELLOWORLD_TA_ARCH_CFLAGS = "-fPIE -mabi=ilp32d -march=rv32imafd -mstrict-align"
+else ifeq ($(ARCH),riscv64)
+MBEDTEE_HELLOWORLD_TA_DEPENDENCIES += toolchain-mbedtee-riscv64
+MBEDTEE_HELLOWORLD_TA_MAKE_FLAGS = CROSS_COMPILE=$(TOOLCHAIN_MBEDTEE_RISCV64_CROSS)
+MBEDTEE_HELLOWORLD_TA_ARCH_CFLAGS = "-fPIE -mabi=lp64d -march=rv64imafd -mstrict-align"
+endif
+
+MBEDTEE_HELLOWORLD_TA_MAKE_FLAGS += MBEDTEE_INC=$(MBEDTEE_COMMON_INC_STAGING_DIR)
+MBEDTEE_HELLOWORLD_TA_MAKE_FLAGS += MBEDTEE_LIBC=$(MBEDTEE_LIBC_STAGING_DIR)
+MBEDTEE_HELLOWORLD_TA_MAKE_FLAGS += ARCH_CFLAGS=$(MBEDTEE_HELLOWORLD_TA_ARCH_CFLAGS)
+
+MBEDTEE_HELLOWORLD_TA_NAME = mbedtee-helloworld-ta
+
+MBEDTEE_HELLOWORLD_TA_SIGN_OBJ = $(@D)/signed
+
+define MBEDTEE_HELLOWORLD_TA_CRYPTO_CMDS
+	@mkdir -p $(MBEDTEE_HELLOWORLD_TA_SIGN_OBJ)
+	$(MBEDTEE_CRYPTO_TOOL) --type mbedtee-ta --platform generic \
+					--config-in $(@D)/$(MBEDTEE_HELLOWORLD_TA_NAME).config \
+	        --object-in $(@D)/$(MBEDTEE_HELLOWORLD_TA_NAME) \
+	        --object-out $(MBEDTEE_HELLOWORLD_TA_SIGN_OBJ)/$(MBEDTEE_HELLOWORLD_TA_NAME).o \
+	        --certificate-out $(MBEDTEE_HELLOWORLD_TA_SIGN_OBJ)/$(MBEDTEE_HELLOWORLD_TA_NAME).certi
+endef
+
+define MBEDTEE_HELLOWORLD_TA_BUILD_CMDS
+	make $(MBEDTEE_HELLOWORLD_TA_MAKE_FLAGS) -C $(@D)
+	$(MBEDTEE_HELLOWORLD_TA_CRYPTO_CMDS)
+endef
+
+define MBEDTEE_HELLOWORLD_TA_INSTALL_TARGET_CMDS
+	$(HOST_DIR)/bin/mcopy -pQ -i $(MBEDTEE_TARAMFS) -so $(MBEDTEE_HELLOWORLD_TA_SIGN_OBJ)/* ::
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/tee/mbedtee/mbedtee-ta/mbedtee-ta.mk buildroot/tee/mbedtee/mbedtee-ta/mbedtee-ta.mk
--- buildroot-ori/tee/mbedtee/mbedtee-ta/mbedtee-ta.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/tee/mbedtee/mbedtee-ta/mbedtee-ta.mk	2025-05-31 23:12:46.416392056 +0800
@@ -0,0 +1 @@
+include $(sort $(wildcard tee/mbedtee/mbedtee-ta/*/*.mk))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/Config.in buildroot/toolchain/Config.in
--- buildroot-ori/toolchain/Config.in	2025-06-16 15:08:03.570715403 +0800
+++ buildroot/toolchain/Config.in	2025-06-15 21:00:46.998451896 +0800
@@ -60,6 +60,11 @@ endchoice
 
 source "toolchain/toolchain-buildroot/Config.in"
 source "toolchain/toolchain-external/Config.in"
+source "toolchain/toolchain-mbedtee-arm/Config.in"
+source "toolchain/toolchain-mbedtee-aarch64/Config.in"
+source "toolchain/toolchain-mbedtee-riscv32/Config.in"
+source "toolchain/toolchain-mbedtee-riscv64/Config.in"
+source "toolchain/toolchain-mbedtee-mips/Config.in"
 
 # Generic toolchain options
 
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-aarch64/Config.in buildroot/toolchain/toolchain-mbedtee-aarch64/Config.in
--- buildroot-ori/toolchain/toolchain-mbedtee-aarch64/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-aarch64/Config.in	2025-05-31 23:12:46.417392556 +0800
@@ -0,0 +1,7 @@
+config BR2_TOOLCHAIN_MBEDTEE_AARCH64
+	bool "mbedtee toolchain"
+	depends on BR2_aarch64
+	depends on BR2_ARM_CPU_ARMV8A
+	help
+	  armv8-a cross-toolchain with GCC
+
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-aarch64/--toolchain-mbedtee-aarch64.hash buildroot/toolchain/toolchain-mbedtee-aarch64/--toolchain-mbedtee-aarch64.hash
--- buildroot-ori/toolchain/toolchain-mbedtee-aarch64/--toolchain-mbedtee-aarch64.hash	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-aarch64/--toolchain-mbedtee-aarch64.hash	2025-05-31 23:12:46.417392556 +0800
@@ -0,0 +1,2 @@
+4# Locally calculated
+sha256 381f65d22c7dae3cd7ae502dd28d75b2a5279c29d659c54b8ef2b3fc4e77f4c9 aarch64-mbedtee-elf-14.2.0.tar.bz2
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-aarch64/toolchain-mbedtee-aarch64.mk buildroot/toolchain/toolchain-mbedtee-aarch64/toolchain-mbedtee-aarch64.mk
--- buildroot-ori/toolchain/toolchain-mbedtee-aarch64/toolchain-mbedtee-aarch64.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-aarch64/toolchain-mbedtee-aarch64.mk	2025-06-07 19:28:05.184170830 +0800
@@ -0,0 +1,29 @@
+################################################################################
+#
+# toolchain-mbedtee-aarch64
+#
+################################################################################
+
+TOOLCHAIN_MBEDTEE_AARCH64_VERSION = 15.1.0
+
+TOOLCHAIN_MBEDTEE_AARCH64_NAME = toolchain-mbedtee-aarch64
+TOOLCHAIN_MBEDTEE_AARCH64_INSTALL_DIR=$(HOST_DIR)/opt/$(TOOLCHAIN_MBEDTEE_AARCH64_NAME)
+TOOLCHAIN_MBEDTEE_AARCH64_BIN := $(TOOLCHAIN_MBEDTEE_AARCH64_INSTALL_DIR)/bin
+
+TOOLCHAIN_MBEDTEE_AARCH64_CROSS=$(TOOLCHAIN_MBEDTEE_AARCH64_BIN)/aarch64-mbedtee-elf-
+TOOLCHAIN_MBEDTEE_AARCH64_CC=$(TOOLCHAIN_MBEDTEE_AARCH64_CROSS)gcc
+TOOLCHAIN_MBEDTEE_AARCH64_CXX=$(TOOLCHAIN_MBEDTEE_AARCH64_CROSS)g++
+TOOLCHAIN_MBEDTEE_AARCH64_READELF=$(TOOLCHAIN_MBEDTEE_AARCH64_CROSS)readelf
+
+TOOLCHAIN_MBEDTEE_AARCH64_SITE = https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvYy9hZGU1YzFiOWU3MzhkYTRkL0VVRzJtQ2RZR2V0SWhrQzFoRHlVU2FjQmVTd0c5WERweHI5LWVZa2wzZU4xQUE_ZT16MTRnNGU
+TOOLCHAIN_MBEDTEE_AARCH64_SOURCE = aarch64-mbedtee-elf-$(TOOLCHAIN_MBEDTEE_AARCH64_VERSION).tar.bz2
+
+TOOLCHAIN_MBEDTEE_AARCH64_NO_FASTBUILD = y
+
+define TOOLCHAIN_MBEDTEE_AARCH64_EXTRACT_CMDS
+	mkdir -p $(TOOLCHAIN_MBEDTEE_AARCH64_INSTALL_DIR)
+	$(call suitable-extractor,.tar.bz2) $(DL_DIR)/$(TOOLCHAIN_MBEDTEE_AARCH64_NAME)/$(TOOLCHAIN_MBEDTEE_AARCH64_SOURCE) | \
+		$(TAR) --strip-components=1 --exclude='usr/lib/locale/*' -C $(TOOLCHAIN_MBEDTEE_AARCH64_INSTALL_DIR) $(TAR_OPTIONS) -
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-arm/Config.in buildroot/toolchain/toolchain-mbedtee-arm/Config.in
--- buildroot-ori/toolchain/toolchain-mbedtee-arm/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-arm/Config.in	2025-05-31 23:12:46.417392556 +0800
@@ -0,0 +1,7 @@
+config BR2_TOOLCHAIN_MBEDTEE_ARM
+	bool "MbedTEE Toolchain"
+	depends on BR2_arm
+	depends on BR2_ARM_CPU_ARMV7A
+	help
+	  ARMv7-A Tollchain with GCC
+
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-arm/--toolchain-mbedtee-arm.hash buildroot/toolchain/toolchain-mbedtee-arm/--toolchain-mbedtee-arm.hash
--- buildroot-ori/toolchain/toolchain-mbedtee-arm/--toolchain-mbedtee-arm.hash	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-arm/--toolchain-mbedtee-arm.hash	2025-05-31 23:12:46.417392556 +0800
@@ -0,0 +1,2 @@
+# Locally calculated
+sha256 d2cfcac5f9828d00c64be65e3a506eebb9b816203c91db07f936f316c6d4306e arm-mbedtee-eabi-14.2.0.tar.bz2
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-arm/toolchain-mbedtee-arm.mk buildroot/toolchain/toolchain-mbedtee-arm/toolchain-mbedtee-arm.mk
--- buildroot-ori/toolchain/toolchain-mbedtee-arm/toolchain-mbedtee-arm.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-arm/toolchain-mbedtee-arm.mk	2025-06-07 19:27:02.497347924 +0800
@@ -0,0 +1,29 @@
+################################################################################
+#
+# toolchain-mbedtee-arm
+#
+################################################################################
+
+TOOLCHAIN_MBEDTEE_ARM_VERSION = 15.1.0
+
+TOOLCHAIN_MBEDTEE_ARM_NAME = toolchain-mbedtee-arm
+TOOLCHAIN_MBEDTEE_ARM_INSTALL_DIR=$(HOST_DIR)/opt/$(TOOLCHAIN_MBEDTEE_ARM_NAME)
+TOOLCHAIN_MBEDTEE_ARM_BIN := $(TOOLCHAIN_MBEDTEE_ARM_INSTALL_DIR)/bin
+
+TOOLCHAIN_MBEDTEE_ARM_CROSS=$(TOOLCHAIN_MBEDTEE_ARM_BIN)/arm-mbedtee-eabi-
+TOOLCHAIN_MBEDTEE_ARM_CC=$(TOOLCHAIN_MBEDTEE_ARM_CROSS)gcc
+TOOLCHAIN_MBEDTEE_ARM_CXX=$(TOOLCHAIN_MBEDTEE_ARM_CROSS)g++
+TOOLCHAIN_MBEDTEE_ARM_READELF=$(TOOLCHAIN_MBEDTEE_ARM_CROSS)readelf
+
+TOOLCHAIN_MBEDTEE_ARM_SITE = https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvYy9hZGU1YzFiOWU3MzhkYTRkL0VZVkxlei1pUjBKSmhMeWdsTWhIYlhzQjJSLU93c0NqVDh1LVZ4MTRyZnZ2bkE_ZT1xNzc4bFk
+TOOLCHAIN_MBEDTEE_ARM_SOURCE = arm-mbedtee-eabi-$(TOOLCHAIN_MBEDTEE_ARM_VERSION).tar.bz2
+
+TOOLCHAIN_MBEDTEE_ARM_NO_FASTBUILD = y
+
+define TOOLCHAIN_MBEDTEE_ARM_EXTRACT_CMDS
+	mkdir -p $(TOOLCHAIN_MBEDTEE_ARM_INSTALL_DIR)
+	$(call suitable-extractor,.tar.bz2) $(DL_DIR)/$(TOOLCHAIN_MBEDTEE_ARM_NAME)/$(TOOLCHAIN_MBEDTEE_ARM_SOURCE) | \
+		$(TAR) --strip-components=1 --exclude='usr/lib/locale/*' -C $(TOOLCHAIN_MBEDTEE_ARM_INSTALL_DIR) $(TAR_OPTIONS) -
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-mips/Config.in buildroot/toolchain/toolchain-mbedtee-mips/Config.in
--- buildroot-ori/toolchain/toolchain-mbedtee-mips/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-mips/Config.in	2025-05-31 23:12:46.418393056 +0800
@@ -0,0 +1,6 @@
+config BR2_TOOLCHAIN_MBEDTEE_MIPS
+	bool "mbedtee MIPS32 Toolchain"
+	depends on BR2_mipsel
+	help
+	  MIPS32 Tollchain with GCC
+
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-mips/--toolchain-mbedtee-mips.hash buildroot/toolchain/toolchain-mbedtee-mips/--toolchain-mbedtee-mips.hash
--- buildroot-ori/toolchain/toolchain-mbedtee-mips/--toolchain-mbedtee-mips.hash	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-mips/--toolchain-mbedtee-mips.hash	2025-05-31 23:12:46.418393056 +0800
@@ -0,0 +1,2 @@
+# Locally calculated
+sha256 c9363dfa7df877471bbe892b78d33637439fdbbeb5c77db71e31730f5f6e438e mips-mbedtee-elf-14.2.0.tar.bz2
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-mips/toolchain-mbedtee-mips.mk buildroot/toolchain/toolchain-mbedtee-mips/toolchain-mbedtee-mips.mk
--- buildroot-ori/toolchain/toolchain-mbedtee-mips/toolchain-mbedtee-mips.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-mips/toolchain-mbedtee-mips.mk	2025-06-11 11:20:17.329732062 +0800
@@ -0,0 +1,29 @@
+################################################################################
+#
+# toolchain-mbedtee-mips
+#
+################################################################################
+
+TOOLCHAIN_MBEDTEE_MIPS_VERSION = 15.1.0
+
+TOOLCHAIN_MBEDTEE_MIPS_NAME = toolchain-mbedtee-mips
+TOOLCHAIN_MBEDTEE_MIPS_INSTALL_DIR=$(HOST_DIR)/opt/$(TOOLCHAIN_MBEDTEE_MIPS_NAME)
+TOOLCHAIN_MBEDTEE_MIPS_BIN := $(TOOLCHAIN_MBEDTEE_MIPS_INSTALL_DIR)/bin
+
+TOOLCHAIN_MBEDTEE_MIPS_CROSS=$(TOOLCHAIN_MBEDTEE_MIPS_BIN)/mips-mbedtee-elf-
+TOOLCHAIN_MBEDTEE_MIPS_CC=$(TOOLCHAIN_MBEDTEE_MIPS_CROSS)gcc
+TOOLCHAIN_MBEDTEE_MIPS_CXX=$(TOOLCHAIN_MBEDTEE_MIPS_CROSS)g++
+TOOLCHAIN_MBEDTEE_MIPS_READELF=$(TOOLCHAIN_MBEDTEE_MIPS_CROSS)readelf
+
+TOOLCHAIN_MBEDTEE_MIPS_SITE = https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvYy9hZGU1YzFiOWU3MzhkYTRkL0VlOUtYR2VwTERWUGpENGpxRXVnMFM4QjYyZlFLLWU5S3FFckxNeGw2aUx2S0E_ZT04VzM3eXc
+TOOLCHAIN_MBEDTEE_MIPS_SOURCE = mips-mbedtee-elf-$(TOOLCHAIN_MBEDTEE_MIPS_VERSION).tar.bz2
+
+TOOLCHAIN_MBEDTEE_MIPS_NO_FASTBUILD = y
+
+define TOOLCHAIN_MBEDTEE_MIPS_EXTRACT_CMDS
+	mkdir -p $(TOOLCHAIN_MBEDTEE_MIPS_INSTALL_DIR)
+	$(call suitable-extractor,.tar.bz2) $(DL_DIR)/$(TOOLCHAIN_MBEDTEE_MIPS_NAME)/$(TOOLCHAIN_MBEDTEE_MIPS_SOURCE) | \
+		$(TAR) --strip-components=1 --exclude='usr/lib/locale/*' -C $(TOOLCHAIN_MBEDTEE_MIPS_INSTALL_DIR) $(TAR_OPTIONS) -
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-riscv32/Config.in buildroot/toolchain/toolchain-mbedtee-riscv32/Config.in
--- buildroot-ori/toolchain/toolchain-mbedtee-riscv32/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-riscv32/Config.in	2025-05-31 23:12:46.418393056 +0800
@@ -0,0 +1,6 @@
+config BR2_TOOLCHAIN_MBEDTEE_RISCV32
+	bool "mbedtee riscv32 toolchain"
+	depends on BR2_riscv && BR2_RISCV_32
+	help
+	  RISCV32 Toolchain with GCC
+
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-riscv32/--toolchain-mbedtee-riscv32.hash buildroot/toolchain/toolchain-mbedtee-riscv32/--toolchain-mbedtee-riscv32.hash
--- buildroot-ori/toolchain/toolchain-mbedtee-riscv32/--toolchain-mbedtee-riscv32.hash	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-riscv32/--toolchain-mbedtee-riscv32.hash	2025-05-31 23:12:46.418393056 +0800
@@ -0,0 +1,2 @@
+# Locally calculated
+sha256 c9363dfa7df877471bbe892b78d33637439fdbbeb5c77db71e31730f5f6e438e riscv32-mbedtee-elf-14.2.0.tar.bz2
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-riscv32/toolchain-mbedtee-riscv32.mk buildroot/toolchain/toolchain-mbedtee-riscv32/toolchain-mbedtee-riscv32.mk
--- buildroot-ori/toolchain/toolchain-mbedtee-riscv32/toolchain-mbedtee-riscv32.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-riscv32/toolchain-mbedtee-riscv32.mk	2025-06-06 20:18:29.134324715 +0800
@@ -0,0 +1,29 @@
+################################################################################
+#
+# toolchain-mbedtee-riscv32
+#
+################################################################################
+
+TOOLCHAIN_MBEDTEE_RISCV32_VERSION = 15.1.0
+
+TOOLCHAIN_MBEDTEE_RISCV32_NAME = toolchain-mbedtee-riscv32
+TOOLCHAIN_MBEDTEE_RISCV32_INSTALL_DIR=$(HOST_DIR)/opt/$(TOOLCHAIN_MBEDTEE_RISCV32_NAME)
+TOOLCHAIN_MBEDTEE_RISCV32_BIN := $(TOOLCHAIN_MBEDTEE_RISCV32_INSTALL_DIR)/bin
+
+TOOLCHAIN_MBEDTEE_RISCV32_CROSS=$(TOOLCHAIN_MBEDTEE_RISCV32_BIN)/riscv32-mbedtee-elf-
+TOOLCHAIN_MBEDTEE_RISCV32_CC=$(TOOLCHAIN_MBEDTEE_RISCV32_CROSS)gcc
+TOOLCHAIN_MBEDTEE_RISCV32_CXX=$(TOOLCHAIN_MBEDTEE_RISCV32_CROSS)g++
+TOOLCHAIN_MBEDTEE_RISCV32_READELF=$(TOOLCHAIN_MBEDTEE_RISCV32_CROSS)readelf
+
+TOOLCHAIN_MBEDTEE_RISCV32_SITE = https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvYy9hZGU1YzFiOWU3MzhkYTRkL0ViUUplSS12Q3B4Tm9SQ29jTkdkbTdnQmNFM19wcUtyNUZsaUV6QjJEM1F3blE_ZT1Nb3h2Zk8
+TOOLCHAIN_MBEDTEE_RISCV32_SOURCE = riscv32-mbedtee-elf-$(TOOLCHAIN_MBEDTEE_RISCV32_VERSION).tar.bz2
+
+TOOLCHAIN_MBEDTEE_RISCV32_NO_FASTBUILD = y
+
+define TOOLCHAIN_MBEDTEE_RISCV32_EXTRACT_CMDS
+	mkdir -p $(TOOLCHAIN_MBEDTEE_RISCV32_INSTALL_DIR)
+	$(call suitable-extractor,.tar.bz2) $(DL_DIR)/$(TOOLCHAIN_MBEDTEE_RISCV32_NAME)/$(TOOLCHAIN_MBEDTEE_RISCV32_SOURCE) | \
+		$(TAR) --strip-components=1 --exclude='usr/lib/locale/*' -C $(TOOLCHAIN_MBEDTEE_RISCV32_INSTALL_DIR) $(TAR_OPTIONS) -
+endef
+
+$(eval $(generic-package))
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-riscv64/Config.in buildroot/toolchain/toolchain-mbedtee-riscv64/Config.in
--- buildroot-ori/toolchain/toolchain-mbedtee-riscv64/Config.in	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-riscv64/Config.in	2025-05-31 23:12:46.418393056 +0800
@@ -0,0 +1,6 @@
+config BR2_TOOLCHAIN_MBEDTEE_RISCV64
+	bool "mbedtee riscv64 toolchain"
+	depends on BR2_riscv && BR2_RISCV_64
+	help
+	  RISCV64 Toolchain with GCC
+
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-riscv64/--toolchain-mbedtee-riscv64.hash buildroot/toolchain/toolchain-mbedtee-riscv64/--toolchain-mbedtee-riscv64.hash
--- buildroot-ori/toolchain/toolchain-mbedtee-riscv64/--toolchain-mbedtee-riscv64.hash	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-riscv64/--toolchain-mbedtee-riscv64.hash	2025-05-31 23:12:46.419393556 +0800
@@ -0,0 +1,2 @@
+# Locally calculated
+sha256 c9363dfa7df877471bbe892b78d33637439fdbbeb5c77db71e31730f5f6e438e riscv64-mbedtee-elf-14.2.0.tar.bz2
diff -uprN '--exclude=.*' '--exclude=dl' '--exclude=local.mk' buildroot-ori/toolchain/toolchain-mbedtee-riscv64/toolchain-mbedtee-riscv64.mk buildroot/toolchain/toolchain-mbedtee-riscv64/toolchain-mbedtee-riscv64.mk
--- buildroot-ori/toolchain/toolchain-mbedtee-riscv64/toolchain-mbedtee-riscv64.mk	1970-01-01 08:00:00.000000000 +0800
+++ buildroot/toolchain/toolchain-mbedtee-riscv64/toolchain-mbedtee-riscv64.mk	2025-06-12 21:36:05.372377858 +0800
@@ -0,0 +1,29 @@
+################################################################################
+#
+# toolchain-mbedtee-riscv64
+#
+################################################################################
+
+TOOLCHAIN_MBEDTEE_RISCV64_VERSION = 15.1.0
+
+TOOLCHAIN_MBEDTEE_RISCV64_NAME = toolchain-mbedtee-riscv64
+TOOLCHAIN_MBEDTEE_RISCV64_INSTALL_DIR=$(HOST_DIR)/opt/$(TOOLCHAIN_MBEDTEE_RISCV64_NAME)
+TOOLCHAIN_MBEDTEE_RISCV64_BIN := $(TOOLCHAIN_MBEDTEE_RISCV64_INSTALL_DIR)/bin
+
+TOOLCHAIN_MBEDTEE_RISCV64_CROSS=$(TOOLCHAIN_MBEDTEE_RISCV64_BIN)/riscv64-mbedtee-elf-
+TOOLCHAIN_MBEDTEE_RISCV64_CC=$(TOOLCHAIN_MBEDTEE_RISCV64_CROSS)gcc
+TOOLCHAIN_MBEDTEE_RISCV64_CXX=$(TOOLCHAIN_MBEDTEE_RISCV64_CROSS)g++
+TOOLCHAIN_MBEDTEE_RISCV64_READELF=$(TOOLCHAIN_MBEDTEE_RISCV64_CROSS)readelf
+
+TOOLCHAIN_MBEDTEE_RISCV64_SITE = https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvYy9hZGU1YzFiOWU3MzhkYTRkL0VmQTFlMVR3dUV4R204TTJrTFBnckVRQmRYNXRRNzVtaEE3bWV2bFh6TEVMN1E_ZT1YYnc4MTg
+TOOLCHAIN_MBEDTEE_RISCV64_SOURCE = riscv64-mbedtee-elf-$(TOOLCHAIN_MBEDTEE_RISCV64_VERSION).tar.bz2
+
+TOOLCHAIN_MBEDTEE_RISCV64_NO_FASTBUILD = y
+
+define TOOLCHAIN_MBEDTEE_RISCV64_EXTRACT_CMDS
+	mkdir -p $(TOOLCHAIN_MBEDTEE_RISCV64_INSTALL_DIR)
+	$(call suitable-extractor,.tar.bz2) $(DL_DIR)/$(TOOLCHAIN_MBEDTEE_RISCV64_NAME)/$(TOOLCHAIN_MBEDTEE_RISCV64_SOURCE) | \
+		$(TAR) --strip-components=1 --exclude='usr/lib/locale/*' -C $(TOOLCHAIN_MBEDTEE_RISCV64_INSTALL_DIR) $(TAR_OPTIONS) -
+endef
+
+$(eval $(generic-package))
